{"version":3,"file":"settings.js","sources":["../../node_modules/@toggl/track-extension/src/custom-scripts.js","../../src/ui/icons/PrivateIcon.tsx","../../src/ui/icons/ArrowIcon.tsx","../../src/ui/icons/PomodoroIcon.tsx","../../src/ui/icons/TelemetryIcon.tsx","../../src/ui/icons/QuestionIcon.tsx","../../src/ui/components/Card.tsx","../../node_modules/@toggl/track-types/src/index.ts","../../src/pages/settings/tabs/General/Projects/DefaultProject.tsx","../../src/pages/settings/tabs/General/Projects/RememberLast.tsx","../../src/pages/settings/tabs/General/Projects/index.tsx","../../src/pages/settings/tabs/General/Welcome.tsx","../../src/pages/settings/components/SwitchOption.tsx","../../src/pages/settings/tabs/General/StartingStopping.tsx","../../src/pages/settings/tabs/General/Reminders.tsx","../../src/lib/hooks/useIntersectionObserver.ts","../../src/pages/settings/tabs/General/Other.tsx","../../src/pages/settings/tabs/General/ResetAll.tsx","../../src/pages/settings/tabs/General/ClearCache.tsx","../../src/pages/settings/tabs/General/index.tsx","../../src/ui/icons/SearchIcon.tsx","../../src/pages/settings/tabs/Integrations/Integrations.tsx","../../src/pages/settings/tabs/Integrations/CustomURLs.tsx","../../src/pages/settings/components/onboardingBanner/hero.svg","../../src/pages/settings/components/onboardingBanner/index.tsx","../../src/pages/settings/tabs/Integrations/CustomScripts.tsx","../../src/pages/settings/tabs/Integrations/index.tsx","../../src/pages/settings/tabs/Telemetry.tsx","../../src/pages/settings/tabs/MyAccount.tsx","../../src/pages/settings/tabs/Pomodoro.tsx","../../src/ui/icons/WhatsNewIcon.tsx","../../src/pages/settings/tabs/WhatsNew/changelogHero.svg","../../src/pages/settings/tabs/WhatsNew/Banner.tsx","../../src/pages/settings/tabs/WhatsNew/changelog.ts","../../src/pages/settings/tabs/WhatsNew/index.tsx","../../src/pages/settings/Settings.tsx","../../src/pages/settings/index.tsx"],"sourcesContent":["export const CustomScripts = {\n  'script_a_shortcode': {\n    name: 'Custom Script For XYZ',\n    file: '_custom_SampleScript.js',\n  },\n  'nfJiraScript': {\n    name: 'Custom Jira Script',\n    file: '_custom_nf_jira.js',\n  },\n  'nfGitlabScript': {\n    name: 'Custom Gitlab Script',\n    file: '_custom_nf_gitlab.js',\n  },\n}","import * as React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { SVGProps } from 'react';\n\nexport default function PrivateIcon(props: SVGProps<SVGSVGElement>) {\n  const theme = useTheme();\n\n  return (\n    <svg width={16} height={17} xmlns='http://www.w3.org/2000/svg' {...props}>\n      <title>{'FCE896C2-EEB0-4D92-81BB-0413863AB002'}</title>\n      <path\n        d='M6.167 8.924c0 2-4.667 1.333-4.667 5.333v.496c0 .83.68 1.504 1.504 1.504H13.33a1.5 1.5 0 0 0 1.503-1.504v-.496c0-4-4.666-3.333-4.666-5.333 0-1.334 2-2 2-4.667 0-2-1.791-4-4-4-2.21 0-4 2-4 4 0 2.667 2 3.333 2 4.667Z'\n        fill={props.color || theme.colors.pale_peach.regular}\n        fillRule='evenodd'\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport { css, useTheme } from '@emotion/react';\nimport { SVGProps } from 'react';\n\nexport default function ArrowIcon(\n  props: SVGProps<SVGSVGElement> & { next?: boolean; disabled?: boolean }\n) {\n  const theme = useTheme();\n\n  return (\n    <svg\n      css={css`\n        transform: rotate(${getRotation(props.next)}deg);\n      `}\n      width={16}\n      height={16}\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      {...props}\n    >\n      <path\n        d='M8 0 5.333 2.667l4 3.333H0v4h9.333l-4 3.333L8 16l8-8-8-8Z'\n        fill={props.color || theme.colors.pale_peach.regular}\n      />\n    </svg>\n  );\n}\n\nfunction getRotation(next?: boolean) {\n  if (!next) return 180;\n  return 0;\n}\n","import * as React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { SVGProps } from 'react';\n\nexport default function PomodoroIcon(props: SVGProps<SVGSVGElement>) {\n  const theme = useTheme();\n\n  return (\n    <svg\n      width={16}\n      height={16}\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      {...props}\n    >\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M2.892 2.892C.862 3.938 0 5.477 0 8.615 0 12.8 1.97 15.877 8 16c5.846 0 8-1.846 8-8a5.538 5.538 0 0 0-2.892-5.17c-.493.432-.862.616-.8.862l1.846 3.077C12.86 7.631 8.124 5.54 8 5.54c-1.846 1.415-5.354.984-5.538.615-.247-.616 1.415-1.539 1.846-2.462-.554-.123-1.046-.492-1.416-.8Zm1.354-1.169c.985-.123 2.03.062 3.139.123C7.508 1.846 7.877 0 8 0c.185 0 1.108.246 1.23.615.062.247-.122 1.231 0 1.231.555 0 2.031-.615 3.078 0l.123.123c-.554.185-1.354.616-1.97 1.108-.492.492 2.216 2.708 1.231 2.461C9.17 4.923 8.308 4.062 8 4.308a6.77 6.77 0 0 1-3.692 1.23c.923-.923 2.03-2.461 1.846-2.461a4.615 4.615 0 0 1-1.908-1.354Z'\n        fill={props.color || theme.colors.pale_peach.regular}\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { SVGProps } from 'react';\n\nexport default function TelemetryIcon(props: SVGProps<SVGSVGElement>) {\n  const theme = useTheme();\n\n  return (\n    <svg\n      width={14}\n      height={16}\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      {...props}\n    >\n      <path\n        d='M3 0c-4 8 2.667 14.667 10.667 10.667L3 0Zm-.667 16h-2L5 12l4 4H7l-2-1.333L2.333 16ZM13.667 1.333A.745.745 0 0 1 12.333 2l-2 3.333-2-2 3.334-2V.667a1.333 1.333 0 0 1 2 .666Z'\n        fill={props.color || theme.colors.pale_peach.regular}\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { SVGProps } from 'react';\n\nexport default function QuestionIcon(props: SVGProps<SVGSVGElement>) {\n  const theme = useTheme();\n\n  return (\n    <svg\n      width={16}\n      height={16}\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n      {...props}\n    >\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16Zm0-3a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm0-8c.683 0 1.068.57.955 1.1-.077.362-.2.53-.623.908l-.052.046c-.83.741-1.202 1.316-1.278 2.416a1 1 0 0 0 1.996.138c.032-.476.135-.634.613-1.061l.053-.048c.711-.634 1.062-1.113 1.247-1.982A2.913 2.913 0 0 0 8 3c-1.572 0-2.501.84-3.057 2.145a1 1 0 0 0 1.84.784C7.057 5.285 7.373 5 8 5Z'\n        fill={props.color || theme.colors.pale_peach.regular}\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  header: JSX.Element;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport default function Card({ children, header }: Props) {\n  return (\n    <Root>\n      <Header>{header}</Header>\n      <Content>{children}</Content>\n    </Root>\n  );\n}\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 16px 24px 16px;\n  width: 100%;\n  border-radius: 8px;\n  background: ${({ theme }) => theme.colors.surface_primary.regular};\n  box-shadow: 0px 1px 4px ${({ theme }) => theme.colors.ui_10.regular};\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 53px;\n  padding: 16px 0;\n  box-shadow: inset 0 -1px 0 0 ${({ theme }) => theme.colors.ui_10.regular};\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nCard.Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 16px 0;\n  gap: 16px;\n\n  &:last-child {\n    padding: 16px 0 0 0;\n  }\n\n  &:not(:last-child) {\n    box-shadow: inset 0 -1px 0 0 ${({ theme }) => theme.colors.ui_10.regular};\n  }\n`;\n","import { DateTime } from 'luxon'\nimport moment, { type Moment } from 'moment'\n\nimport { type Theme } from '@toggl/style'\n\nimport type { AccountsUser } from './accounts'\nimport {\n  type ChartDescriptor,\n  type ChartDescriptorDraft,\n  type DashboardDescriptor,\n  type DashboardDescriptorDraft,\n  type DashboardGridItem,\n} from './analytics'\nimport type {\n  CalendarIntegration,\n  CalendarIntegrationCalendar,\n  CalendarIntegrationEvent,\n} from './calendarIntegrations'\nimport type { Jira2Integration, SalesforceIntegration } from './integrations'\nimport { type Invoice } from './invoices'\n\nexport * from './accounts'\nexport * from './analytics'\nexport * from './calendarIntegrations'\nexport * from './flow'\nexport * from './insights'\nexport * from './integrations'\nexport * from './invoices'\nexport * from './webhooks'\n\nexport type FlowDeprecatedAnyObject = any\nexport type FlowDeprecatedAnyFunction = any\nexport type FlowDeprecatedExistential = any\n\n// A type for a record that has not been synced with the server yet.\nexport type $Unsynced<T> = Omit<T, 'id' | 'at'>\n\nexport type RateChangeMode =\n  | 'start-today'\n  | 'override-all'\n  | 'override-current'\n  | 'custom'\n\nexport type ProjectDeletionMode = 'delete' | 'unassign'\n\ntype RateChangePayload = {\n  rate_change_mode?: RateChangeMode\n}\n\nexport type WithRateChangePayload<Entity> = Partial<Entity & RateChangePayload>\n\nexport type AvatarResponse = {\n  data: {\n    FileType: string\n    Name: string\n    avatar_urls: {\n      small: string\n      thumb: string\n    }\n  }\n}\n\nexport type WorkspaceLogo = {\n  data: {\n    FileType: string\n    Name: string\n    OldUrls: {\n      medium: string\n      thumb: string\n    }\n    logo_urls: {\n      medium?: string\n    }\n  }\n}\n\nexport type WorkspaceExport = ReadonlyArray<{\n  state: string\n  readonly token: string | null\n}>\n\nexport type WorkspaceExportData = {\n  readonly alerts?: boolean\n  readonly clients?: boolean\n  readonly invoices?: boolean\n  readonly projects?: boolean\n  readonly projects_users?: boolean\n  readonly saved_reports?: boolean\n  readonly scheduled_reports?: boolean\n  readonly tags?: boolean\n  readonly tasks?: boolean\n  readonly team?: boolean\n  readonly tracking_reminders?: boolean\n  readonly user_groups?: boolean\n  readonly workspace_settings?: boolean\n  readonly workspace_users?: boolean\n}\n\n// this is used for the new offline-first approach: currently only implemented for tags\nexport type EntitySyncError = {\n  readonly method: 'POST' | 'UPDATE' | 'PATCH' | 'DELETE'\n  readonly message: string\n  readonly name: string\n  readonly isNetworkError: boolean\n}\n\n// this is used for the new offline-first approach: currently only implemented for tags\nexport type Entity = {\n  readonly id: string // a local-only id\n  readonly serverId?: number // the actual server id\n  readonly at: string // time of last modification on the server\n  readonly server_deleted_at?: string | null // time of deletion on the server\n  readonly workspace_id: number\n  readonly __deleted?: boolean // true if the entity has been deleted locally\n  readonly __syncStatus?: 'syncing' | 'synced' | 'unsynced' | 'error'\n  readonly __syncError?: EntitySyncError\n}\n\nexport type RangeDates = {\n  readonly startDate: Moment\n  readonly endDate: Moment\n}\n\n// This is the single source of truth for our list of date range presets.\n// The period dates are specified in getDateRanges and the labels are\n// defined in rangeMessages below.\nexport type RangeDatesMap = {\n  readonly today: RangeDates\n  readonly yesterday: RangeDates\n  readonly thisWeek: RangeDates\n  readonly weekToDate: RangeDates\n  readonly prevWeek: RangeDates\n  readonly last2Weeks: RangeDates\n  readonly thisMonth: RangeDates\n  readonly prevMonth: RangeDates\n  readonly monthToDate: RangeDates\n  readonly last30Days: RangeDates\n  readonly last90Days: RangeDates\n  readonly last12Months: RangeDates\n  readonly thisYear: RangeDates\n  readonly prevYear: RangeDates\n}\n\nexport type PredefinedRange = keyof RangeDatesMap\n\n// operation sent to backend when bulk editing entities\nexport type BulkEditOperation = {\n  readonly op: 'replace' | 'add' | 'remove'\n  readonly path: string\n  readonly value: unknown\n}\n\nexport type BulkEditResponse = {\n  readonly success: ReadonlyArray<number>\n  readonly failure: ReadonlyArray<{\n    id: number\n    message: string\n  }>\n}\n\nexport type Invitation = {\n  readonly code: string\n  readonly sender_name: string\n  readonly email: string\n  readonly sso: boolean\n}\n\nexport type WorkspaceMembership = {\n  /** Workspace ID */\n  id: number\n  /** Workspace Name */\n  name: string\n  /** Admin or member */\n  admin: boolean\n  /** Admin role */\n  /// Note is accepting undefined for now but after the full release it should be either null | UserRole\n  role?: null | UserRole\n}\n\nexport type Amount = {\n  readonly currency: string\n  readonly value: number\n}\n\nexport type SummaryReportAuditFilters = {\n  showEmptyGroups?: boolean\n  minGroupDuration?: number | null\n  maxGroupDuration?: number | null\n  minGroupAmount?: number | null\n  maxGroupAmount?: number | null\n  currency?: string | null\n}\n\nexport type SharedReportParams = {\n  end_date?: string\n  start_date?: string\n  readonly first_row_number?: number | null // used by Detailed Reports\n  readonly first_timestamp?: number | null // used by other reports\n  page_size?: number\n  // NA parameters\n  resource?: 'chart' | 'dashboard'\n  chart_id?: number\n  is_totals?: boolean\n}\n\ntype SharedReportDictionaries = {\n  readonly users: null | Readonly<Record<string, ReportsDataUser>>\n  readonly user_groups: null | Readonly<Record<string, Group>>\n  readonly projects: null | Readonly<Record<string, Project>>\n  readonly clients: null | Readonly<Record<string, ReportsDataClient>>\n  readonly tags: null | Readonly<Record<string, Tag>>\n  readonly tasks: null | Readonly<Record<string, TaskV9>>\n}\n\nexport type SharedReportApi = SharedReportDataApi &\n  SharedReportMetaApi & {\n    readonly dictionaries: SharedReportDictionaries & {\n      readonly filters?: SharedReportDictionaries\n    }\n  }\n\ntype SharedReportDataApi = {\n  readonly weekly_results?: {\n    report: WeeklyReportEntries\n    totals: ReportsSearchTotals\n  }\n  readonly summary_results?: {\n    report: ReportsSummary\n    totals: ReportsSearchTotals\n  }\n  readonly detailed_results?: {\n    report: ReportsSearchTimeEntries\n    totals: ReportsSearchTotals\n  }\n}\n\ntype SharedReportMetaApi = {\n  readonly public: boolean\n  readonly report_type: 'details' | 'summary' | 'weekly'\n  readonly fixed_daterange: boolean\n  readonly report_name: string\n  readonly hide_amounts: boolean\n  readonly input_params: {\n    readonly end_date: string\n    readonly start_date: string\n  }\n  readonly workspace_logo: string\n  readonly features: {\n    readonly report_export_xlsx: boolean\n  }\n  readonly saved_params: WeeklySavedParams\n  readonly pagination: {\n    readonly pageSize: number\n    readonly nextRowNumber?: number\n    readonly rangeEnd?: string\n    readonly rangeStart?: string\n  }\n}\n\nexport type WeeklySavedParams = {\n  readonly audit: {\n    readonly show_empty_groups: ReportsParams['audit']['show_empty_groups']\n    readonly show_tracked_groups: ReportsParams['audit']['show_tracked_groups']\n    readonly group_filter: Partial<ReportsParams['audit']['group_filter']>\n  }\n  readonly bars_count: number\n  readonly billable: 'yes' | 'no' | 'both'\n  readonly calculate: 'time'\n  readonly client_ids: null | string\n  readonly date_format: UserDateFormat\n  readonly description: null | string\n  readonly distinct_rates: string // \"on\",\n  readonly grouping: ReportsGrouping // \"projects\",\n  readonly grouped?: boolean\n  readonly hide_amounts: boolean\n  readonly or_members_of_group_ids: null | ReadonlyArray<number>\n  readonly order_desc: string // \"off\",\n  readonly order_field: ReportsParams['order_by'] // \"title\",\n  readonly period: string // \"thisWeek\",\n  readonly project_ids: null | ReadonlyArray<number>\n  readonly report_type: ReportTypes\n  readonly since: string // \"2020-02-24\",\n  readonly subgrouping: ReportsSubGrouping // \"time_entries\",\n  readonly subgrouping_ids: boolean\n  readonly tag_ids: null | ReadonlyArray<number>\n  readonly task_ids: null | ReadonlyArray<number>\n  readonly until: string // \"2020-03-01\",\n  readonly user_agent: string // \"Toggl New 5.9.13-development-12992/wEeKlY-rEpOrT\",\n  readonly user_ids: null | ReadonlyArray<number>\n  readonly with_total_currencies: number // 1,\n  readonly without_description: string // \"false\",\n  readonly workspace_id: number // 4026496,\n  readonly canSeeBillableRates: boolean\n  readonly isPaid: boolean\n  readonly maximum_duration_seconds: null | number\n  readonly min_duration_seconds: null | number\n  readonly beginningOfWeek: number\n  readonly time_display_mode?: ReportsAppTimeDisplayMode\n  readonly time_format?: 'h:mm A' | 'H:mm' | 'HH:mm' // H:mm is here for legacy purposes but is no longer valid\n  readonly durationFormat: ReportsParams['duration_format']\n  readonly snowballRounding: {\n    readonly enabled: boolean\n    readonly minutes: ReportsParams['rounding_minutes']\n    readonly mode: ReportsParams['rounding']\n  }\n  readonly groups: ReadonlyArray<number>\n  readonly SummaryReportAmounts: ReportsAmountsControl\n  readonly showAmounts: boolean\n  readonly showRates: boolean\n}\n\nexport const allClientPermissions: {\n  readonly update?: true\n  readonly remove?: true\n  readonly archive?: true\n} = {\n  update: true,\n  remove: true,\n  archive: true,\n}\nexport type ClientServer = Client & {\n  readonly permissions?: Array<'update' | 'remove' | 'archive'>\n}\nexport type Client = {\n  readonly at: string\n  readonly id: number\n  readonly name: string\n  readonly wid: number\n  readonly archived: boolean\n  readonly permissions?: {\n    /** Make changes to existing clients */\n    readonly update?: true\n    readonly remove?: true\n    readonly archive?: true\n  }\n}\n\nexport type ClientsFilter = {\n  readonly name?: string\n  readonly active?: boolean | 'both'\n}\n\nexport type Country = {\n  readonly country_code: string\n  readonly default_currency_id: number\n  readonly id: number\n  readonly name: string\n  readonly vat_applicable: boolean\n  readonly vat_percentage: number | null | undefined\n  readonly vat_regex?: string | null\n}\n\nexport type CountryState = {\n  readonly country_subdivision_id: number\n  readonly country_id: number\n  readonly company_id: number\n  readonly iso_code: string\n  readonly name: string\n}\n\nexport type Currency = {\n  readonly currency_id: number\n  readonly iso_code: string\n  readonly symbol: string\n}\n\nexport type BaseUser = {\n  readonly api_token: string\n  readonly at: string\n  readonly email: string\n  readonly fullname: string\n  readonly id: number\n  readonly image_url: string\n  readonly timezone: string\n  readonly toggl_accounts_id?: string\n}\n\nexport type CurrentUser = BaseUser & {\n  readonly beginning_of_week: number\n  readonly country_id?: null | number\n  readonly created_at: string\n  readonly default_workspace_id: number | null | undefined\n  readonly default_wid: number | null | undefined\n  readonly intercom_hash?: string | null\n  // TODO: This property doesn't come from the server, but is assigned by us, so\n  // we should move this elsewhere.\n  readonly timeOffset: number\n  readonly has_password: boolean\n  // TODO: same as above, this is a client-side property.\n  readonly has_plan_account?: boolean\n  readonly plan_integration_enabled_by_ws_id?: Record<number, boolean>\n  readonly oauth_providers: OAuthProvider[]\n  readonly openid_email: string | null\n  readonly openid_enabled: boolean\n  readonly updated_at: string\n}\n\nexport type CurrentUserSettings = Omit<\n  CurrentUser,\n  | 'api_token'\n  | 'at'\n  | 'created_at'\n  | 'default_workspace_id'\n  | 'id'\n  | 'image_url'\n  | 'openid_email'\n  | 'openid_enabled'\n  | 'updated_at'\n>\n\nexport type CsvValidationResponse = {\n  data: {\n    readonly error: number\n    readonly clients: number\n    readonly projects: number\n    readonly users: number\n    readonly time_entries: number\n    readonly tasks: number\n    readonly tags: number\n    readonly upload_id: number\n    readonly log_id: number\n    readonly confirmable: boolean\n    readonly needs_upgrade: boolean\n  }\n}\n\nexport type CsvStatusResponse = {\n  data: {\n    readonly status: 'Running' | 'Completed'\n  }\n}\n\nexport type CsvValidationData = {\n  readonly file: File\n  readonly workspaceId: number\n  readonly apiToken: string\n}\n\nexport type CsvImportData = {\n  readonly uploadId: number\n  readonly apiToken: string\n  readonly workspaceId: number\n  readonly sendInvites: boolean\n}\n\nexport type DeletedUser = {\n  readonly id: number\n  readonly deleted_at: string\n}\n\nexport type Flags = {\n  readonly 'analytics.dashboard_trial_ending_seen'?: boolean\n  readonly 'analytics.onboarding_start_fresh_completed'?: boolean\n  readonly 'analytics.onboarding_steps_completed'?: number\n  readonly 'analytics.template_charts_created'?: string\n  readonly 'analytics.trial_ending_seen'?: boolean\n  readonly 'announcements.generic_campaign_seen'?: number\n  readonly 'announcements.upsell_free_trial'?: boolean\n  readonly 'badges.master_seen'?: string\n  readonly 'banner.upgrade_browser_seen'?: number\n  readonly 'calendar.default_range_insights'?: PredefinedRange\n  readonly 'calendar.default_range_reports'?: PredefinedRange\n  readonly 'calendar.default_range_approvals'?: PredefinedRange\n  readonly 'detailed_reports.is_amount_visible'?: boolean\n  readonly 'detailed_reports.time_display_mode'?: ReportsAppTimeDisplayMode\n  readonly 'integrations.salesforce_survey_sent'?: number | 'dismiss'\n  readonly 'multi_workspace.contact_request_sent'?: boolean\n  readonly 'nav.analytics_prompt_state'?: 'not-seen' | 'seen' | 'dismissed'\n  readonly 'nav.approvals_prompt_state'?: 'not-seen' | 'seen' | 'dismissed'\n  readonly 'newfeature.external_event_copy'?: number\n  readonly 'newfeature.organization_already_landed'?: boolean\n  readonly 'notifications.hbr_scheduling_intro_seen'?: boolean\n  readonly 'notifications.new_analytics_templates_intro_seen'?: boolean\n  readonly 'notifications.new_analytics_group_by_tag_intro_seen'?: boolean\n  readonly 'notifications.new_analytics_pdf_intro_seen'?: boolean\n  readonly 'notifications.new_analytics_sharing_admins_access_seen'?: boolean\n  readonly 'notifications.new_analytics_sharing_intro_seen'?: boolean\n  readonly 'notifications.new_analytics_sharing_warning_seen'?: boolean\n  readonly 'notifications.new_analytics_acd_ecd_intro_seen'?: boolean\n  readonly 'notifications.new_date_presets_intro_seen'?: boolean\n  readonly 'notifications.quickbooks_integration_intro_seen'?: boolean\n  readonly 'onboarding.active_step'?: string\n  readonly 'onboarding.calendar_integration_seen'?: number\n  readonly 'onboarding.description_popdowns_seen'?: number\n  readonly 'onboarding.favorites_create_seen'?: boolean\n  readonly 'onboarding.favorites_generated_step'?: 'generated' | 'done'\n  readonly 'onboarding.favorites_has_created_favorite'?: boolean\n  readonly 'onboarding.teams_first_member_invited'?: boolean\n  readonly 'onboarding.timer_calendar_seen'?: number\n  readonly 'onboarding.tag_teammates_coachmark_seen'?: boolean\n  readonly 'pref.desc_shortcuts'?: number | null\n  readonly 'settings.animation_enabled'?: boolean\n  readonly 'timer.calendar_bulk_copy_tooltip_seen'?: boolean\n  readonly 'timer.show_selected_workspace_only'?: boolean\n  readonly 'trial.available_notification_seen'?: string\n  readonly 'trial.ending_last_notice_seen'?: string\n  readonly 'trial.ending_notification_seen'?: string\n  readonly 'trial.seen_ended_dialog'?: string\n  readonly 'trial.seen_ending_dialog'?: string\n  readonly has_seen_project_dashboard_intro?: boolean\n  readonly has_seen_toggl_master_campaign?: boolean\n  readonly has_seen_workspaces_tooltip?: boolean\n  readonly shopify_discount_enabled?: boolean\n  readonly test?: string\n}\n\nexport type Group = {\n  readonly at: string\n  readonly id: number\n  readonly name: string\n  readonly workspace_id: number\n}\n\nexport type Locale = 'en-US' | 'pt-BR' | 'xx-unicorn' | 'xx-zalgo'\n\nexport type Location = {\n  readonly city: string\n  readonly country_code: string\n  readonly country_name: string\n  readonly state: string\n}\n\nexport type Login =\n  | {\n      readonly email: string\n      readonly password: string\n    }\n  | {\n      readonly apiToken: string\n    }\n  | {\n      readonly code: string\n      readonly method: 'google_code'\n    }\n  | {\n      readonly token: string\n      readonly method: 'apple_token'\n    }\n\nexport type LostPasswords = {\n  readonly email: string\n}\n\nexport type LostPasswordsNewPassword = {\n  readonly code: LostPasswordsToken\n  readonly password: string\n  readonly user_id: number\n}\n\nexport type LostPasswordsToken = string\n\nexport type LostPasswordsUser = {\n  readonly user_id: number\n}\n\nexport type ContactRequest = {\n  readonly Email: string\n  readonly Message: string\n  readonly Name: string\n}\n\nexport type MasterRequest = {\n  readonly Email: string\n  readonly Location: string\n  readonly Message: string\n  readonly Phone: string\n  readonly Plan: string\n  readonly TeamSize: string\n}\n\nexport type MeetRequest = {\n  readonly email: string\n  readonly location: string\n}\n\nexport type SubscribeParams = {\n  readonly country_code: string\n  readonly payment_type: string\n  readonly profile: string\n  readonly workspace_id: string\n}\n\nexport type PaymentsResponse = {\n  readonly message: string\n}\n\nexport type Unsubscribe = {\n  readonly code: string\n  readonly unsubType: string\n}\n\nexport type FeedbackData = {\n  readonly subject?: string\n  readonly details: string\n  readonly date: string\n  readonly toggl_version: string\n}\n\nexport type DemoRequest = {\n  readonly Email: string\n  readonly Phone: string\n  readonly Purpose: string\n  readonly Source: string\n  readonly TeamSize: string\n}\n\nexport type SsoBeginRequest = {\n  readonly email: string\n  readonly client: 'webapp' | 'toggl-button' | 'client'\n}\n\nexport type SsoEnableRequest = {\n  readonly email: string\n  readonly confirmation_code: string\n}\n\nexport type PaymentRecordType = 'invoice' | 'payment' | 'purchase_order'\n\nexport type PaymentRecord = {\n  readonly creation_date: string\n  readonly currency: string\n  readonly currency_id: number\n  readonly description: string\n  readonly id: number | null\n  readonly uid: string | null\n  readonly initial_id: number | null\n  readonly record_type: PaymentRecordType\n  readonly total_amount: number\n}\n\nexport type InvoiceItem = {\n  readonly id: string\n  readonly invoice_number: string\n  readonly creation_date: string\n  readonly description: string\n  readonly total_amount: number\n  readonly currency: string\n  readonly hosted_url: string\n  readonly pdf_url: string\n}\n\nexport type InvoiceSummary = {\n  currency: string\n  total_amount: number\n  total_tax_amount: number\n  total_discount_amount: number\n}\n\nexport type InvoiceSummaryPrecalculated = InvoiceSummary & {\n  billing_cycle: 'annual' | 'monthly'\n  seats: number\n}\n\nexport type SegmentationRecord = {\n  readonly demo_requested: boolean\n  readonly full_name: string\n  readonly heard: string[]\n  readonly industries: string[]\n  readonly members_range: string\n  readonly organization_id: number\n  readonly reasons: string[]\n  readonly skipped_step: string\n  readonly user_id: number\n}\n\nexport type RecurringProjectPeriod = {\n  readonly start_date: string\n  readonly end_date: string\n}\n\nexport type RecurringProjectPeriodType =\n  | 'weekly'\n  | 'monthly'\n  | 'quarterly'\n  | 'yearly'\n  | 'custom'\n\nexport type Project = {\n  readonly active: boolean\n  readonly actual_hours?: number | null\n  readonly actual_seconds?: number | null\n  readonly at: string\n  readonly auto_estimates: boolean\n  readonly billable: boolean\n  readonly cid?: number | null\n  readonly client_id?: number | null\n  readonly color: string\n  readonly created_at: string\n  readonly currency?: string | null\n  readonly end_date?: string | null\n  readonly estimated_hours?: number | null\n  readonly estimated_seconds?: number | null\n  readonly fixed_fee: number | null\n  readonly id: number\n  readonly is_private: boolean\n  readonly is_shared: boolean\n  readonly name: string\n  readonly rate?: number | null\n  readonly rate_last_updated?: string | null\n  readonly shared_hash?: string | null\n  readonly shared_at?: string | null\n  readonly start_date: string\n  readonly server_deleted_at?: string | null\n  readonly template: boolean\n  readonly workspace_id: number\n  readonly wid: number\n  readonly current_period?: RecurringProjectPeriod | null\n  readonly recurring_parameters?: ReadonlyArray<ProjectRecurringParameter> | null\n  readonly recurring: boolean\n  readonly first_time_entry?: string\n}\n\ntype NoProject = { id: null; name: string }\n\nexport type Generic = {\n  type: 'generic'\n  id: string\n  name: string\n}\n\nexport type ProjectChanges = {\n  project: Project | NoProject\n  task: Task | null\n  workspaceId: number\n  generic?: Generic | null\n  client?: Client | null\n}\n\nexport type PopdownChanges = {\n  readonly itemsToSelect: ReadonlyArray<string>\n  readonly itemsToDeselect: ReadonlyArray<string>\n  readonly itemsToCreate: ReadonlyArray<FlowDeprecatedAnyObject>\n}\n\nexport type AutocompleteChanges = {\n  description: string\n  wid?: number\n  pid?: number | null\n  tid?: number | null\n  billable?: boolean | null | undefined\n}\n\nexport type ProjectBillableAmountsResponse = {\n  project_id: number\n  billable_amount: number\n}\n\nexport type ProjectCreateFormValues = {\n  auto_estimates: boolean\n  billable: boolean\n  client_id: number | null\n  color: string\n  currency: string\n  estimated_hours: number | null\n  estimates: boolean\n  fixed_fee: number | null\n  is_new_fixed_fee_enabled?: boolean\n  is_private: boolean\n  name: string\n  new_client: Client | null\n  rate: number | null\n  schedule_rate_date: Moment | null\n  recurring: boolean\n  recurring_parameters: {\n    period: string\n  }\n  start_date: string\n  template: number | null\n  workspace_id: number\n}\n\nexport type ProjectCreateProperties = Omit<\n  Project,\n  | 'actual_hours'\n  | 'at'\n  | 'created_at'\n  | 'current_period'\n  | 'id'\n  | 'server_deleted_at'\n  | 'workspace_id'\n> & {\n  recurring_parameters: ProjectRecurringParameter | null\n  template_id?: number\n} & RateChangePayload\n\nexport type ProjectRecurringParameter = {\n  custom_period: number | null | undefined\n  estimated_seconds: number\n  parameter_end_date?: string | null // N.B. end date is inclusive.\n  parameter_start_date: string\n  period: RecurringProjectPeriodType\n}\n\n// A Template is considered its own resource, but is in fact simply a Project.\nexport type ProjectTemplate = Project\n\nexport type Since = number | null\n\nexport type SignupUser =\n  | (BaseUser & {\n      readonly has_account?: string\n    })\n  | {\n      readonly has_account: string\n      readonly id: number\n    }\n  | {\n      readonly sso_url: string\n      readonly has_account?: string\n      readonly id: number\n    }\n  | {\n      readonly sso_login_url: string\n      readonly has_account?: string\n      readonly id: number\n    }\n\nexport type SubscriptionPurchaseOrder = {\n  readonly amount_in_usd: number\n  readonly cancelled_at?: string | null\n  readonly company_address: string\n  readonly company_name: string\n  readonly contact_person: null // TODO: this is missing.\n  readonly country_id: number\n  readonly country_name: string\n  readonly created_at?: string | null\n  readonly creator_id: number\n  readonly currency: string\n  readonly deleted_at?: string | null\n  readonly id: number\n  readonly paid_at?: string | null\n  readonly users_in_workspace: number\n  readonly vat_number: number | null | undefined\n  readonly vat_percentage: number | null | undefined\n  readonly vat_valid: boolean\n  readonly vat_validated_at?: string | null\n  readonly workspace_id: number\n}\n\n// Tag before it is created, only the actual data\nexport type TagDraft = {\n  readonly name: string\n  readonly workspace_id: number\n}\n\nexport type TagServer = {\n  readonly id: number\n  readonly name: string\n  readonly workspace_id: number\n  readonly at: string\n  // TODO: API inconsistency, should be server_deleted_at: https://github.com/toggl/backend/issues/8746 - 2019-02-07\n  readonly deleted_at?: string\n  readonly permissions?: Array<'update' | 'remove'>\n}\n\n// TODO: This has nothing to do with Toggl types. Move me somewhere else.\nexport type TagUpdate = {\n  readonly id: string\n  readonly name: string\n  readonly workspace_id: number\n  readonly at: string\n}\n\n// Tag that is used within webapp\nexport type Tag = Entity & {\n  readonly name: string\n  readonly permissions?: {\n    /** Make changes to existing tags */\n    readonly update?: true\n    readonly remove?: true\n  }\n}\n\nexport type Task = {\n  readonly active: boolean\n  readonly at?: string | null\n  readonly estimated_seconds: number\n  readonly id: number\n  readonly name: string\n  readonly pid: number\n  readonly tracked_seconds: number\n  readonly wid: number\n}\n\n// TODO: rename this to Task once we migrate tasks to v9 fully - 2019-09-19\nexport type TaskV9 = {\n  readonly active: boolean\n  readonly at?: string | null\n  readonly estimated_seconds: number\n  readonly id: number\n  readonly name: string\n  readonly project_id: number\n  readonly tracked_seconds: number\n  readonly workspace_id: number\n  readonly user_id: number | null | undefined // the assigned user\n  readonly project_color?: string | null\n  readonly project_name?: string | null\n  readonly client_name?: string | null\n}\n\n// TODO: we're supposed to be using project_id, task_id, etc. yet the data store doesn't have those props yet.\nexport type TimeEntry = {\n  readonly at: string\n  readonly billable: boolean\n  readonly client_name?: string | null\n  readonly description: string\n  readonly duration: number\n  readonly duronly: boolean\n  readonly id: number\n  readonly pid?: number | null\n  readonly project_active?: boolean | null\n  readonly project_id?: number | null\n  readonly project_name?: string | null\n  readonly project_color?: string | null\n  readonly server_deleted_at?: string | null\n  readonly shared_with?: ReadonlyArray<TimeEntrySharedWith>\n  readonly shared_with_user_ids?: ReadonlyArray<number>\n  readonly start: string\n  readonly stop?: string | null\n  // the tags are directly referred to by name instead of id (todo: refer to ids and convert right before syncing instead).\n  readonly tags?: ReadonlyArray<string> | null\n  readonly task_name?: string | null\n  readonly tid?: number | null\n  readonly uid: number\n  readonly user_id: number\n  readonly wid: number\n}\n\nexport type TempTimeEntry = TimeEntry & {\n  readonly __deleted?: boolean\n  readonly uid?: TimeEntry['uid'] | null\n  readonly stop?: TimeEntry['stop'] | null\n  readonly start?: TimeEntry['start'] | null\n  readonly user_id?: TimeEntry['user_id'] | null\n  readonly duronly?: TimeEntry['duronly'] | null\n  readonly at?: TimeEntry['at'] | null\n  readonly server_deleted_at?: TimeEntry['server_deleted_at'] | null\n  readonly _tempId?: number | null\n  readonly groupBy?: string\n  readonly tag_ids?: ReadonlyArray<number>\n  readonly unsynced?: boolean | null\n}\n\nexport type TimeEntryInvitation = {\n  time_entry_invitation_id: number\n  workspace_id: number\n  shared_by_user_id: number\n  shared_by_user_name: string\n  time_entry?: TimeEntryV9\n}\n\nexport type TimeEntrySharedWith = {\n  user_id: number\n  user_name: string\n  accepted?: boolean | null\n}\n\n// TODO: Collapse this with :point_up: when `tag_ids`, so forth, become available.\nexport type TimeEntryV9 = {\n  readonly at: string\n  readonly billable: boolean\n  readonly description: string\n  readonly duration: number\n  readonly duronly: boolean\n  readonly id: number\n  readonly project_id?: number | null\n  readonly server_deleted_at?: string | null\n  readonly shared_with?: ReadonlyArray<TimeEntrySharedWith>\n  readonly start: string\n  readonly stop?: string | null\n  readonly tag_ids?: ReadonlyArray<number> | null\n  readonly tags?: ReadonlyArray<string> | null\n  readonly task_id?: number | null\n  readonly user_id: number\n  readonly workspace_id: number\n}\n\nexport type TimeEntryRequest = {\n  readonly at: string\n  readonly billable: boolean\n  readonly created_with: string\n  readonly description: string\n  readonly duration: number\n  readonly duronly?: boolean\n  readonly project_id?: number | null\n  readonly start: string\n  readonly stop?: string\n  readonly tags: null | ReadonlyArray<string>\n  readonly tag_ids: ReadonlyArray<number> | null\n  readonly task_id?: number\n  readonly user_id?: number\n  readonly workspace_id: number\n}\n\nexport type TimeEntryParams = {\n  readonly billable: boolean\n  readonly created_with: string\n  readonly description: string\n  readonly duration: number\n  readonly pid?: number\n  readonly shared_with_user_ids?: number[]\n  readonly start: string\n  readonly stop: string\n  readonly tags: string[]\n  readonly tid?: number\n  readonly wid: number\n}\n\n/** Either the description or project must be present to create a favorite */\n\nexport type Favorite = {\n  readonly billable: boolean\n  readonly public: boolean\n  readonly description: string | null\n  readonly favorite_id: number\n  readonly project_id: number | null\n  readonly rank: number\n  readonly tag_ids: number[] | null\n  readonly task_id: number | null\n  readonly workspace_id: number\n  readonly project_name?: string | null\n  readonly project_color?: string | null\n  readonly task_name?: string | null\n  readonly user_id?: number\n}\n\nexport type TimelineEvent = {\n  readonly desktop_id: string\n  readonly end_time: number\n  readonly filename: string\n  readonly idle: boolean\n  readonly start_time: number\n  readonly title: string\n}\n\nexport type ShortResolution = 'day' | 'week' | 'month'\nexport type Resolution = 'day' | 'week' | 'month' | 'quarter'\n\n/** Enum to represent the billable reports control */\n\nexport type ReportsAmountsControl =\n  /** Hide both amount and rates */\n  | 'none'\n  /** Show amounts hide rates */\n  | 'amounts'\n  /** Show both rates and amounts */\n  | 'all'\n\n/** Enum to represent valid date formats */\n\nexport type UserDateFormat =\n  | 'MM/DD/YYYY'\n  | 'DD-MM-YYYY'\n  | 'MM-DD-YYYY'\n  | 'YYYY-MM-DD'\n  | 'DD/MM/YYYY'\n  | 'DD.MM.YYYY'\n\nexport type User = {\n  readonly active: boolean\n  readonly admin: boolean\n  readonly at: string\n  readonly avatar_file_name?: string | null\n  readonly email: string\n  readonly group_ids: ReadonlyArray<number> | null | undefined\n  readonly id: number\n  readonly inactive: boolean | null | undefined\n  readonly invitation_code?: string | null\n  readonly invite_url?: string | null\n  readonly labour_cost: number | null | undefined\n  readonly name: string\n  readonly owner: boolean\n  readonly rate: number | null | undefined\n  readonly rate_last_updated?: string | null\n  readonly role?: UserRole | null\n  readonly timezone: string\n  readonly uid: number\n  readonly wid: number\n  readonly workspaceUserId: number\n}\n\nexport type AdminRole = 'admin' | 'projectlead' | 'teamlead' | 'org_admin'\nexport type UserRole = AdminRole | 'user'\n\nexport type WorkspaceUser = {\n  readonly active: boolean\n  readonly admin: boolean\n  readonly at: string\n  readonly avatar_file_name?: string | null\n  readonly email: string\n  readonly group_ids: ReadonlyArray<number> | null | undefined\n  readonly id: number\n  readonly inactive: boolean | null | undefined\n  readonly invitation_code?: string | null\n  readonly invite_url?: string | null\n  readonly is_direct: boolean\n  readonly labour_cost: number | null | undefined\n  readonly name: string\n  readonly rate: number | null | undefined\n  readonly rate_last_updated?: string | null\n  readonly role?: UserRole\n  readonly timezone: string\n  readonly user_id: number\n  readonly workspace_id: number\n  readonly working_hours_in_minutes: number | null\n  readonly organization_admin: boolean\n}\n\nexport type AlphaFeatureCode =\n  | 'alpha_program'\n  | 'analytics_exports'\n  | 'authorization_team_page'\n  | 'duration_only_te'\n  | 'fixed_fee_async_fetch'\n  | 'new_members_page'\n  | 'multi_workspace'\n  | 'multi_workspace_payments'\n  | 'only_admins_may_create_tags_setting'\n  | 'project_end_date'\n  | 'public_favorite'\n  | 'scheduled_emails'\n  | 'shared_projects'\n  | 'shared_sso'\n  | 'shared_te'\n  | 'snowball_i18n'\n  | 'solo_user_campaign'\n  | 'timer_totals_format_experiment'\n  | 'timer_unification_duration'\n  | 'unified_subscriptions'\n  | 'v3_excel_export'\n  | 'webapp_exports'\n  | 'webapp_permissions'\n\nexport type AlphaFeature = {\n  readonly code: AlphaFeatureCode\n  readonly enabled: boolean\n}\n\nexport type CloseAccountData = {\n  readonly comments: string\n  readonly closing_options: {\n    readonly question: number\n    readonly variants: ReadonlyArray<number>\n  }\n}\n\nexport type EventDetailsSuggestion = {\n  readonly accuracy: number\n  readonly billable: boolean\n  readonly last_seen: string\n  readonly project_id: number | null\n  readonly tag_ids: number[] | null\n  readonly task_id: number | null\n  readonly workspace_id: number\n}\n\nexport type MeEnableOAuthApple =\n  | {\n      readonly enabled: false\n    }\n  | {\n      readonly enabled: true\n      readonly token: string\n    }\n\nexport type MeEnableOAuthGoogle =\n  | {\n      readonly enabled: false\n    }\n  | {\n      readonly enabled: true\n      readonly code: string\n    }\n\nexport type OAuthProvider = 'google' | 'apple'\n\nexport type OAuthGoogleURL = {\n  readonly url: string\n}\n\nexport type AppleIdSignInResponse = {\n  readonly authorization: {\n    readonly code: string\n    readonly id_token: string\n    readonly state?: string\n  }\n  readonly user?: {\n    readonly email: string\n    readonly name?: { readonly firstName: string; readonly lastName: string }\n  }\n}\n\nexport type AppleIdSignInError = {\n  readonly error: string\n}\n\nexport type ObmValues = {\n  readonly seenInsights?: boolean\n  readonly seenNewInsightsTrendsChartTooltip?: boolean\n  readonly seenTeamPageLabourCostTooltip?: boolean\n  readonly seenTimelineIntroDialog?: boolean\n  readonly seenWorkspaceTooltip?: boolean\n}\n\ntype SignupBase = {\n  readonly country_id?: number\n  readonly created_with?: string\n  readonly full_name?: string\n  readonly referral?: string\n  readonly timezone?: string\n  readonly tos_accepted: boolean\n  readonly workspace: {\n    readonly initial_pricing_plan: PricingPlan\n    readonly name?: string\n    readonly initial_trial?: boolean\n  }\n}\n\nexport type Signup =\n  | (SignupBase & {\n      readonly email: string\n      readonly password: string\n    })\n  | (SignupBase & {\n      readonly code: string\n      readonly provider: 'google'\n    })\n  | (SignupBase & {\n      readonly token: string\n      readonly provider: 'apple'\n    })\n  | {\n      readonly created_with?: string\n      readonly timezone?: string\n      readonly tos_accepted: boolean\n      readonly email: string\n      readonly password?: string\n      readonly invitation_code: string\n    }\n\nexport type TimerView = 'calendar' | 'calendar-day' | 'list'\n\n// ℹ️ This field is not validated in the API. \"sticky\" has no meaning anymore and is a prefix from many years ago.\nexport type VisibleFooter =\n  | 'disabled'\n  | 'sticky-today'\n  | 'sticky-this-week'\n  | 'sticky-timeline'\n\nexport type WeeklyDigestOptions = {\n  enabled: boolean\n  day: 0 | 1 | 2 | 3 | 4 | 5 | 6 // Sunday to Saturday\n  time: string\n}\n\nexport type MePreferences = {\n  readonly AchievementNotifications: string\n  readonly CollapseDetailedReportEntries: boolean\n  readonly CollapseTimeEntries: boolean\n  readonly calendar_visible_hours_end?: number\n  readonly calendar_visible_hours_start?: number\n  readonly charts_view_type?: 'grid' | 'list'\n  readonly dashboards_view_type?: 'grid' | 'list'\n  readonly DisplayDensity: string\n  readonly FirstSeenBusinessPromo: number\n  readonly ManualEntryMode: string\n  readonly ManualMode: boolean\n  readonly ManualModeOverlaySeen: boolean\n  readonly OfflineMode: string\n  readonly ProjectDashboardActivityMode: string\n  readonly ProjectShortcutEnabled: boolean\n  readonly ReportsHideWeekends: boolean\n  readonly SeenFollowModal: boolean\n  readonly SeenProjectDashboardOverlay: boolean\n  readonly ShowTimeInTitle: boolean\n  readonly SnowballReportRounding?: string\n  readonly SummaryReportAmounts?: ReportsAmountsControl | null\n  readonly SummaryReportDistinctRates: boolean\n  readonly SummaryReportGrouping?: ReportsGrouping\n  readonly SummaryReportSortAsc: boolean\n  readonly SummaryReportSortField: string\n  readonly SummaryReportSubGrouping?: ReportsSubGrouping\n  readonly TagsShortcutEnabled: boolean\n  readonly TimerView: TimerView\n  readonly ToSAcceptNeeded: boolean\n  readonly VisibleFooter: VisibleFooter\n  readonly WebTimeEntryStarted: boolean\n  readonly WebTimeEntryStopped: boolean\n  readonly WeeklyReportGrouping: string\n  readonly WeeklyReportValueToShow: string\n  readonly alpha_features: ReadonlyArray<AlphaFeature>\n  readonly date_format: UserDateFormat\n  readonly duration_format: ReportsParams['duration_format']\n  readonly keyboard_shortcuts_enabled: boolean\n  readonly record_timeline: boolean\n  readonly send_product_emails: boolean\n  readonly send_timer_notifications: boolean\n  readonly send_weekly_digest: WeeklyDigestOptions\n  readonly send_weekly_report: boolean\n  readonly show_timeline_in_day_view?: boolean\n  readonly show_total_billable_hours?: boolean\n  readonly show_weekend_on_timer_page: boolean\n  readonly theme?: Theme['name'] | 'system'\n  readonly timeofday_format: ReportsParams['time_format']\n}\n\n// TODO: I should not be in this package, but on `NotificationState`. Please move me there when #10515 is resolved.\ntype ServerNotification = {\n  actions?:\n    | {\n        default: string\n      }\n    | {\n        [key: string]: {\n          type: string\n          code: string\n        }\n      }\n  class: number\n  content: {\n    default_message?: string\n    defaultMessage?: string // TODO: obsolete, remove it\n    id: string\n    values?:\n      | Record<string, React.ReactNode | ((chunks: string) => React.ReactNode)>\n      | null\n      | undefined\n  }\n  created_at: string\n  id: number\n  notification_type: string\n  read_at?: string | null\n  title: {\n    default_message?: string\n    defaultMessage?: string // TODO: obsolete, remove it\n    id: string\n    values?:\n      | Record<string, React.ReactNode | ((chunks: string) => React.ReactNode)>\n      | null\n      | undefined\n  }\n  user_id: number\n}\n\ntype LocalNotification = Pick<\n  ServerNotification,\n  'actions' | 'title' | 'content'\n> & {\n  id: string\n  created_at: number\n  localOnly: true\n}\n\nexport type Notification = ServerNotification | LocalNotification\n\nexport type PaidPricingPlan = 13 | 15 | 16 | 100 | 101 | 102 | 103 | 105\n\nexport type MobilePricingPlan = 20 | 21\n\nexport type PricingPlan = 0 | PaidPricingPlan | MobilePricingPlan\n\nexport type ProjectUserV8 = {\n  readonly at: string\n  readonly gid?: string | null\n  readonly id: number\n  readonly labour_cost: number | null | undefined\n  readonly manager: boolean\n  readonly pid: number\n  readonly rate: number | null | undefined\n  readonly uid: number\n  readonly wid: number\n}\n\nexport type ReportTypes = 'summary' | 'detailed' | 'weekly'\n\nexport type ProjectUser = {\n  readonly at: string\n  readonly gid?: string | null\n  readonly id: number\n  readonly labour_cost: number | null | undefined\n  readonly manager: boolean\n  readonly project_id: number\n  readonly rate: number | null | undefined\n  readonly rate_last_updated?: string | null\n  readonly user_id: number\n  readonly workspace_id: number\n}\n\nexport type ProjectGroup = {\n  readonly group_id: number\n  readonly id: number\n  readonly pid: number\n  readonly wid: number\n}\n\nexport type ProjectSummaryGraphRatesDefinition = Array<{\n  readonly billable_seconds: number\n  readonly currency: string\n  readonly hourly_rate_in_cents: number\n}>\n\n// Map of \"Index in rates definition\" and time in seconds\nexport type ProjectSummaryGraphRatesMap = Readonly<Record<string, number>>\n\nexport type ProjectSummary = {\n  readonly graph: ReadonlyArray<{\n    readonly billable_amount_in_cents?: number\n    readonly labour_cost_in_cents?: number\n    readonly seconds: number\n    readonly by_rate: ProjectSummaryGraphRatesMap\n  }>\n  readonly rates: ProjectSummaryGraphRatesDefinition\n  readonly resolution: Resolution\n  readonly seconds: number\n  // These fields are extracted from response headers.\n  readonly startDate: string\n  readonly endDate: string\n}\n\nexport type Timezones = ReadonlyArray<string>\n\nexport type TimezoneOffsets = ReadonlyArray<Timezone>\n\nexport const allWorkspacePermissions = {\n  add_analytics_third_level_group: true,\n  analytics_rounding: true,\n  approve_time_entries: true,\n  archive_clients: true,\n  create_approvals_timesheet: true,\n  create_clients: true,\n  create_csv_import: true,\n  create_private_projects: true,\n  create_public_projects: true,\n  create_saved_reports: true,\n  create_simple_invoice: true,\n  create_shared_projects: true,\n  create_tags: true,\n  create_time_entries_in_approved: true,\n  create_time_entries: true,\n  create_workspace_data_export: true,\n  download_invoice_pdf: true,\n  duplicate_simple_invoice: true,\n  edit_approved_time_entries: true,\n  edit_member_profile: true,\n  edit_submitted_time_entries: true,\n  export_reports_csv: true,\n  export_reports_pdf: true,\n  export_reports_xslx: true,\n  focus_mode: true,\n  group_analytics_by_tags: true,\n  manage_alerts: true,\n  manage_analytics_dashboard: true,\n  manage_asana_integration: true,\n  manage_integrations: true,\n  manage_jira_integration: true,\n  manage_logo: true,\n  manage_salesforce_integration: true,\n  manage_sso: true,\n  manage_time_entries_behalf: true,\n  manage_timesheet_approvals: true,\n  manage_tracking_reminders: true,\n  manage_webhooks: true,\n  remove_clients: true,\n  remove_report_toggl_signature: true,\n  remove_saved_reports: true,\n  remove_simple_invoice: true,\n  remove_tags: true,\n  remove_time_entries: true,\n  remove_workspace_users: true,\n  report_scheduling: true,\n  reports_hide_weekends: true,\n  reports_rounding: true,\n  set_favorites_as_public: true,\n  set_saved_reports_public: true,\n  share_analytics_externally: true,\n  share_analytics_internally: true,\n  summary_reports_audit_filter: true,\n  update_admin_roles: true,\n  update_billable_rate: true,\n  update_billable_rates_visibility_setting: true,\n  update_clients: true,\n  update_default_project_billing: true,\n  update_historical_billable_rate: true,\n  update_saved_reports: true,\n  update_tags: true,\n  update_team_activity_visibility_setting: true,\n  update_time_entries_lock_setting: true,\n  update_time_entries_restrictions_setting: true,\n  update_time_entries: true,\n  update_user_billable_rate: true,\n  update_user_historical_billable_rate: true,\n  update_user_labour_cost: true,\n  update_user_work_hours: true,\n  update_who_can_create_projects_clients_setting: true,\n  update_who_can_create_tags_setting: true,\n  update_workspace_settings: true,\n  update_workspace_users: true,\n  use_time_audits: true,\n  view_activity: true,\n  view_alerts: true,\n  view_all_simple_invoices: true,\n  view_all_time_entries: true,\n  view_billable_rate_amounts: true,\n  view_billable_rate: true,\n  view_billable_rates_visibility_setting: true,\n  view_clients: true,\n  view_default_project_billing: true,\n  view_insights_comparative: true,\n  view_insights_employee: true,\n  view_insights_project: true,\n  view_insights_trends: true,\n  view_integrations: true,\n  view_private_projects: true,\n  view_project_billable_rate_amounts: true,\n  view_public_saved_reports: true,\n  view_saved_reports: true,\n  view_tags: true,\n  view_team_activity_visibility_setting: true,\n  view_time_entries_lock_setting: true,\n  view_time_entries_restrictions_setting: true,\n  view_time_entries: true,\n  view_timesheet_approvals: true,\n  view_tracking_reminders: true,\n  view_user_billable_rate: true,\n  view_user_labour_cost: true,\n  view_user_work_hours: true,\n  view_who_can_create_projects_clients_setting: true,\n  view_who_can_create_tags_setting: true,\n  view_workspace_settings: true,\n  view_workspace_users: true,\n  visualize_analytics_by_line: true,\n} as const\n\nexport type Workspace = {\n  readonly admin: boolean\n  readonly api_token?: string\n  readonly at: string\n  readonly business_ws: boolean\n  readonly csv_upload: {\n    readonly at: string\n    readonly log_id: number\n  }\n  readonly default_currency: string\n  readonly default_hourly_rate?: number\n  readonly hide_start_end_times?: boolean | null\n  readonly ical_enabled: boolean\n  readonly ical_url: string\n  readonly id: number\n  readonly last_modified: string\n  readonly logo_url: string\n  readonly name: string\n  readonly only_admins_may_create_projects: boolean\n  readonly only_admins_may_create_tags: boolean\n  readonly only_admins_see_billable_rates: boolean\n  readonly only_admins_see_team_dashboard: boolean\n  readonly pid?: number\n  readonly premium: boolean\n  readonly profile: number\n  readonly projects_billable_by_default: boolean\n  readonly projects_private_by_default: boolean\n  readonly rate_last_updated?: string | null\n  readonly role?: UserRole | null\n  readonly server_deleted_at?: string | null\n  readonly suspended_at: string | null\n  readonly organization_id: number\n  readonly reports_collapse: boolean\n  readonly working_hours_in_minutes?: number | null\n  readonly active_project_count?: number | null\n  // We could extract types from `allWorkspacePermissions`, but then any\n  // comments are not preserved, and we want them to be picked up by the IDE\n  readonly permissions?: {\n    readonly add_analytics_third_level_group?: true\n    readonly analytics_rounding?: true\n    readonly approve_time_entries?: true\n    readonly archive_clients?: true\n    readonly create_approvals_timesheet?: true\n    readonly create_clients?: true\n    readonly create_csv_import?: true\n    readonly create_private_projects?: true\n    readonly create_public_projects?: true\n    readonly create_saved_reports?: true\n    readonly create_simple_invoice?: true\n    readonly create_shared_projects?: true\n    readonly create_tags?: true\n    readonly create_time_entries_in_approved?: true\n    readonly create_time_entries?: true\n    readonly create_workspace_data_export?: true\n    readonly download_invoice_pdf?: true\n    readonly duplicate_simple_invoice?: true\n    readonly edit_approved_time_entries?: true\n    readonly edit_member_profile?: true\n    readonly edit_submitted_time_entries?: true\n    readonly export_reports_csv?: true\n    readonly export_reports_pdf?: true\n    readonly export_reports_xslx?: true\n    readonly focus_mode?: true\n    readonly group_analytics_by_tags?: true\n    readonly manage_alerts?: true\n    readonly manage_analytics_dashboard?: true\n    readonly manage_asana_integration?: true\n    readonly manage_integrations?: true\n    readonly manage_jira_integration?: true\n    readonly manage_logo?: true\n    readonly manage_salesforce_integration?: true\n    readonly manage_sso?: true\n    readonly manage_time_entries_behalf?: true\n    readonly manage_timesheet_approvals?: true\n    readonly manage_tracking_reminders?: true\n    readonly manage_webhooks?: true\n    readonly remove_clients?: true\n    readonly remove_report_toggl_signature?: true\n    readonly remove_saved_reports?: true\n    readonly remove_simple_invoice?: true\n    readonly remove_tags?: true\n    readonly remove_time_entries?: true\n    readonly remove_workspace_users?: true\n    readonly report_scheduling?: true\n    readonly reports_hide_weekends?: true\n    readonly reports_rounding?: true\n    readonly set_favorites_as_public?: true\n    readonly set_saved_reports_public?: true\n    readonly share_analytics_externally?: true\n    readonly share_analytics_internally?: true\n    readonly summary_reports_audit_filter?: true\n    readonly update_admin_roles?: true\n    readonly update_billable_rate?: true\n    readonly update_billable_rates_visibility_setting?: true\n    readonly update_clients?: true\n    readonly update_default_project_billing?: true\n    readonly update_historical_billable_rate?: true\n    readonly update_saved_reports?: true\n    readonly update_tags?: true\n    readonly update_team_activity_visibility_setting?: true\n    readonly update_time_entries_lock_setting?: true\n    readonly update_time_entries_restrictions_setting?: true\n    readonly update_time_entries?: true\n    readonly update_user_billable_rate?: true\n    readonly update_user_historical_billable_rate?: true\n    readonly update_user_labour_cost?: true\n    readonly update_user_work_hours?: true\n    readonly update_who_can_create_projects_clients_setting?: true\n    readonly update_who_can_create_tags_setting?: true\n    readonly update_workspace_settings?: true\n    /** Can ADD users to workspace */\n    readonly update_workspace_users?: true\n    readonly use_time_audits?: true\n    readonly view_activity?: true\n    readonly view_alerts?: true\n    readonly view_all_simple_invoices?: true\n    readonly view_all_time_entries?: true\n    readonly view_billable_rate_amounts?: true\n    readonly view_billable_rate?: true\n    readonly view_billable_rates_visibility_setting?: true\n    readonly view_clients?: true\n    readonly view_default_project_billing?: true\n    readonly view_insights_comparative?: true\n    readonly view_insights_employee?: true\n    readonly view_insights_project?: true\n    readonly view_insights_trends?: true\n    readonly view_integrations?: true\n    readonly view_private_projects?: true\n    readonly view_project_billable_rate_amounts?: true\n    readonly view_public_saved_reports?: true\n    readonly view_saved_reports?: true\n    readonly view_tags?: true\n    readonly view_team_activity_visibility_setting?: true\n    readonly view_time_entries_lock_setting?: true\n    readonly view_time_entries_restrictions_setting?: true\n    readonly view_time_entries?: true\n    readonly view_timesheet_approvals?: true\n    readonly view_tracking_reminders?: true\n    readonly view_user_billable_rate?: true\n    readonly view_user_labour_cost?: true\n    readonly view_user_work_hours?: true\n    readonly view_who_can_create_projects_clients_setting?: true\n    readonly view_who_can_create_tags_setting?: true\n    readonly view_workspace_settings?: true\n    readonly view_workspace_users?: true\n    readonly visualize_analytics_by_line?: true\n  }\n}\n\nexport type WorkspaceServer = Workspace & {\n  readonly permissions?: Array<\n    | 'add_analytics_third_level_group'\n    | 'analytics_rounding'\n    | 'approve_time_entries'\n    | 'archive_clients'\n    | 'create_approvals_timesheet'\n    | 'create_clients'\n    | 'create_csv_import'\n    | 'create_private_projects'\n    | 'create_public_projects'\n    | 'create_saved_reports'\n    | 'create_simple_invoice'\n    | 'create_shared_projects'\n    | 'create_tags'\n    | 'create_time_entries_in_approved'\n    | 'create_time_entries'\n    | 'create_workspace_data_export'\n    | 'download_invoice_pdf'\n    | 'duplicate_simple_invoice'\n    | 'edit_approved_time_entries'\n    | 'edit_member_profile'\n    | 'edit_submitted_time_entries'\n    | 'export_reports_csv'\n    | 'export_reports_pdf'\n    | 'export_reports_xslx'\n    | 'focus_mode'\n    | 'group_analytics_by_tags'\n    | 'manage_alerts'\n    | 'manage_analytics_dashboard'\n    | 'manage_asana_integration'\n    | 'manage_integrations'\n    | 'manage_jira_integration'\n    | 'manage_logo'\n    | 'manage_salesforce_integration'\n    | 'manage_sso'\n    | 'manage_time_entries_behalf'\n    | 'manage_timesheet_approvals'\n    | 'manage_tracking_reminders'\n    | 'manage_webhooks'\n    | 'remove_clients'\n    | 'remove_report_toggl_signature'\n    | 'remove_saved_reports'\n    | 'remove_simple_invoice'\n    | 'remove_tags'\n    | 'remove_time_entries'\n    | 'remove_workspace_users'\n    | 'report_scheduling'\n    | 'reports_hide_weekends'\n    | 'reports_rounding'\n    | 'set_favorites_as_public'\n    | 'set_saved_reports_public'\n    | 'share_analytics_externally'\n    | 'share_analytics_internally'\n    | 'summary_reports_audit_filter'\n    | 'update_admin_roles'\n    | 'update_billable_rate'\n    | 'update_billable_rates_visibility_setting'\n    | 'update_clients'\n    | 'update_default_project_billing'\n    | 'update_historical_billable_rate'\n    | 'update_saved_reports'\n    | 'update_tags'\n    | 'update_team_activity_visibility_setting'\n    | 'update_time_entries_lock_setting'\n    | 'update_time_entries_restrictions_setting'\n    | 'update_time_entries'\n    | 'update_user_billable_rate'\n    | 'update_user_historical_billable_rate'\n    | 'update_user_labour_cost'\n    | 'update_user_work_hours'\n    | 'update_who_can_create_projects_clients_setting'\n    | 'update_who_can_create_tags_setting'\n    | 'update_workspace_settings'\n    | 'update_workspace_users'\n    | 'use_time_audits'\n    | 'view_activity'\n    | 'view_alerts'\n    | 'view_all_simple_invoices'\n    | 'view_all_time_entries'\n    | 'view_billable_rate_amounts'\n    | 'view_billable_rate'\n    | 'view_billable_rates_visibility_setting'\n    | 'view_clients'\n    | 'view_default_project_billing'\n    | 'view_insights_comparative'\n    | 'view_insights_employee'\n    | 'view_insights_project'\n    | 'view_insights_trends'\n    | 'view_integrations'\n    | 'view_private_projects'\n    | 'view_project_billable_rate_amounts'\n    | 'view_public_saved_reports'\n    | 'view_saved_reports'\n    | 'view_tags'\n    | 'view_team_activity_visibility_setting'\n    | 'view_time_entries_lock_setting'\n    | 'view_time_entries_restrictions_setting'\n    | 'view_time_entries'\n    | 'view_timesheet_approvals'\n    | 'view_tracking_reminders'\n    | 'view_user_billable_rate'\n    | 'view_user_labour_cost'\n    | 'view_user_work_hours'\n    | 'view_who_can_create_projects_clients_setting'\n    | 'view_who_can_create_tags_setting'\n    | 'view_workspace_settings'\n    | 'view_workspace_users'\n    | 'visualize_analytics_by_line'\n  >\n}\n\nexport type WorkspacePayload = Partial<\n  Workspace & { admins?: ReadonlyArray<number> }\n>\n\nexport type TimeEntryConstraints = {\n  readonly description_present: boolean\n  readonly project_present: boolean\n  readonly tag_present: boolean\n  readonly task_present: boolean\n  readonly time_entry_constraints_enabled: boolean\n}\n\nexport type WorkspaceSubscription = {\n  readonly auto_renew: boolean\n  readonly campaign_available: boolean\n  readonly card_details?: Record<string, unknown> // TODO\n  readonly company_id?: number\n  readonly contact_details?: WorkspaceSubscriptionContactDetails\n  readonly customer_id?: number\n  readonly last_invoice?: string\n  readonly last_payment?: string\n  readonly last_pricing_plan_id?: PricingPlan | null | undefined\n  readonly next_payment_date: string\n  readonly payment_method: string\n  readonly pricing_plan_id: PricingPlan\n  readonly renewal_at?: string\n  readonly subscription_period?: {\n    readonly created_at: string | null\n    readonly started_on: string | null\n    readonly finished_on: string | null\n    readonly subscription_id: number\n    readonly subscription_period_id: number\n    readonly trial: boolean\n    readonly user_count: number\n  }\n  readonly trial_available: boolean\n  readonly is_subscription_beta: boolean\n}\n\nexport type OrganizationSubscriptionBillingPortal = {\n  readonly billing_portal_url: string\n}\n\nexport type OrganizationSubscriptionCheckoutSession = {\n  readonly checkout_url: string\n}\n\nexport type OrganizationPromoCodeDuration = 'once' | 'forever' | 'repeating'\nexport type OrganizationSubscriptionCoupon = {\n  readonly id: string\n  readonly name: string\n  readonly amount_off: number\n  readonly percent_off: number\n  readonly valid: boolean\n  readonly deleted: boolean\n  readonly duration: OrganizationPromoCodeDuration\n  readonly duration_in_months?: number | null\n}\n\nexport type OrganizationSubscriptionPromotionCode = {\n  readonly id: string\n  readonly code: string\n  readonly expires_at?: string\n  readonly active: boolean\n}\n\nexport type PaymentMethod = 'card' | 'bank' | 'sepa' | 'other'\nexport type OrganizationPaymentInformation = {\n  readonly card?: {\n    country: string\n    brand: string\n    last4: number\n    exp_month: number\n    exp_year: number\n  }\n  readonly us_bank_account?: {\n    bank_name: string\n    last4: number\n    blocked: boolean\n    blocked_reason: string\n  }\n  readonly sepa_debit?: { country: string; bank_code: string; last4: number }\n  readonly type?: string\n}\n\nexport type OrganizationInvoices = {\n  readonly items: Array<InvoiceItem>\n  readonly next?: string\n  readonly prev?: string\n}\n\nexport type OrganizationSubscriptionCustomer = {\n  readonly id: string\n  readonly customer_name: string\n  readonly toggl_user_email: string\n  readonly tax_number: string\n  readonly country_id: string\n  readonly state: string\n  readonly postal_code: string\n  readonly address_line: string\n  readonly site: 'stripe_inc' | 'stripe_ou' | null\n  readonly currency: string\n  readonly discount?: {\n    coupon?: OrganizationSubscriptionCoupon\n    promotion_code?: OrganizationSubscriptionPromotionCode\n  }\n  readonly default_payment_method?: OrganizationPaymentInformation\n}\n\nexport type OrganizationSubscriptionSetupIntent = {\n  id: string\n  client_secret: string\n}\n\nexport type OrganizationSubscriptionCalculation = {\n  readonly calculation: string\n  readonly currency: string\n  readonly period: number\n  readonly tax_percentage: number\n  readonly total_amount: number\n}\n\nexport type OrganizationSubscriptionContactDetails = {\n  readonly company_address: string\n  readonly company_name: string\n  readonly company_city?: string\n  readonly contact_detail_id: number\n  readonly contact_email: string | null\n  readonly contact_person: string | null\n  readonly country_id: number\n  readonly country_subdivision_id: number | null\n  readonly created_at: string\n  readonly customer_id: number\n  readonly is_eu_resident: boolean\n  readonly updated_at: string\n  readonly user_id: number\n  readonly vat_number: string | null\n  readonly vat_number_valid: boolean\n  readonly vat_number_validated_at: string | null\n  readonly zip_code: string | null\n}\n\nexport type OrganizationSubscriptionContactDetailsPayload = {\n  readonly company_address: string\n  readonly company_city?: string\n  readonly company_name: string | null\n  readonly company_state: string | null\n  readonly contact_email: string | null\n  readonly contact_person: string | null\n  readonly country_id: number\n  readonly country_subdivision_id: number | null\n  readonly tax_number: string | null\n  readonly zip_code: string | null\n}\n\nexport type OrganizationSubscription = {\n  /** @deprecated Legacy field */\n  readonly auto_renew: boolean\n  /** @deprecated Legacy field */\n  readonly campaign_available: boolean\n  /** @deprecated Legacy field */\n  readonly card_details: {\n    readonly added_at: string\n    readonly card_number: string\n    readonly card_type: string\n    readonly creator_id: number\n    readonly creator_name: string\n    readonly expiry_date?: string\n    readonly holder_name?: string\n  } | null\n  /** @deprecated Legacy field */\n  readonly company_id?: number\n  /** @deprecated Legacy field */\n  readonly contact_details: OrganizationSubscriptionContactDetails | null\n  /** @deprecated Legacy field */\n  readonly customer_id?: number\n  /** @deprecated Legacy field */\n  readonly last_invoice?: {\n    readonly amount: number\n    readonly created_at: string\n    readonly currency_id: number\n    readonly due: string\n    readonly id: number\n    readonly paid_at: string | null\n    readonly tax_percentage: number\n    readonly total_amount: number\n  } | null\n  /** @deprecated Legacy field */\n  readonly last_payment: {\n    readonly created_at: string\n    readonly description: string\n    readonly id: number\n    readonly status: string\n  } | null\n  /** @deprecated Legacy field */\n  readonly last_pricing_plan_id?: PricingPlan\n  /** @deprecated Legacy field */\n  readonly next_payment_date: string\n  /** @deprecated Legacy field */\n  readonly payment_method:\n    | 'stripe'\n    | 'adyen'\n    | 'paypal-adaptive'\n    | 'purchase-order'\n    | ''\n  /** @deprecated Legacy field */\n  readonly pricing_plan_id: PricingPlan\n  /** @deprecated Legacy field */\n  readonly renewal_at?: string\n  /** @deprecated Legacy field */\n  readonly subscription_period?: {\n    readonly created_at: string\n    readonly finished_on: string | null\n    readonly started_on: string\n    readonly subscription_id: number\n    readonly subscription_period_id: number\n    readonly trial: boolean\n    readonly user_count: number\n  }\n  // unified subscription endpoint fields\n  readonly subscription_created_at: string\n  readonly current_period_starts_at: string\n  readonly current_period_ends_at: string\n  readonly billing_period_in_months: number | null\n  readonly cancel_date: string | null\n  readonly currency: string\n  readonly end_date: string\n  readonly enterprise: boolean\n  readonly is_unified: boolean\n  readonly plan_name: string\n  readonly renewal_date: string\n  readonly seat_cost_in_cents: number\n  readonly seats: number\n  readonly site: 'toggl_inc' | 'toggl_ou' | null\n  readonly start_date: string\n  readonly state:\n    | 'incomplete'\n    | 'incomplete_expired'\n    | 'trialing'\n    | 'active'\n    | 'past_due'\n    | 'canceled'\n    | 'unpaid'\n    | null\n  readonly trial_available: boolean\n  readonly trial_end_date: string\n  readonly trial_start_date: string\n  readonly new_signup_trial: boolean\n}\n\nexport type Feature =\n  | 'admin_roles'\n  | 'analytics_advanced_group_levels'\n  | 'analytics_advanced_group_options'\n  | 'analytics_external_sharing'\n  | 'analytics_rounding'\n  | 'analytics_advanced_visualization'\n  | 'approvals'\n  | 'archive_client'\n  | 'billable_rates'\n  | 'business'\n  | 'edit_team_member_profile'\n  | 'edit_team_member_time_entries'\n  | 'favorites'\n  | 'fixed_fee'\n  | 'focus_mode'\n  | 'free'\n  | 'historical_billable_rates'\n  | 'labour_cost'\n  | 'locking_time_entries'\n  | 'multi_calendar'\n  | 'outlook_calendar_integration'\n  | 'priority_support'\n  | 'pro'\n  | 'project_dashboard'\n  | 'recurring_projects'\n  | 'report_comparative'\n  | 'report_data_trends'\n  | 'report_employee_profitability'\n  | 'report_export_xlsx'\n  | 'report_project_profitability'\n  | 'reports_hide_weekends'\n  | 'scheduled_reports'\n  | 'shared_sso'\n  | 'solo_user_campaign'\n  | 'split_time_entry'\n  | 'summary_audit'\n  | 'tasks'\n  | 'time_audits'\n  | 'time_entry_constraints'\n  | 'tracking_reminders'\n  | 'working_hours'\n\nexport type SsoStatus = 'draft' | 'pending' | 'rejected' | 'approved'\n\nexport type SSOIDP = {\n  name: string\n  metadata_url?: string\n  sign_in_url?: string\n  entity_id?: string\n  certificate?: string\n}\n\nexport type SsoProfile = {\n  admins: string[]\n  domain: string\n  domain_verification_info?: string\n  enabled: boolean\n  force_sso_login: boolean\n  idp_configurations?: SSOIDP[]\n  name: string\n  whitelisted_users: string[]\n  created_at: string\n  deleted_at?: string\n  sso_profile_id: number\n  status: SsoStatus\n  rejection_reason?: string\n  updated_at: string\n}\n\nexport type LinkedSSOProfile = {\n  readonly id: number\n  readonly name: string\n}\n\nexport type WorkspaceFeature = {\n  readonly enabled: boolean\n  readonly feature_id: number\n  readonly name: Feature\n}\n\nexport type WorkspaceFeatures = {\n  readonly workspace_id: number\n  readonly features: WorkspaceFeature[]\n}\n\nexport type OrganizationFeatures = {\n  readonly organization_id: number\n  readonly features: WorkspaceFeature[]\n}\n\nexport type WorkspacePreferences = {\n  readonly 'annual-master-campaign-2018'?: boolean\n  readonly hide_start_end_times?: boolean | null\n  readonly initial_pricing_plan?: PricingPlan\n  readonly report_locked_at?: string | null\n  readonly inc_tos_accepted_at?: string\n  readonly campaigns?: Readonly<Record<string, boolean>>\n  readonly single_sign_on?: boolean\n  readonly sso_requested_at?: string\n}\n\nexport type WorkspaceSubscriptionContactDetails = {\n  readonly company_address: string\n  readonly company_city?: string\n  readonly company_name: string\n  readonly company_state: string\n  readonly contact_detail_id: number\n  readonly contact_email: string\n  readonly contact_person: string\n  readonly country_id: number\n  readonly country_subdivision_id?: number\n  readonly created_at: string\n  readonly customer_id: number\n  readonly is_eu_resident: boolean\n  readonly updated_at: string\n  readonly user_id: number\n  readonly vat_number?: string\n  readonly vat_number_valid: false\n  readonly vat_number_validated_at?: string\n  readonly zip_code: string\n}\n\nexport type WorkspacePricingPlan = {\n  readonly name: string\n  readonly period: number\n  readonly pricing_plan_id: PricingPlan\n  readonly prices_month: {\n    actual: 0\n    base: 0\n    with_tax: 0\n  }\n  readonly prices_period: {\n    actual: number\n    base: number\n    with_tax: number\n  }\n  readonly campaign?: {\n    readonly key: string\n    readonly name: string\n    readonly start: string\n    readonly end: string\n    readonly discount: number\n  }\n}\n\nexport type WorkspacePlans = {\n  readonly currency_id: number\n  readonly discount_percentage: number\n  readonly discount_to?: string | null\n  readonly plans: ReadonlyArray<{\n    readonly name: string\n    readonly plan_id: PricingPlan\n    readonly pricing_plans: ReadonlyArray<WorkspacePricingPlan>\n  }>\n  readonly tax_percentage: number\n  readonly user_count: number\n}\n\ntype OwnerTransferOutcome =\n  | 'Success'\n  | 'Declined'\n  | 'Withdrawn'\n  | 'Timed out'\n  | 'Not Admin'\n  | null\n\nexport type WorkspaceOwnerTransfer = {\n  readonly owner_transfer_id: number\n  readonly requester_id: number\n  readonly new_owner_id: number\n  readonly created_at: string\n  readonly current_owner_accepted: boolean\n  readonly current_owner_accepted_at: string\n  readonly new_owner_accepted: boolean\n  readonly new_owner_accepted_at: string\n  readonly outcome: string\n  readonly finished_at: string\n  readonly outcome_name: OwnerTransferOutcome\n}\n\nexport type WorkspaceOwnerTransferStatus = 'withdraw' | 'decline' | 'accept'\n\nexport type WorkspaceSubscriptionCalculation = {\n  readonly calculation: string\n  readonly currency: string\n  readonly period: number\n  readonly tax_percentage: number\n  readonly total_amount: number\n}\n\ntype WorkspaceSubscriptionCompany = {\n  readonly address?: string | null\n  readonly bank_details?: string | null\n  readonly company_id: number\n  readonly name: string\n  readonly tax_number?: string | null\n  readonly tax_number_name?: string | null\n  readonly tax_type?: string | null\n}\n\nexport type WorkspaceCustomer = {\n  readonly balance_in_cents: number\n  readonly balance_updated_at: string\n  readonly company: WorkspaceSubscriptionCompany | null | undefined\n  readonly company_id: number | null | undefined\n  readonly contact_detail:\n    | WorkspaceSubscriptionContactDetails\n    | null\n    | undefined\n  readonly created_at: string\n  readonly currency_id: number\n  readonly customer_id: number\n  readonly purchase_order_enabled: boolean\n}\n\nexport type WorkspaceAlert = {\n  readonly errors?: ReadonlyArray<{\n    readonly code: string\n    readonly message: string\n  }> | null\n  readonly id: number\n  readonly object_type: number\n  readonly project_id?: number\n  readonly receiver_groups?: number[]\n  readonly receiver_roles?: (\n    | 'workspace_admin'\n    | 'project_managers'\n    | 'team_members'\n  )[]\n  readonly receiver_users?: number[]\n  readonly receivers: number\n  readonly source_kind: 'any_project' | 'any_task' | 'specific_project'\n  readonly threshold: number\n  readonly threshold_type: 'time_estimate' | 'fixed_fee'\n  readonly thresholds: number[]\n  readonly wid: number\n}\n\nexport declare type AlertCreationData = Omit<\n  WorkspaceAlert,\n  'id' | 'receivers' | 'threshold' | 'object_type'\n>\n\nexport declare type AlertUpdationData = Omit<\n  WorkspaceAlert,\n  'receivers' | 'threshold' | 'object_type'\n>\n\nexport type WorkspaceReminder = {\n  readonly reminder_id: number\n  readonly created_at: string\n  readonly frequency: 1 | 7\n  readonly group_ids: ReadonlyArray<number>\n  readonly threshold: number\n  readonly user_ids: ReadonlyArray<number>\n  readonly workspace_id: number\n}\n\nexport type WorkspaceSSOConfig = {\n  readonly certificate?: string\n  readonly domain: string\n  readonly enabled: boolean\n  readonly entity_id?: string\n  readonly metadata_url?: string\n  readonly name: string\n  readonly sso_url?: string\n}\n\nexport type WorkspaceSSOInfo = {\n  readonly sp_settings: {\n    readonly acs_url: string\n    readonly entity_id: string\n  }\n}\n\nexport type WorkspaceSSOFetch = WorkspaceSSOInfo & {\n  readonly config: WorkspaceSSOConfig | null\n}\n\nexport type MeReminder = {\n  readonly created_at: string\n  readonly frequency: 1 | 7\n  readonly group_ids: null\n  readonly reminder_id: number\n  readonly threshold: number\n  readonly user_ids: null\n  readonly workspace_id: number\n}\n\nexport type WeeklyReportEntries = ReadonlyArray<{\n  readonly billable_seconds?: ReadonlyArray<number>\n  readonly currency?: string\n  readonly hourly_rate_in_cents?: number\n  readonly billable_amounts_in_cents?: ReadonlyArray<number>\n  readonly project_id: number | null | undefined\n  readonly planned_task_id: number | null | undefined\n  readonly seconds: ReadonlyArray<number>\n  readonly user_id: number\n}>\n\nexport type SettingsValues = {\n  readonly timezoneNotification?: {\n    readonly timesShown: number\n    readonly dontShowOffset: boolean | null\n  }\n  readonly auditFilter?: {\n    readonly longEntries: number\n    readonly longerOrShorterThan: number\n  }\n  announcementsClosed?: boolean\n}\n\nexport type SavedReportParams = {\n  readonly audit: SummaryReportAuditFilters | undefined\n  readonly bars_count: number\n  readonly billable: 'yes' | 'no' | 'both'\n  readonly client_ids: string | null\n  readonly date_format: MePreferences['date_format'] | undefined\n  readonly description: string | null\n  readonly distinct_rates: 'on' | 'off'\n  readonly grouping: ReportsParams['grouping'] | undefined\n  readonly or_members_of_group_ids: string | null\n  readonly order_desc: 'on' | 'off'\n  readonly order_field: string | null\n  readonly period: keyof RangeDatesMap | null\n  readonly project_ids: string | null\n  readonly report_type: 'details' | 'summary' | 'weekly'\n  readonly since: string | null\n  readonly subgrouping_ids: boolean\n  readonly subgrouping: ReportsParams['sub_grouping'] | undefined\n  readonly tag_ids: string | null\n  readonly task_ids: string | null\n  readonly until: string | null\n  readonly user_agent: string\n  readonly user_ids: string | null\n  readonly with_total_currencies: number\n  readonly without_description: 'true' | 'false'\n  readonly workspace_id: number\n  readonly calculate: 'earnings' | 'time'\n  readonly isPaid: boolean\n  readonly canSeeBillableRates: boolean\n  readonly beginningOfWeek: number | undefined\n  readonly durationFormat: MePreferences['duration_format'] | undefined\n  readonly time_format: MePreferences['timeofday_format'] | undefined\n  readonly snowballRounding: {\n    readonly enabled: boolean\n    readonly minutes: ReportsParams['rounding_minutes']\n    readonly mode: ReportsParams['rounding']\n  }\n  readonly groups: ReadonlyArray<number | null> | undefined\n  readonly hide_amounts: boolean\n  readonly grouped: boolean\n  readonly maximum_duration_seconds: number | null\n  readonly minimum_duration_seconds: number | null\n  readonly SummaryReportAmounts: ReportsAmountsControl | null\n  readonly showAmounts: boolean\n  readonly showRates: boolean\n  readonly time_display_mode: ReportsAppTimeDisplayMode\n}\n\nexport type SavedReport = {\n  readonly id: number\n  readonly name: string\n  readonly token: string\n  readonly fixed_daterange: boolean\n  readonly public: boolean\n  readonly uid: number\n  readonly updated_at: string\n  readonly updated_by: number\n  readonly params: string\n  readonly scheduled_email_gids: number[]\n  readonly scheduled_email_uids: number[]\n}\n\nexport type ScheduledReport = {\n  readonly report_id: number\n  readonly creator_id: number\n  readonly workspace_id: number\n  readonly bookmark_id: number\n  // TODO: make this required when migration to the new format is done [#18275]\n  readonly schedule?: {\n    readonly frequency: 'daily' | 'weekly' | 'biweekly' | 'monthly'\n    readonly hour: number // 0-23\n    readonly weekdays: number[] // 0-6 = Sun-Sat (daily can have multiple weekdays, others should have only one)\n    readonly index: number | null | undefined // only valid for monthly; -1 = last, 1 = first, 2 = second, etc.\n  }\n  readonly frequency?: number\n  // TODO: remove this when migration to the new format is done [#18275]\n  readonly created_at: string\n  readonly deleted_at?: string\n  readonly user_ids: number[]\n  readonly group_ids: number[]\n}\n\nexport type Timezone = {\n  readonly name: string\n  readonly utc: string\n}\n\nexport type SortOrder = 'asc' | 'desc'\n\nexport type Organization = {\n  readonly at: string\n  readonly created_at: string\n  readonly id: number\n  readonly name: string\n  readonly owner: boolean\n  readonly pricing_plan_id: PricingPlan\n  readonly server_deleted_at?: string | null\n  readonly admin: boolean\n  readonly suspended_at?: string\n  readonly is_unified?: boolean\n  readonly is_multi_workspace_enabled: boolean\n  readonly trial_info: {\n    readonly can_have_trial: boolean\n    readonly last_pricing_plan_id: PricingPlan | null | undefined\n    readonly next_payment_date: string\n    readonly trial: boolean\n    /** @deprecated Legacy field. Use `can_have_trial` instead */\n    readonly trial_available?: boolean\n    readonly trial_end_date?: string | null\n  }\n  readonly user_count: number\n  readonly max_workspaces: number | null | undefined\n  readonly payment_methods?: ReadonlyArray<{\n    readonly card: {\n      readonly country: string\n    }\n  }>\n}\n\nexport type OrganizationOwner = {\n  readonly id: number\n  readonly organization_user_id: number\n  readonly organization_id: number\n  readonly user_id: number\n  readonly email: string\n  readonly name: string\n  readonly avatar_url: string\n}\n\nexport type OrganizationOwnerTransfer = {\n  readonly owner_transfer_id: number\n  readonly organization_id: number\n  readonly current_owner_id: number\n  readonly new_owner_id: number\n  readonly requester_id: number\n  readonly created_at: string\n  readonly current_owner_accepted: boolean | null | undefined\n  readonly current_owner_accepted_at?: string | null\n  readonly new_owner_accepted: boolean | null | undefined\n  readonly new_owner_accepted_at?: string | null\n  readonly outcome_name: OwnerTransferOutcome\n  readonly finished_at?: string | null\n}\n\nexport type OrganizationOwnerTransferAction = 'accept' | 'decline' | 'withdraw'\n\nexport type OrganizationPayload = {\n  readonly name: string\n}\n\nexport type OrganizationUser = {\n  readonly admin: boolean\n  readonly avatar_url: string\n  readonly can_edit_email: boolean\n  readonly email: string\n  readonly groups:\n    | ReadonlyArray<{\n        readonly group_id: number\n        readonly name: string\n      }>\n    | null\n    | undefined\n  readonly id: number\n  readonly joined: boolean\n  readonly invitation_code?: string | null\n  readonly name: string\n  readonly owner: boolean\n  readonly user_id: number\n  readonly inactive: boolean\n  readonly workspaces: ReadonlyArray<{\n    readonly workspace_id: number\n    readonly admin: boolean\n    readonly name: string\n    readonly inactive: boolean\n    readonly role?: UserRole | null\n  }>\n}\n\nexport type DetailedOrganizationUserWorkspace = {\n  workspace_id: number\n  workspace_name: string\n  workspace_user_id: number\n  admin: boolean\n  working_hours: number\n  cost: number\n  rate: number\n  role: UserRole\n  default_currency: string\n  inactive: boolean\n  groups?: {\n    group_id: number\n    name: string\n  }[]\n}\n\nexport type DetailedOrganizationUser = {\n  organization_id: number\n  organization_user_id: number\n  user_id: number\n  fullname: string\n  email: string\n  avatar_url: string\n  admin: boolean\n  owner: boolean\n  inactive: boolean\n  joined: boolean\n  groups: {\n    group_id: number\n    name: string\n  }[]\n  workspaces: DetailedOrganizationUserWorkspace[]\n}\n\nexport type OrganizationUserPayload = {\n  readonly name?: string | null\n  readonly email?: string | null\n  readonly organization_admin: boolean\n  readonly workspaces: ReadonlyArray<{\n    readonly workspace_id: number\n    readonly admin: boolean\n  }>\n  readonly groups: ReadonlyArray<number>\n  readonly inactive: boolean\n}\n\nexport type ActiveStatus = 'active' | 'inactive' | 'invited'\n\nexport type OrganizationUsersFetchOptions = {\n  readonly name?: SortOrder\n  readonly page?: number\n  readonly active_status?: ActiveStatus | ReadonlyArray<ActiveStatus>\n  readonly only_admins?: boolean\n  readonly roles?: ReadonlyArray<UserRole>\n  readonly groups?: ReadonlyArray<number>\n  readonly workspaces?: ReadonlyArray<number>\n  readonly filter?: string\n  readonly user_ids?: ReadonlyArray<number>\n}\n\nexport type OrganizationGroup = {\n  readonly group_id: number\n  readonly name: string\n  readonly at: string\n  readonly workspaces: ReadonlyArray<number>\n  readonly users?: ReadonlyArray<OrganizationGroupUser>\n}\n\nexport type OrganizationGroupUser = {\n  readonly user_id: number\n  readonly name: string\n  readonly avatar_url: string\n  readonly joined: boolean\n}\n\nexport type OrganizationGroupPayload = {\n  readonly name: string\n  readonly users?: ReadonlyArray<number>\n  readonly workspaces?: ReadonlyArray<number>\n}\n\nexport type OrganizationPricingCampaign = {\n  readonly key: string\n  readonly name: string\n  readonly start: string\n  readonly end: string\n  readonly discount: number\n}\n\nexport type OrganizationPricingPlan = {\n  readonly name: string\n  readonly period: 1 | 12\n  readonly pricing_plan_id: PricingPlan\n  readonly prices_month: {\n    readonly actual: number\n    readonly base: number\n    readonly with_tax: number\n  }\n  readonly prices_period: {\n    readonly actual: number\n    readonly base: number\n    readonly with_tax: number\n  }\n  readonly campaign?: OrganizationPricingCampaign\n}\n\nexport type OrganizationPricingPlans = {\n  readonly currency_id: number\n  readonly discount_percentage: number\n  readonly discount_to?: string | null\n  readonly plans: ReadonlyArray<{\n    readonly name: string\n    readonly plan_id: PricingPlan\n    readonly pricing_plans: ReadonlyArray<OrganizationPricingPlan>\n  }>\n  readonly tax_percentage: number\n  readonly user_count: number\n}\n\ntype OrganizationSubscriptionCompany = {\n  readonly address?: string | null\n  readonly bank_details?: string | null\n  readonly company_id: number\n  readonly name: string\n  readonly tax_number?: string | null\n  readonly tax_number_name?: string | null\n  readonly tax_type?: string | null\n}\n\nexport type OrganizationCustomer = {\n  readonly balance_in_cents: number\n  readonly balance_updated_at: string\n  readonly company: OrganizationSubscriptionCompany | null | undefined\n  readonly company_id: number | null | undefined\n  readonly contact_detail:\n    | OrganizationSubscriptionContactDetails\n    | null\n    | undefined\n  readonly created_at: string\n  readonly currency_id: number\n  readonly customer_id: number\n  readonly purchase_order_enabled: boolean\n}\n\n// XXX: Not an API type. Consider moving elsewhere.\nexport type ReportsAppTimeDisplayMode = 'date' | 'time' | 'dateTime'\n\nexport type ReportsDataClient = Omit<Client, 'archived'>\n\nexport type ReportsDataUser = {\n  readonly active: boolean\n  readonly admin: boolean\n  readonly avatar: string | null\n  readonly deactivated: boolean\n  readonly email: string\n  readonly fullname: string\n  readonly id: number\n  readonly workspace_user_id: number\n}\n\nexport type ReportsExport = 'csv' | 'pdf' | 'xls' | 'xlsx'\nexport type ReportsGrouping = 'clients' | 'projects' | 'users'\nexport type ReportsSubGrouping =\n  | 'clients'\n  | 'projects'\n  | 'tasks'\n  | 'time_entries'\n  | 'users'\n\nexport type ReportsParams = {\n  audit: {\n    show_empty_groups: boolean\n    show_tracked_groups: boolean\n    group_filter: {\n      currency: string | null\n      max_amount_cents: number | null\n      min_amount_cents: number | null\n      max_duration_seconds: number | null\n      min_duration_seconds: number | null\n    }\n  }\n  billable: boolean\n  client_ids: (number | null)[]\n  collapse: boolean\n  currency: string\n  date_format: UserDateFormat\n  description: string\n  display_mode: 'date_and_time' | 'date_only' | 'time_only'\n  duration_format: 'classic' | 'decimal' | 'improved'\n  end_date: string\n  first_row_number: number | null\n  first_timestamp: number\n  group_by_task: boolean\n  group_ids: (number | null)[]\n  grouped: boolean\n  grouping: ReportsGrouping | 'tags'\n  hide_amounts: boolean\n  hide_rates: boolean\n  include_time_entry_ids: boolean\n  max_duration_seconds: number\n  min_duration_seconds: number\n  order_by: 'date' | 'description' | 'duration' | 'user' | 'title'\n  order_dir: 'asc' | 'desc' | null\n  page_size: number\n  project_ids: (number | null)[]\n  rounding: -1 | 0 | 1\n  rounding_minutes: 1 | 5 | 6 | 10 | 12 | 15 | 30 | 60 | 240\n  start_date: string\n  sub_grouping: ReportsSubGrouping\n  tag_ids: (number | null)[]\n  task_ids: (number | null)[]\n  time_entry_ids: (number | null)[]\n  time_format: 'H:mm' | 'HH:mm' | 'h:mm A'\n  user_ids: (number | null)[]\n  with_graph: boolean\n  workspace_id: number\n}\n\nexport type ReportsSearchTimeEntries = ReadonlyArray<{\n  readonly billable: boolean\n  readonly billable_amount_in_cents: number | null\n  readonly currency: string | null\n  readonly description: string\n  readonly hourly_rate_in_cents: number | null\n  readonly project_id: number | null\n  readonly row_number: number\n  readonly tag_ids: ReadonlyArray<number>\n  readonly task_id: number | null\n  readonly time_entries: ReadonlyArray<{\n    readonly at: string\n    readonly id: number\n    readonly seconds: number\n    readonly start: string\n    readonly stop: string\n  }>\n  readonly user_id: number\n  readonly username?: string\n}>\n\nexport type ReportsSearchTotals = {\n  readonly graph?: ReadonlyArray<{\n    readonly by_rate: Record<string, number>\n    readonly seconds: number\n  }>\n  readonly rates: ReadonlyArray<{\n    readonly billable_seconds: number\n    readonly currency: string\n    readonly hourly_rate_in_cents: number\n  }>\n  readonly resolution?: ShortResolution\n  readonly seconds: number\n  readonly tracked_days?: number\n}\n\nexport type ReportsSummarySubGroup = {\n  readonly id: number | null\n  readonly ids: ReadonlyArray<number>\n  readonly rates?: ReadonlyArray<{\n    readonly billable_seconds: number\n    readonly currency: string\n    readonly hourly_rate_in_cents: number\n  }>\n  readonly seconds: number\n  readonly title?: string\n}\n\nexport type ReportsSummary = {\n  readonly groups: ReadonlyArray<{\n    readonly id: number | null\n    readonly ids?: ReadonlyArray<number>\n    readonly sub_groups: ReadonlyArray<ReportsSummarySubGroup> | null\n  }>\n}\n\nexport type ReportsWeekly = ReadonlyArray<{\n  readonly active: boolean\n  readonly ids: number[]\n  readonly name: string\n  readonly project_active: boolean\n  readonly project_ids: number[]\n  readonly start: number\n  readonly user_ids: number[]\n}>\n\ntype WorkspaceAssignmentOperation = 'add' | 'remove'\n\nexport type WorkspaceAssignmentPayload = ReadonlyArray<\n  | {\n      readonly operation: WorkspaceAssignmentOperation\n      readonly user_id: number\n    }\n  | {\n      operation: WorkspaceAssignmentOperation\n      readonly group_id: number\n    }\n>\n\nexport type WorkspaceRateLevel =\n  | 'workspace'\n  | 'workspace_user'\n  | 'project'\n  | 'project_user'\n\nexport type WorkspaceRate = {\n  readonly id: number\n  readonly amount: number | null\n  readonly start: string | null\n  readonly end: string | null\n  readonly workspace_id?: number | null\n  readonly workspace_user_id?: number | null\n  readonly project_id?: number | null\n  readonly project_user_id?: number | null\n  readonly created_at: string\n  readonly updated_at: string | null\n  readonly deleted_at: string | null\n}\n\nexport type WorkspaceRatePayload = {\n  readonly amount: number | null\n  readonly level: WorkspaceRateLevel\n  readonly level_id: number\n} & (\n  | { readonly start: string; readonly mode?: never }\n  | {\n      readonly start?: never\n      readonly mode: 'override-all' | 'override-current' | 'start-today'\n    }\n)\n\nexport type WorkspaceStatistics = {\n  readonly admins: ReadonlyArray<{\n    readonly user_id: number\n    readonly name: string\n  }>\n  readonly members_count: number\n  readonly groups_count: number\n}\n\nexport type WorkspaceStatisticsMap = Readonly<\n  Record<string, WorkspaceStatistics>\n>\n\nexport type FetchTasksParams = {\n  readonly pid: number\n  readonly actual_hours: boolean\n  readonly active: boolean | 'both'\n  readonly page: number\n  readonly sort_order?: 'ASC' | 'DESC' | null\n  readonly sort_field?: string\n  readonly start_date?: string\n  readonly end_date?: string\n}\n\nexport type FetchTasksData = {\n  readonly total_count: number\n  readonly page: number\n  readonly per_page: number\n  readonly sort_order: 'ASC' | 'DESC' | null\n  readonly data: ReadonlyArray<TaskV9>\n}\n\nexport type TeamsMostActiveState = ReadonlyArray<{\n  readonly user_id: number\n  readonly duration: number\n}>\n\nexport type TeamsActivityTableRow = {\n  readonly user_id: number\n  readonly project_id: number | null | undefined\n  readonly duration: number\n  readonly description: string | null | undefined\n  readonly stop: string | null | undefined\n  readonly tid: number | null | undefined\n}\n\nexport type TeamsActivityTableState = ReadonlyArray<TeamsActivityTableRow>\n\nexport type TimesheetStatus =\n  | 'unsubmitted'\n  | 'submitted'\n  | 'approved'\n  | 'rejected'\n\nexport type TimesheetPeriodicity = 'weekly'\n\nexport type Timesheet = {\n  readonly approved_or_rejected_at?: string\n  readonly approved_or_rejected_id?: number\n  readonly approved_or_rejected_name?: string\n  readonly approver_id: number\n  readonly approver_name: string\n  readonly end_date: string\n  readonly member_id: number\n  readonly member_name: string\n  readonly period_editable: boolean\n  readonly period_locked?: boolean\n  readonly period_end: string\n  readonly period_start: string\n  readonly periodicity: TimesheetPeriodicity\n  readonly rejection_comment?: string | null\n  readonly reminder_sent_at?: string\n  readonly start_date: string\n  readonly status: TimesheetStatus\n  readonly submitted_at: string\n  readonly timesheet_setup_id: number\n  readonly workspace_id: number\n}\n\nexport type TimesheetHour = {\n  readonly timesheet_setup_id: number\n  readonly start_date: string\n  // undefined would signify that hours are being loaded in background\n  readonly working_hours_in_minutes?: number | null\n  readonly total_seconds?: number\n}\n\nexport type TimesheetSetupErrors = 'timesheet_setup.approver_not_available'\n\nexport type ReminderDay = 0 | 1 | 2 | 3 | 4 | 5 | 6 | null\n\nexport type TimesheetSetup = {\n  readonly approver_id: number\n  readonly approver_name: string | null\n  readonly end_date?: string | null\n  readonly errors?: ReadonlyArray<{\n    readonly code: TimesheetSetupErrors\n    readonly message: string\n  }>\n  readonly id: number\n  readonly member_id: number\n  readonly member_name: string\n  readonly periodicity: TimesheetPeriodicity\n  readonly reminder_day?: ReminderDay\n  readonly reminder_time?: string | null\n  readonly start_date: string\n  readonly workspace_id: number\n}\n\nexport type TimesheetSetupCreation = {\n  readonly member_ids: number[]\n  readonly approver_id: number\n  readonly periodicity: TimesheetPeriodicity\n  readonly start_date: string\n  readonly reminder_day: ReminderDay\n  readonly reminder_time: string | null\n}\n\nexport type TimesheetSetupAPIFilters = {\n  member_ids?: string\n  approver_ids?: string\n  sort_order?: string\n  sort_field?: string\n}\n\nexport type TimesheetListAPIFilters = {\n  after?: string\n  before?: string\n  member_ids?: string\n  approver_ids?: string\n  timesheet_setup_ids?: string\n  statuses?: string\n  per_page?: number\n  page?: number\n  sort_field?: string\n  sort_order?: string\n}\n\nexport type OrganizationMetrics = {\n  organization_id: number\n  subscription_plan: string\n  number_of_users_admin: number\n  number_of_users: number\n  number_of_workspaces: number\n  number_of_projects: number\n  number_of_private_projects: number\n  number_of_public_projects: number\n  number_of_recurring_projects: number\n  number_of_clients: number\n  number_of_tasks: number\n  number_of_time_entries: number\n}\n\nexport type PlanUser = {\n  readonly color_id: number\n  readonly email: string\n  readonly id: number\n  readonly name: string\n  readonly workspaces: ReadonlyArray<{\n    readonly id: number\n    readonly name: string\n    readonly active: boolean\n  }>\n}\n\nexport type PlanProjectResponse = {\n  readonly plan_plan_id: number\n  readonly plan_workspace_id: number\n}\n\nexport type PlanWorkspaceResponse = {\n  readonly id: number\n  readonly name: string\n  readonly preferences: {\n    readonly tracking_enabled: boolean\n    readonly tracking_workspace_id?: number\n  }\n}\n\nconst dummyChartDescriptor: ChartDescriptorDraft = {\n  name: 'My Chart',\n  description: 'A chart description',\n  pinned: true,\n  type: 'table',\n  organization_id: 123,\n  preferences: { timeFormat: 'HH:mm' },\n  query: {\n    groupings: [\n      {\n        name: 'client',\n        property: 'client_id',\n      },\n    ],\n    aggregations: [\n      {\n        function: 'min',\n        property: 'duration',\n        name: '',\n      },\n    ],\n    attributes: [\n      {\n        property: 'amount',\n      },\n      {\n        property: 'duration',\n      },\n    ],\n    filters: [\n      {\n        property: 'workspace_id',\n        operator: '=',\n        value: 1,\n      },\n    ],\n    period: {\n      preset: undefined,\n      from: '2023-05-13T21:00:00.000Z',\n      to: '2023-05-20T22:59:59.999Z',\n    },\n    ordinations: [\n      {\n        property: 'duration',\n        direction: 'asc',\n        nulls: 'first',\n      },\n    ],\n    transformations: [\n      {\n        name: 'convert_currency',\n        parameters: ['8.0', 'USD', 'EUR'],\n      },\n    ],\n  },\n}\n\nconst dummyDashboardDescriptor: DashboardDescriptorDraft = {\n  name: 'My Dashboard',\n  description: 'A dashboard description',\n  pinned: true,\n  organization_id: 123,\n  preferences: {},\n  filters: [],\n  grid_items: [],\n}\n\nexport const factory = {\n  accountsUser: (data: Partial<AccountsUser> = {}): AccountsUser => ({\n    auth_methods: ['password'],\n    created_at: '2023-03-19T20:50:03.923821Z',\n    display_name: 'John Doe',\n    email: 'sss@toggl.com',\n    email_verified: true,\n    id: '1',\n    plan_user: null,\n    timezone: 'Europe/Tallinn',\n    track_user: '2023-03-19T20:50:03.923821Z',\n    updated_at: '2023-03-19T20:50:03.923821Z',\n    ...data,\n  }),\n  analytics: {\n    chart: (data: Partial<ChartDescriptor> = {}): ChartDescriptor => ({\n      ...dummyChartDescriptor,\n      id: 1,\n      created_by: 8631408,\n      created_at: '2023-03-19T20:50:03.923821Z',\n      creator_name: 'John Doe',\n      updated_at: '2023-03-19T20:50:03.923821Z',\n      permissions: [],\n      link: {\n        external: true,\n        token: '123',\n      },\n      ...data,\n    }),\n    chartCreationData: (\n      data: Partial<ChartDescriptorDraft> = {}\n    ): ChartDescriptorDraft => ({\n      ...dummyChartDescriptor,\n      ...data,\n    }),\n    dashboard: (\n      data: Partial<DashboardDescriptor> = {}\n    ): DashboardDescriptor => ({\n      ...dummyDashboardDescriptor,\n      id: 1,\n      created_by: 8631408,\n      created_at: '2023-03-19T20:50:03.923821Z',\n      creator_name: 'John Doe',\n      updated_at: '2023-03-19T20:50:03.923821Z',\n      permissions: [],\n      link: {\n        external: true,\n        token: '123',\n      },\n      ...data,\n    }),\n    dashboardGridItem: (\n      data: Partial<DashboardGridItem> = {}\n    ): DashboardGridItem => ({\n      id: 1,\n      chart_id: 1,\n      x_position: 0,\n      y_position: 0,\n      width: 0,\n      height: 0,\n      ...data,\n    }),\n    dashboardCreationData: (\n      data: Partial<DashboardDescriptorDraft> = {}\n    ): DashboardDescriptorDraft => ({\n      ...dummyDashboardDescriptor,\n      ...data,\n    }),\n  },\n  entitySyncError: (\n    entitySyncError?: Partial<EntitySyncError>\n  ): EntitySyncError => ({\n    method: 'POST',\n    message: 'bla',\n    name: 'bla',\n    isNetworkError: false,\n    ...entitySyncError,\n  }),\n  baseUser: (baseUser: Partial<BaseUser> = {}): BaseUser => ({\n    api_token: 'api token',\n    at: '2022-07-05T22:34:04.575441Z',\n    email: 'quickest.railway@toggl.com',\n    fullname: 'Quickest Railway',\n    id: 1,\n    image_url: 'https://assets.track.toggl.space/images/profile.png',\n    timezone: 'Europe/Sarajevo',\n    ...baseUser,\n  }),\n  country: (country?: Partial<Country>): Country => ({\n    id: 1,\n    name: 'Brazil',\n    default_currency_id: 1,\n    country_code: 'BR',\n    vat_applicable: true,\n    vat_percentage: 25,\n    vat_regex: '^HR[0-9]{11}$',\n    ...country,\n  }),\n  currentUser: (currentUser?: Partial<CurrentUser>): CurrentUser => ({\n    api_token: 'api token',\n    at: '2019-02-03T21:40:17+00:00',\n    beginning_of_week: 1,\n    country_id: 100,\n    created_at: '2019-02-03T13:02:51.138354Z',\n    default_wid: undefined,\n    default_workspace_id: undefined,\n    email: 'quickest.railway@toggl.com',\n    fullname: 'Quickest Railway',\n    has_password: true,\n    id: 1,\n    image_url: 'https://assets/images/profile.png',\n    intercom_hash: undefined,\n    oauth_providers: [],\n    openid_email: null,\n    openid_enabled: false,\n    timeOffset: 0,\n    timezone: 'Europe/Sarajevo',\n    updated_at: '2019-02-03T21:40:17+00:00',\n    ...currentUser,\n  }),\n  location: (location?: Partial<Location>): Location => ({\n    city: 'Sarajevo',\n    country_code: 'BA',\n    country_name: 'Bosnia and Herzegovina',\n    state: 'Federation of Bosnia and Herzegovina',\n    ...location,\n  }),\n  invitation: (invitation?: Partial<Invitation>): Invitation => ({\n    code: 'testcode',\n    sender_name: 'Test Name',\n    email: 'Test Email',\n    sso: false,\n    ...invitation,\n  }),\n  invoice: (invoice?: Partial<Invoice>): Invoice => ({\n    meta: {\n      api_id: 1,\n      id: '1',\n      date: '2020-01-01',\n      dueDate: '2020-01-01',\n      purchaseNumber: '1',\n      paymentTerms: '1',\n      message: '1',\n      workspaceId: 1,\n      ...invoice?.meta,\n    },\n    billedTo: {\n      address: '1',\n      ...invoice?.billedTo,\n    },\n    payTo: {\n      address: '1',\n      ...invoice?.payTo,\n    },\n    items: invoice?.items || [\n      {\n        id: 1,\n        title: '1',\n        duration: 1,\n        amount: 1,\n        currency: 'USD',\n      },\n    ],\n    taxes: invoice?.taxes || [\n      {\n        id: 1,\n        name: '1',\n        amount: 1,\n      },\n    ],\n    view: {\n      ...invoice?.view,\n    },\n  }),\n  invoiceSummary: (\n    invoiceSummary?: Partial<InvoiceSummaryPrecalculated>\n  ): InvoiceSummaryPrecalculated => ({\n    currency: 'USD',\n    total_amount: 100000,\n    total_tax_amount: 20000,\n    total_discount_amount: 20000,\n    billing_cycle: 'annual',\n    seats: 10,\n    ...invoiceSummary,\n  }),\n  lostPasswords: (lostPasswords?: Partial<LostPasswords>): LostPasswords => ({\n    email: 'quickest.railway@toggl.com',\n    ...lostPasswords,\n  }),\n  lostPasswordsNewPassword: (\n    lostPasswordsNewPassword: Partial<LostPasswordsNewPassword> = {}\n  ): LostPasswordsNewPassword => ({\n    code: 'feedfacecafec0debeef8badf00db10c',\n    user_id: 1000,\n    password: '123ABCdef',\n    ...lostPasswordsNewPassword,\n  }),\n  lostPasswordsToken: (\n    lostPassswordsToken?: LostPasswordsToken\n  ): LostPasswordsToken =>\n    lostPassswordsToken || 'feedfacecafec0debeef8badf00db10c',\n  lostPasswordsUser: (\n    lostPasswordsUser?: Partial<LostPasswordsUser>\n  ): LostPasswordsUser => ({\n    user_id: 1000,\n    ...lostPasswordsUser,\n  }),\n  oauthGoogleUrl: (\n    oauthGoogleUrl: Partial<OAuthGoogleURL> = {}\n  ): OAuthGoogleURL => ({\n    url: 'https://google-oauth',\n    ...oauthGoogleUrl,\n  }),\n  organization: (organization?: Partial<Organization>): Organization => ({\n    ...{\n      id: 1,\n      at: 'string',\n      created_at: 'string',\n      name: 'string',\n      owner: true,\n      pricing_plan_id: 0,\n      server_deleted_at: 'string',\n      admin: true,\n      user_count: 3,\n      is_multi_workspace_enabled: true,\n      max_workspaces: undefined,\n      trial_info: {\n        can_have_trial: false,\n        last_pricing_plan_id: 102,\n        next_payment_date: '2021-05-15',\n        trial: false,\n        trial_end_date: '2021-05-15',\n      },\n    },\n    ...organization,\n  }),\n  organizationWithTrial: (\n    {\n      remainingDays = 0,\n      pricingPlanId = 102,\n      lastPricingPlanId = null,\n    }: {\n      lastPricingPlanId?: PricingPlan | null\n      pricingPlanId?: PricingPlan\n      remainingDays?: number\n    },\n    organization?: Partial<Organization>\n  ): Organization => ({\n    ...factory.organization(organization),\n    is_unified: false,\n    pricing_plan_id: pricingPlanId,\n    trial_info: {\n      ...factory.organization().trial_info,\n      can_have_trial: remainingDays >= 0,\n      last_pricing_plan_id: lastPricingPlanId,\n      next_payment_date:\n        remainingDays >= 0\n          ? moment().startOf('day').add(remainingDays, 'days').toISOString()\n          : moment()\n              .startOf('day')\n              .subtract(Math.abs(remainingDays), 'days')\n              .toISOString(),\n      trial: remainingDays >= 0,\n    },\n  }),\n  organizationOwner: (\n    organizationOwner?: Partial<OrganizationOwner>\n  ): OrganizationOwner => ({\n    id: 1,\n    organization_user_id: 1,\n    organization_id: 1,\n    user_id: 1,\n    email: 'strig',\n    name: 'string',\n    avatar_url: 'string',\n    ...organizationOwner,\n  }),\n  organizationOwnerTransfer: (\n    organizationOwnerTransfer: Partial<OrganizationOwnerTransfer>\n  ): OrganizationOwnerTransfer => ({\n    owner_transfer_id: 1,\n    organization_id: 2,\n    current_owner_id: 3,\n    new_owner_id: 4,\n    requester_id: 5,\n    created_at: 'string',\n    current_owner_accepted:\n      organizationOwnerTransfer.current_owner_accepted || true,\n    current_owner_accepted_at:\n      organizationOwnerTransfer.current_owner_accepted_at || 'string',\n    new_owner_accepted: organizationOwnerTransfer.new_owner_accepted || true,\n    new_owner_accepted_at:\n      organizationOwnerTransfer.new_owner_accepted_at || 'string',\n    outcome_name: organizationOwnerTransfer.outcome_name || 'Success',\n    finished_at: organizationOwnerTransfer.finished_at || 'string',\n    ...organizationOwnerTransfer,\n  }),\n  organizationSubscription: (\n    organizationSubscription?: Partial<OrganizationSubscription>\n  ): OrganizationSubscription => ({\n    auto_renew: true,\n    campaign_available: true,\n    next_payment_date: '2030-07-15T12:00:00Z',\n    payment_method: 'stripe',\n    pricing_plan_id: 101,\n    trial_available: false,\n    renewal_at: '2030-07-15T12:00:00Z',\n    card_details: null,\n    contact_details: null,\n    last_payment: null,\n    // unified subscription endpoint fields\n    subscription_created_at: '2030-06-15',\n    current_period_starts_at: '2030-06-15',\n    current_period_ends_at: '2030-07-15',\n    billing_period_in_months: null,\n    cancel_date: null,\n    currency: 'USD',\n    end_date: '2030-07-15',\n    enterprise: false,\n    is_unified: true,\n    plan_name: 'Premium plan',\n    renewal_date: '2030-07-15',\n    seat_cost_in_cents: 2000,\n    seats: 1,\n    site: 'toggl_ou',\n    start_date: '2030-06-15',\n    state: 'trialing',\n    trial_end_date: '2030-07-15',\n    trial_start_date: '2030-06-15',\n    new_signup_trial: true,\n    ...organizationSubscription,\n  }),\n  organizationSubscriptionCustomer: (\n    organizationSubscriptionCustomer?: Partial<OrganizationSubscriptionCustomer>\n  ): OrganizationSubscriptionCustomer => ({\n    id: '',\n    customer_name: '',\n    toggl_user_email: '',\n    tax_number: '',\n    country_id: '',\n    state: '',\n    postal_code: '',\n    address_line: '',\n    site: 'stripe_ou',\n    currency: '',\n    ...organizationSubscriptionCustomer,\n  }),\n  organizationSubscriptionCalculation: (\n    organizationSubscriptionCalculation?: Partial<OrganizationSubscriptionCalculation>\n  ): OrganizationSubscriptionCalculation => ({\n    calculation:\n      '18.00 USD × 23 users × 12 months - 50% discount until 01-01-2028',\n    currency: 'USD',\n    period: 12,\n    tax_percentage: 20,\n    total_amount: 298080,\n    ...organizationSubscriptionCalculation,\n  }),\n  organizationSubscriptionContactDetails: (\n    contactDetails: Partial<OrganizationSubscriptionContactDetails> = {}\n  ): OrganizationSubscriptionContactDetails => ({\n    company_address: 'Tornimäe tn 5',\n    company_name: 'Toggl OÜ',\n    contact_detail_id: 1,\n    contact_email: contactDetails.contact_email || 'support@toggl.com',\n    contact_person: contactDetails.contact_person || 'Peter Pan',\n    country_id: 1,\n    country_subdivision_id: contactDetails.country_subdivision_id || null,\n    created_at: '2020-05-27T17:33:26.170743Z',\n    customer_id: 1,\n    is_eu_resident: false,\n    updated_at: '2020-05-27T17:33:26.170743Z',\n    user_id: 1,\n    vat_number: contactDetails.vat_number || null,\n    vat_number_valid: false,\n    vat_number_validated_at: contactDetails.vat_number_validated_at || null,\n    zip_code: contactDetails.zip_code || '10145',\n    ...contactDetails,\n  }),\n  organizationSubscriptionContactDetailsPayload: (\n    contactDetails: Partial<OrganizationSubscriptionContactDetailsPayload> = {}\n  ): OrganizationSubscriptionContactDetailsPayload => ({\n    company_address: 'Tornimäe tn 5',\n    company_name: contactDetails.company_name || 'Toggl OÜ',\n    company_state: contactDetails.company_state || 'Harju',\n    contact_email: contactDetails.contact_email || 'support@toggl.com',\n    contact_person: contactDetails.contact_person || 'Peter Pan',\n    country_id: 1,\n    country_subdivision_id: contactDetails.country_subdivision_id || null,\n    tax_number: contactDetails.tax_number || null,\n    zip_code: contactDetails.zip_code || '10145',\n    ...contactDetails,\n  }),\n  organizationPricingPlans: (\n    organizationPricingPlans?: Partial<OrganizationPricingPlans>\n  ): OrganizationPricingPlans => ({\n    currency_id: 1,\n    discount_percentage: 0,\n    discount_to: undefined,\n    tax_percentage: 0,\n    user_count: 3,\n    plans: [\n      {\n        name: 'Free',\n        plan_id: 0,\n        pricing_plans: [\n          {\n            name: 'Free',\n            period: 1,\n            pricing_plan_id: 0,\n            prices_month: {\n              actual: 0,\n              base: 0,\n              with_tax: 0,\n            },\n            prices_period: {\n              actual: 0,\n              base: 0,\n              with_tax: 0,\n            },\n          },\n        ],\n      },\n      {\n        name: 'Starter',\n        plan_id: 100,\n        pricing_plans: [\n          {\n            name: 'Starter monthly',\n            period: 1,\n            pricing_plan_id: 100,\n            prices_month: {\n              actual: 850,\n              base: 850,\n              with_tax: 1020,\n            },\n            prices_period: {\n              actual: 850,\n              base: 850,\n              with_tax: 1020,\n            },\n          },\n          {\n            name: 'Starter annual',\n            period: 12,\n            pricing_plan_id: 101,\n            prices_month: {\n              actual: 765,\n              base: 765,\n              with_tax: 918,\n            },\n            prices_period: {\n              actual: 9180,\n              base: 9180,\n              with_tax: 11016,\n            },\n          },\n        ],\n      },\n      {\n        name: 'Premium',\n        plan_id: 102,\n        pricing_plans: [\n          {\n            name: 'Premium monthly',\n            period: 1,\n            pricing_plan_id: 102,\n            prices_month: {\n              actual: 1700,\n              base: 1700,\n              with_tax: 2040,\n            },\n            prices_period: {\n              actual: 1700,\n              base: 1700,\n              with_tax: 2040,\n            },\n          },\n          {\n            name: 'Premium annual',\n            period: 12,\n            pricing_plan_id: 103,\n            prices_month: {\n              actual: 1530,\n              base: 1530,\n              with_tax: 1836,\n            },\n            prices_period: {\n              actual: 18360,\n              base: 18360,\n              with_tax: 22032,\n            },\n          },\n        ],\n      },\n      {\n        plan_id: 20,\n        name: 'Personal Pro',\n        pricing_plans: [\n          {\n            pricing_plan_id: 21,\n            name: 'Personal Pro',\n            period: 1,\n            prices_month: {\n              base: 0,\n              with_tax: 0,\n              actual: 0,\n            },\n            prices_period: {\n              base: 0,\n              with_tax: 0,\n              actual: 0,\n            },\n          },\n          {\n            pricing_plan_id: 20,\n            name: 'Personal Pro',\n            period: 12,\n            prices_month: {\n              base: 0,\n              with_tax: 0,\n              actual: 0,\n            },\n            prices_period: {\n              base: 0,\n              with_tax: 0,\n              actual: 0,\n            },\n          },\n        ],\n      },\n    ],\n    ...organizationPricingPlans,\n  }),\n  organizationPricingPlan: (\n    organizationPricingPlan?: Partial<OrganizationPricingPlan>\n  ): OrganizationPricingPlan => ({\n    name: 'string',\n    period: 1,\n    pricing_plan_id: 100,\n    prices_month: organizationPricingPlan?.prices_month || {\n      actual: 0,\n      base: 0,\n      with_tax: 0,\n    },\n    prices_period: organizationPricingPlan?.prices_period || {\n      actual: 9,\n      base: 10,\n      with_tax: 12,\n    },\n    ...organizationPricingPlan,\n  }),\n  organizationUser: (\n    organizationUser?: Partial<OrganizationUser>,\n    workspaces?: Readonly<\n      Pick<Workspace, 'admin' | 'role' | 'name'> & {\n        workspace_id: number\n        inactive: boolean\n      }\n    >[]\n  ): OrganizationUser => ({\n    admin: false,\n    avatar_url: 'string',\n    can_edit_email: true,\n    email: 'string',\n    groups: [{ group_id: 1, name: 'string' }],\n    id: 1,\n    joined: true,\n    invitation_code: null,\n    name: 'string',\n    owner: false,\n    inactive: false,\n    user_id: 1,\n    workspaces: workspaces || [\n      { workspace_id: 1, admin: false, name: 'string', inactive: false },\n    ],\n    ...organizationUser,\n  }),\n  organizationCustomer: (\n    organizationCustomer?: Partial<OrganizationCustomer>\n  ): OrganizationCustomer => ({\n    balance_in_cents: 1,\n    balance_updated_at: 'string',\n    company: undefined,\n    company_id: undefined,\n    contact_detail: undefined,\n    created_at: 'string',\n    currency_id: 1,\n    customer_id: 1,\n    purchase_order_enabled: false,\n    ...organizationCustomer,\n  }),\n  signup: (signup?: Signup): Signup => {\n    if (signup) {\n      return signup\n    }\n\n    return {\n      country_id: 32,\n      created_with: 'Factory',\n      email: 'quickest.railway@toggl.com',\n      password: '123ABCdef',\n      tos_accepted: true,\n      workspace: {\n        initial_pricing_plan: 0,\n        initial_trial: false,\n      },\n    }\n  },\n  organizationGroup: (\n    organizationGroup: Partial<OrganizationGroup> = {}\n  ): OrganizationGroup => ({\n    group_id: 1,\n    name: 'string',\n    at: 'string',\n    workspaces: [1],\n    users: [\n      { user_id: 1, name: 'John Doe', avatar_url: 'string', joined: true },\n    ],\n    ...organizationGroup,\n  }),\n  organizationGroupUser: (\n    organizationGroupUser: Partial<OrganizationGroupUser> = {}\n  ): OrganizationGroupUser => ({\n    user_id: 1,\n    name: 'John Doe',\n    avatar_url: 'string',\n    joined: true,\n    ...organizationGroupUser,\n  }),\n  project: (project: Partial<Project>): Project => ({\n    active: true,\n    actual_hours: undefined,\n    at: '2018-01-01',\n    auto_estimates: false,\n    billable: false,\n    cid: undefined,\n    client_id: 0,\n    // TODO: Migrate @toggl/style to TypeScript.\n    // eslint-disable-next-line @toggl/no-color-literals\n    color: '#FEFEFF' /* Style['color']['newWhite']) */,\n    created_at: '2001-01-01',\n    currency: undefined,\n    estimated_hours: undefined,\n    fixed_fee: null,\n    id: 1,\n    is_private: false,\n    name: 'Test Project',\n    rate: undefined,\n    recurring: false,\n    start_date: '',\n    server_deleted_at: undefined,\n    template: false,\n    wid: 1,\n    workspace_id: 1,\n    is_shared: false,\n    ...project,\n  }),\n  projectCreateFormValues: (\n    projectCreateFormValues: Partial<ProjectCreateFormValues> = {}\n  ): ProjectCreateFormValues => ({\n    auto_estimates: true,\n    billable: true,\n    client_id: null,\n    color: '',\n    currency: '',\n    estimated_hours: 4,\n    estimates: true,\n    fixed_fee: null,\n    is_private: true,\n    name: 'test_project',\n    new_client: null,\n    rate: null,\n    schedule_rate_date: null,\n    recurring: true,\n    recurring_parameters: {\n      period: '',\n    },\n    start_date: '',\n    template: null,\n    workspace_id: 1,\n    ...projectCreateFormValues,\n  }),\n  projectCreateProperties: (\n    projectCreateProperties: Partial<ProjectCreateProperties> = {}\n  ): ProjectCreateProperties => ({\n    active: true,\n    auto_estimates: false,\n    billable: true,\n    // eslint-disable-next-line @toggl/no-color-literals\n    color: '#FEFEFF',\n    fixed_fee: null,\n    is_private: false,\n    name: 'Test Project',\n    recurring: false,\n    recurring_parameters: null,\n    start_date: '',\n    template: false,\n    wid: 1,\n    is_shared: false,\n    ...projectCreateProperties,\n  }),\n  projectUser: (projectUser: Partial<ProjectUser>): ProjectUser => ({\n    at: '2018-01-01',\n    gid: undefined,\n    id: 1,\n    labour_cost: undefined,\n    manager: false,\n    project_id: 1,\n    rate: undefined,\n    user_id: 1,\n    workspace_id: 1,\n    ...projectUser,\n  }),\n  projectGroup: (projectGroup: Partial<ProjectGroup>): ProjectGroup => ({\n    id: 1,\n    group_id: 1,\n    pid: 1,\n    wid: 1,\n    ...projectGroup,\n  }),\n  task: (task: Partial<Task>): Task => ({\n    active: true,\n    at: task.at || null,\n    estimated_seconds: 0,\n    id: 1,\n    name: 'Test Task',\n    pid: 1,\n    tracked_seconds: 0,\n    wid: 1,\n    ...task,\n  }),\n  taskV9: (task: Partial<TaskV9>): TaskV9 => ({\n    active: true,\n    at: task.at || null,\n    estimated_seconds: 0,\n    id: 1,\n    name: 'Test task',\n    project_id: 1,\n    tracked_seconds: 0,\n    workspace_id: 1,\n    user_id: task.user_id || 1,\n    ...task,\n  }),\n  timeEntryConstraints: (\n    constraints: Partial<TimeEntryConstraints>\n  ): TimeEntryConstraints => ({\n    description_present: false,\n    project_present: false,\n    tag_present: false,\n    task_present: false,\n    time_entry_constraints_enabled: false,\n    ...constraints,\n  }),\n  client: (client: Partial<Client>): Client => ({\n    at: 'string',\n    id: 1,\n    name: 'Test Client',\n    wid: 1,\n    archived: false,\n    permissions: allClientPermissions,\n    ...client,\n  }),\n  clientServer: (client: Partial<ClientServer>): ClientServer => ({\n    at: 'string',\n    id: 1,\n    name: 'Test Client',\n    wid: 1,\n    archived: false,\n    ...client,\n  }),\n  customer: (customer: Partial<WorkspaceCustomer>): WorkspaceCustomer => ({\n    balance_in_cents: 1,\n    balance_updated_at: 'string',\n    company: undefined,\n    company_id: undefined,\n    contact_detail: undefined,\n    created_at: 'string',\n    currency_id: 1,\n    customer_id: 1,\n    purchase_order_enabled: false,\n    ...customer,\n  }),\n  favorite: (favorite: Partial<Favorite>): Favorite => ({\n    billable: false,\n    public: false,\n    description: 'Description',\n    project_id: null,\n    task_id: null,\n    tag_ids: [],\n    favorite_id: 1,\n    workspace_id: 1,\n    rank: 0,\n    ...favorite,\n  }),\n  group: (group: Partial<Group>): Group => ({\n    at: 'string',\n    id: 1,\n    name: 'string',\n    workspace_id: 1,\n    ...group,\n  }),\n  login: (login?: Login): Login =>\n    login ?? {\n      email: 'quickets.railway@toggl.com',\n      password: '123ABCdef😃😃😃',\n    },\n  notification: ({\n    ...notification\n  }: Partial<ServerNotification>): Notification => ({\n    actions: {\n      test: { type: 'test', code: 'test12345' },\n      default: 'test',\n    },\n    class: 1,\n    content: {\n      default_message: undefined,\n      id: 'id',\n      values: undefined,\n    },\n    created_at: '2019-01-24T00:05:30+00:00',\n    id: 1,\n    notification_type: 'notification_type',\n    read_at: undefined,\n    title: {\n      default_message: undefined,\n      id: 'id',\n      values: undefined,\n    },\n    user_id: 1,\n    ...notification,\n  }),\n  paymentRecord: (paymentRecord: Partial<PaymentRecord>): PaymentRecord => ({\n    creation_date: '2021-01-06T14:39:34.695Z',\n    currency: 'USD',\n    currency_id: 1,\n    description: 'Premium, until 2019-06-03, 21 users',\n    id: paymentRecord.id ?? (paymentRecord.uid === undefined ? 1 : null),\n    uid: paymentRecord.uid ?? null,\n    initial_id: paymentRecord.initial_id || null,\n    record_type: 'invoice',\n    total_amount: 1,\n    ...paymentRecord,\n  }),\n  timeEntry: (timeEntry: Partial<TimeEntry>): TimeEntry => ({\n    at: '2019-02-04',\n    billable: false,\n    description: 'description',\n    duration: 10,\n    duronly: false,\n    id: 1,\n    server_deleted_at: null,\n    start: '2019-01-24T00:05:30+00:00',\n    uid: 1,\n    user_id: 1,\n    wid: 1,\n    ...timeEntry,\n  }),\n  timeEntryInvitation: (\n    timeEntryInvitation: Partial<TimeEntryInvitation>,\n    user: Partial<User> = {},\n    timeEntry: Partial<TimeEntryV9> = {}\n  ): TimeEntryInvitation => ({\n    time_entry_invitation_id: 1,\n    workspace_id: user.wid ?? 1,\n    shared_by_user_id: user.id ?? 1,\n    shared_by_user_name: user.name ?? 'string',\n    time_entry: {\n      ...factory.timeEntry({}),\n      user_id: user.id ?? 1,\n      workspace_id: user.wid ?? 1,\n      ...timeEntry,\n    },\n    ...timeEntryInvitation,\n  }),\n  timesheet: (timesheet: Partial<Timesheet>): Timesheet => ({\n    approved_or_rejected_at: '',\n    approved_or_rejected_id: 1,\n    approved_or_rejected_name: '',\n    approver_id: 1,\n    approver_name: 'Assigned Approver',\n    end_date: moment().endOf('week').format('YYYY-MM-DD'),\n    member_id: 1,\n    member_name: 'Member',\n    period_editable: true,\n    period_locked: false,\n    period_end: '',\n    period_start: '',\n    periodicity: 'weekly',\n    rejection_comment: null,\n    reminder_sent_at: moment().endOf('week').toISOString(),\n    start_date: moment().startOf('week').format('YYYY-MM-DD'),\n    status: 'unsubmitted',\n    submitted_at: moment().startOf('week').toISOString(),\n    timesheet_setup_id: 1,\n    workspace_id: 12,\n    ...timesheet,\n  }),\n  timesheetSetup: (\n    timesheetSetup: Partial<TimesheetSetup>\n  ): TimesheetSetup => ({\n    id: 1,\n    member_id: 1,\n    member_name: 'Member',\n    approver_id: 1,\n    approver_name: 'Approver',\n    periodicity: 'weekly',\n    start_date: moment().startOf('week').format('YYYY-MM-DD'),\n    end_date: moment().endOf('week').format('YYYY-MM-DD'),\n    reminder_day: 5,\n    reminder_time: '17:00',\n    errors: [],\n    workspace_id: 1,\n    ...timesheetSetup,\n  }),\n  timesheetSetupCreation: (\n    timesheetSetupCreation: Partial<TimesheetSetupCreation>\n  ): TimesheetSetupCreation => ({\n    member_ids: [3],\n    approver_id: 1,\n    periodicity: 'weekly',\n    start_date: moment().startOf('week').format('YYYY-MM-DD'),\n    reminder_day: null,\n    reminder_time: null,\n    ...timesheetSetupCreation,\n  }),\n  tempTimeEntry: (timeEntry: Partial<TempTimeEntry> = {}): TempTimeEntry => ({\n    at: '2019-02-04',\n    billable: false,\n    description: 'description',\n    duration: 10,\n    duronly: false,\n    id: 1,\n    server_deleted_at: null,\n    start: '2019-01-24T00:05:30+00:00',\n    uid: 1,\n    user_id: 1,\n    wid: 1,\n    _tempId: 1,\n    ...timeEntry,\n  }),\n  timezones: (timezones: Timezones = []): Timezones => [\n    'America/Tijuana',\n    ...timezones,\n  ],\n  user: (user: Partial<User>): User => ({\n    active: true,\n    admin: false,\n    at: 'string',\n    avatar_file_name: user.avatar_file_name || null,\n    email: 'string',\n    group_ids: user.group_ids || null,\n    id: 1,\n    inactive: user.inactive || null,\n    invitation_code: user.invitation_code || null,\n    invite_url: user.invite_url || null,\n    labour_cost: user.labour_cost || null,\n    name: 'string',\n    owner: false,\n    rate: user.rate || null,\n    timezone: 'string',\n    uid: 1,\n    wid: 1,\n    workspaceUserId: 1,\n    ...user,\n  }),\n  workspace: (workspace: Partial<Workspace> = {}): Workspace => ({\n    admin: true,\n    at: 'string',\n    business_ws: true,\n    csv_upload: { at: '2022', log_id: 1 },\n    default_currency: 'string',\n    ical_enabled: true,\n    ical_url: 'string',\n    id: 1,\n    last_modified: DateTime.now().toISODate(),\n    logo_url: 'string',\n    name: 'string',\n    only_admins_may_create_projects: true,\n    only_admins_may_create_tags: false,\n    only_admins_see_billable_rates: true,\n    only_admins_see_team_dashboard: true,\n    organization_id: 1,\n    premium: true,\n    profile: 1,\n    projects_billable_by_default: true,\n    projects_private_by_default: true,\n    suspended_at: workspace.suspended_at || null,\n    reports_collapse: false,\n    permissions: allWorkspacePermissions,\n    ...workspace,\n  }),\n  workspaceAlert: (\n    workspaceAlert?: Partial<WorkspaceAlert>\n  ): WorkspaceAlert => ({\n    id: 1,\n    source_kind: 'any_project',\n    object_type: 1,\n    receivers: 1,\n    threshold: 50,\n    wid: 1,\n    threshold_type: 'time_estimate',\n    thresholds: [50],\n    receiver_roles: ['workspace_admin'],\n    receiver_users: [],\n    receiver_groups: [],\n    ...workspaceAlert,\n  }),\n  workspaceFeature: (\n    feature?: Partial<WorkspaceFeature>\n  ): WorkspaceFeature => ({\n    enabled: true,\n    feature_id: 1,\n    name: 'archive_client',\n    ...feature,\n  }),\n  workspaceReminder: (\n    workspaceReminder: Partial<WorkspaceReminder>\n  ): WorkspaceReminder => ({\n    reminder_id: 1,\n    created_at: 'string',\n    frequency: 1,\n    group_ids: [1],\n    threshold: 1,\n    user_ids: [1],\n    workspace_id: 1,\n    ...workspaceReminder,\n  }),\n  meReminder: (meReminder: Partial<MeReminder>): MeReminder => ({\n    created_at: '2022-11-11T11:40:45.414975Z',\n    frequency: 7,\n    group_ids: null,\n    reminder_id: 1,\n    threshold: 100,\n    user_ids: null,\n    workspace_id: 1,\n    ...meReminder,\n  }),\n  workspaceSSOConfig: (\n    workspaceSSOConfig: Partial<WorkspaceSSOConfig>\n  ): WorkspaceSSOConfig => ({\n    domain: 'domain',\n    enabled: false,\n    name: 'name',\n    ...workspaceSSOConfig,\n  }),\n  workspaceSSOFetch: (\n    fetch: Partial<\n      {\n        config: Partial<WorkspaceSSOConfig>\n      } & WorkspaceSSOInfo\n    >\n  ): WorkspaceSSOFetch => {\n    const { config: fetchConfig, ...fetchInfo } = fetch\n    return {\n      config: factory.workspaceSSOConfig(fetchConfig || {}),\n      ...factory.workspaceSSOInfo(fetchInfo || {}),\n    }\n  },\n  workspaceSSOInfo: (info: Partial<WorkspaceSSOInfo>): WorkspaceSSOInfo => ({\n    sp_settings: {\n      acs_url: 'acs_url',\n      entity_id: 'entity_id',\n      ...info.sp_settings,\n    },\n  }),\n  workspaceSubscription: (\n    subscription?: Partial<WorkspaceSubscription>\n  ): WorkspaceSubscription => ({\n    auto_renew: true,\n    campaign_available: true,\n    next_payment_date: '2000-01-28',\n    payment_method: 'smth',\n    pricing_plan_id: 101,\n    trial_available: false,\n    is_subscription_beta: true,\n    ...subscription,\n  }),\n  workspaceSubscriptionWithTrial: ({\n    remainingDays = 0,\n    pricingPlanId = 102,\n    lastPricingPlanId = null,\n  }: {\n    lastPricingPlanId?: PricingPlan | null\n    pricingPlanId?: PricingPlan\n    remainingDays?: number\n  }): WorkspaceSubscription => ({\n    is_subscription_beta: false,\n    auto_renew: true,\n    campaign_available: true,\n    payment_method: 'smth',\n    pricing_plan_id: pricingPlanId,\n    last_pricing_plan_id: lastPricingPlanId,\n    subscription_period: {\n      subscription_id: 1,\n      subscription_period_id: 1,\n      user_count: 1,\n      finished_on: null,\n      created_at: (remainingDays >= 0\n        ? moment().startOf('day').add(remainingDays, 'days')\n        : moment().startOf('day').subtract(Math.abs(remainingDays), 'days')\n      )\n        .subtract(1, 'months')\n        .toISOString(),\n      started_on: (remainingDays >= 0\n        ? moment().startOf('day').add(remainingDays, 'days')\n        : moment().startOf('day').subtract(Math.abs(remainingDays), 'days')\n      )\n        .subtract(1, 'months')\n        .toISOString(),\n      trial: remainingDays >= 0,\n    },\n    next_payment_date:\n      remainingDays >= 0\n        ? moment().startOf('day').add(remainingDays, 'days').toISOString()\n        : moment()\n            .startOf('day')\n            .subtract(Math.abs(remainingDays), 'days')\n            .toISOString(),\n    trial_available: remainingDays >= 0,\n  }),\n  workspaceSubscriptionContactDetails: (\n    contactDetails: Partial<WorkspaceSubscriptionContactDetails>\n  ): WorkspaceSubscriptionContactDetails => ({\n    company_address: 'string',\n    company_name: 'string',\n    company_state: 'string',\n    contact_detail_id: 1,\n    contact_email: 'string',\n    contact_person: 'string',\n    country_id: 1,\n    country_subdivision_id: undefined,\n    created_at: 'string',\n    customer_id: 1,\n    is_eu_resident: false,\n    updated_at: 'string',\n    user_id: 1,\n    vat_number: undefined,\n    vat_number_valid: false,\n    vat_number_validated_at: undefined,\n    zip_code: 'string',\n    ...contactDetails,\n  }),\n  workspacePlans: (plans: Partial<WorkspacePlans>): WorkspacePlans => ({\n    currency_id: 1,\n    discount_percentage: 0,\n    discount_to: undefined,\n    plans: [\n      {\n        name: 'Free',\n        plan_id: 0,\n        pricing_plans: [\n          {\n            name: 'Free',\n            period: 1,\n            pricing_plan_id: 0,\n            prices_month: {\n              actual: 0,\n              base: 0,\n              with_tax: 0,\n            },\n            prices_period: {\n              actual: 0,\n              base: 0,\n              with_tax: 0,\n            },\n          },\n        ],\n      },\n    ],\n    tax_percentage: 0,\n    user_count: 3,\n    ...plans,\n  }),\n  workspacePreferences: ({\n    report_locked_at: reportLockedAt,\n    ...preferences\n  }: Partial<WorkspacePreferences>): WorkspacePreferences => ({\n    'annual-master-campaign-2018': false,\n    initial_pricing_plan: 0,\n    report_locked_at: reportLockedAt,\n    inc_tos_accepted_at: new Date().toString(),\n    single_sign_on: false,\n    ...preferences,\n  }),\n  workspaceUser: ({\n    ...workspaceUser\n  }: Partial<WorkspaceUser>): WorkspaceUser => ({\n    active: true,\n    admin: false,\n    at: 'string',\n    avatar_file_name: workspaceUser.avatar_file_name || null,\n    email: 'string',\n    group_ids: workspaceUser.group_ids || null,\n    id: 1,\n    inactive: workspaceUser.inactive || false,\n    invitation_code: workspaceUser.invitation_code || null,\n    invite_url: workspaceUser.invite_url || null,\n    is_direct: workspaceUser.is_direct || true,\n    labour_cost: workspaceUser.labour_cost || null,\n    name: 'string',\n    rate: workspaceUser.rate || null,\n    timezone: 'string',\n    workspace_id: 1,\n    working_hours_in_minutes: workspaceUser.working_hours_in_minutes || null,\n    user_id: 1,\n    organization_admin: false,\n    ...workspaceUser,\n  }),\n  closeAccountData: (data: Partial<CloseAccountData>): CloseAccountData => ({\n    comments: '',\n    ...data,\n    closing_options: data.closing_options ?? {\n      question: 0,\n      variants: [],\n    },\n  }),\n  preferences: (preferences: Partial<MePreferences>): MePreferences => ({\n    timeofday_format: 'h:mm A',\n    date_format: 'YYYY-MM-DD',\n    duration_format: 'improved',\n    record_timeline: false,\n    send_product_emails: false,\n    send_weekly_report: false,\n    send_weekly_digest: {\n      enabled: preferences.send_weekly_report ?? false, // try to default to the legacy field first\n      day: 1, // Monday\n      time: '',\n    },\n    send_timer_notifications: false,\n    AchievementNotifications: 'achievement notification',\n    DisplayDensity: 'tiny',\n    VisibleFooter: 'sticky-today',\n    OfflineMode: 'enabled-mode',\n    ManualEntryMode: 'duration',\n    ProjectDashboardActivityMode: 'display-all-users',\n    SeenFollowModal: false,\n    ManualMode: false,\n    WebTimeEntryStarted: false,\n    WebTimeEntryStopped: false,\n    SeenProjectDashboardOverlay: false,\n    ManualModeOverlaySeen: false,\n    ShowTimeInTitle: false,\n    FirstSeenBusinessPromo: 1432196472354,\n    SnowballReportRounding: '{\"enabled\":false,\"minutes\":30,\"mode\":1}',\n    SummaryReportGrouping: 'projects',\n    SummaryReportSubGrouping: 'time_entries',\n    SummaryReportSortField: 'title',\n    SummaryReportSortAsc: false,\n    SummaryReportDistinctRates: false,\n    ReportsHideWeekends: false,\n    WeeklyReportGrouping: 'projects',\n    WeeklyReportValueToShow: 'time',\n    CollapseTimeEntries: false,\n    CollapseDetailedReportEntries: false,\n    ToSAcceptNeeded: false,\n    ProjectShortcutEnabled: false,\n    TagsShortcutEnabled: false,\n    TimerView: 'calendar',\n    alpha_features: [{ code: 'alpha_program', enabled: false }],\n    show_timeline_in_day_view: false,\n    show_weekend_on_timer_page: true,\n    keyboard_shortcuts_enabled: true,\n    theme: 'light',\n    ...preferences,\n  }),\n  workspaceOwnerTransfer: (\n    transfer: Partial<WorkspaceOwnerTransfer>\n  ): WorkspaceOwnerTransfer => ({\n    owner_transfer_id: 1,\n    requester_id: 1,\n    new_owner_id: 2,\n    created_at: '12-12-2019',\n    current_owner_accepted: false,\n    current_owner_accepted_at: '12-12-2020',\n    new_owner_accepted: false,\n    new_owner_accepted_at: '12-12-2020',\n    outcome: 'outcome',\n    outcome_name: 'Success',\n    finished_at: '12-12-2020',\n    ...transfer,\n  }),\n  weeklyReportEntry: (\n    weeklyReportEntry: Partial<WeeklyReportEntries[number]>\n  ): WeeklyReportEntries[number] => ({\n    billable_seconds: [0, 0, 0, 0, 0, 0, 0],\n    currency: 'USD',\n    hourly_rate_in_cents: 0,\n    seconds: [0, 0, 0, 0, 0, 0, 0],\n    project_id: weeklyReportEntry.project_id ?? 1,\n    planned_task_id: weeklyReportEntry.planned_task_id ?? null,\n    user_id: 123,\n    ...weeklyReportEntry,\n  }),\n  currency: (currency: Partial<Currency>): Currency => ({\n    currency_id: 1,\n    iso_code: 'USD',\n    symbol: '$',\n    ...currency,\n  }),\n  tag: (tag: Partial<Tag>): Tag => ({\n    id: '1',\n    name: 'test',\n    workspace_id: 1,\n    at: 'string',\n    ...tag,\n  }),\n  tagServer: (tag: Partial<TagServer>): TagServer => ({\n    id: 1,\n    name: 'test',\n    workspace_id: 1,\n    at: 'string',\n    ...tag,\n  }),\n  tagDraft: (tag: Partial<TagDraft> = {}): TagDraft => ({\n    name: 'test',\n    workspace_id: 1,\n    ...tag,\n  }),\n  tagUpdate: (tag: Partial<TagUpdate>): TagUpdate => ({\n    id: '1',\n    name: 'test',\n    workspace_id: 1,\n    at: 'string',\n    ...tag,\n  }),\n  savedReport: (report: Partial<SavedReport>): SavedReport => ({\n    id: 10,\n    name: 'Testing',\n    token: 'token',\n    fixed_daterange: false,\n    public: false,\n    uid: 10,\n    updated_at: '2016-05-16T18:36:59.163077Z',\n    updated_by: 10,\n    params: '{}',\n    scheduled_email_gids: [],\n    scheduled_email_uids: [],\n    ...report,\n  }),\n  scheduledReport: (schedule: Partial<ScheduledReport>): ScheduledReport => ({\n    report_id: 3537,\n    creator_id: 66816,\n    workspace_id: 33015,\n    bookmark_id: 162640,\n    schedule: {\n      frequency: 'daily',\n      hour: 6,\n      weekdays: [1, 2, 3, 4, 5],\n      index: null,\n    },\n    created_at: '2020-01-29T07:45:20.77822Z',\n    user_ids: [66816],\n    group_ids: [],\n    ...schedule,\n  }),\n\n  jira2Integration: (\n    integration: Partial<Jira2Integration>\n  ): Jira2Integration => ({\n    authentication_status:\n      integration.authentication_status || 'unauthenticated',\n    configuration: integration.configuration || {\n      jira_active_site: 'jira_active_site',\n      mapping_groups: [],\n      on_duplicate: 'overwrite',\n    },\n    enabled: integration.enabled || false,\n    external_entities: integration.external_entities || {\n      jira_active_site: {\n        issue_statuses: ['Open', 'Close'],\n        issue_types: ['Epic', 'Subtask', 'Task'],\n        project_categories: [\n          {\n            id: '1000',\n            name: 'Test category',\n          },\n        ],\n      },\n    },\n    is_syncing: integration.is_syncing || false,\n    jira_sites: integration.jira_sites || null,\n    last_synced: integration.last_synced || null,\n    notifications: integration.notifications || null,\n  }),\n\n  salesforceIntegration: (\n    integration: Partial<SalesforceIntegration>\n  ): SalesforceIntegration => ({\n    authentication_status:\n      integration.authentication_status || 'unauthenticated',\n    configuration: integration.configuration || {\n      mapping_groups: [],\n      on_duplicate: 'overwrite',\n    },\n    enabled: integration.enabled || false,\n    external_entities: integration.external_entities || [],\n    is_syncing: integration.is_syncing || false,\n    last_synced: integration.last_synced || null,\n    notifications: integration.notifications || [],\n    salesforce_site: integration.salesforce_site || null,\n  }),\n\n  integrations: {\n    calendarIntegration: (\n      integration: Partial<CalendarIntegration>\n    ): CalendarIntegration => ({\n      calendar_integration_id: 1,\n      email: 'test@toggl.com',\n      provider: 'google',\n      created_at: '2020-01-01',\n      ...integration,\n    }),\n    calendarIntegrationCalendar: (\n      calendar: Partial<CalendarIntegrationCalendar>\n    ): CalendarIntegrationCalendar => ({\n      selected: true,\n      calendar_id: 1,\n      calendar_integration_id: 1,\n      external_id: 'calendar_200@toggl.com',\n      name: 'Fancy calendar',\n      ...calendar,\n    }),\n    calendarIntegrationEvent: (\n      event: Partial<CalendarIntegrationEvent> = {}\n    ): CalendarIntegrationEvent => ({\n      calendar_event_id: 1,\n      title: 'Taking a trip to Isengard',\n      start_time: '2019-01-01T16:04:05Z',\n      ical_uid: 'e5e5e5',\n      updated: '2019-01-01',\n      end_time: '2020-01-01T17:30:05Z',\n      external_id: 'external',\n      html_link: 'https://calendar',\n      color: {\n        background: null,\n        foreground: null,\n      },\n      calendar_id: 1,\n      calendar_integration_id: 1,\n      ...event,\n    }),\n  },\n\n  eventDetailsSuggestion: (\n    suggestion: Partial<EventDetailsSuggestion> = {}\n  ): EventDetailsSuggestion => ({\n    accuracy: 1,\n    billable: false,\n    last_seen: '2020-01-01T17:30:05Z',\n    project_id: 1,\n    tag_ids: null,\n    task_id: null,\n    workspace_id: 1,\n    ...suggestion,\n  }),\n\n  reportsDataUser: (user: Partial<ReportsDataUser> = {}): ReportsDataUser => ({\n    active: true,\n    admin: false,\n    avatar: null,\n    deactivated: false,\n    email: 'reportsDataUser@toggl.com',\n    fullname: 'Reports Data User',\n    id: 1,\n    workspace_user_id: 0,\n    ...user,\n  }),\n\n  reportsDataClient: (\n    client: Partial<ReportsDataClient> = {}\n  ): ReportsDataClient => ({\n    at: '2020-01-01T17:30:05Z',\n    id: 1,\n    name: 'Reports Data Client',\n    wid: 1,\n    ...client,\n  }),\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { Project, factory } from '@toggl/track-types';\n\nimport Dropdown from '@src/components/Dropdown';\nimport Card from '@src/ui/components/Card';\nimport * as projectService from '@src/services/project';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport { ProjectsDropdown } from '@src/components/ProjectsDropdown';\nimport ChevronDown from '@src/ui/icons/ChevronIcon';\n\nconst messages = defineMessages({\n  title: {\n    id: 'settings.general.projects.defaultProject.title',\n    defaultMessage: 'Default project',\n  },\n  copy: {\n    id: 'settings.general.projects.defaultProject.copy',\n    defaultMessage:\n      'This project will be added to new time entries if no other matching projects are found',\n  },\n  placeholder: {\n    id: 'settings.general.projects.defaultProject.placeholder',\n    defaultMessage: 'No project',\n  },\n});\n\nexport default function DefaultProject() {\n  const intl = useIntl();\n  const { data: projects } = projectService.useProjects();\n  const [selectedProjectId, setSelectedProjectId] =\n    useSetting('defaultProject');\n\n  const placeholderOption = factory.project({\n    id: 0,\n    name: intl.formatMessage(messages.placeholder),\n  });\n\n  const projectsArray = React.useMemo<Project[]>(\n    () =>\n      [placeholderOption].concat(\n        Object.values(projects || {})\n          .reduce<Project[]>((acc, project) => {\n            if (project.active && !project.server_deleted_at) {\n              acc.push(project);\n            }\n            return acc;\n          }, [])\n          .sort((a, b) => a.name.localeCompare(b.name))\n      ),\n    [projects]\n  );\n\n  const selectedProjectName = React.useMemo<string>(\n    () =>\n      (projectsArray.find(p => p.id === selectedProjectId) || placeholderOption)\n        .name,\n    [projectsArray, selectedProjectId]\n  );\n\n  const handleClick = React.useCallback((id: number | null | undefined) => {\n    setSelectedProjectId((id ?? null) as number);\n  }, []);\n\n  return (\n    <Card.Section>\n      <FormattedMessage tagName={Cta} {...messages.title} />\n      <FormattedMessage tagName='span' {...messages.copy} />\n\n      <DropdownContainer>\n        <ProjectsDropdown\n          hideTasks\n          onChange={state => handleClick(state.projectId)}\n          selectedProjectId={selectedProjectId}\n          selectedTaskId={undefined}\n          customTrigger={\n            <Trigger>\n              {selectedProjectName}\n              <ChevronIcon width={10} height={10} />\n            </Trigger>\n          }\n        />\n      </DropdownContainer>\n    </Card.Section>\n  );\n}\n\nconst Cta = styled.h5`\n  font-size: 14px;\n  margin-bottom: -8px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n`;\n\nconst DropdownContainer = styled.div`\n  width: 360px;\n`;\n\nconst Trigger = styled.div<{ height?: number }>`\n  display: flex;\n  width: 360px;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: space-between;\n  height: ${props => props.height || '32'}px;\n  padding-left: 12px;\n  line-height: normal;\n  border: 1px solid ${({ theme }) => theme.colors.ui_40.regular};\n  border-radius: 8px;\n  color: ${({ theme }) => theme.colors.ui.regular};\n  cursor: pointer;\n`;\n\nconst ChevronIcon = styled(ChevronDown)`\n  margin: 0 10px 0px 5px;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Dropdown from '@src/components/Dropdown';\nimport Card from '@src/ui/components/Card';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport { DEFAULT_SETTINGS } from '@src/lib/constants';\n\nconst messages = defineMessages({\n  title: {\n    id: 'settings.general.projects.rememberLast.title',\n    defaultMessage: 'Remember last chosen project',\n  },\n  copy: {\n    id: 'settings.general.projects.rememberLast.copy',\n    defaultMessage:\n      'Remembers the last project you used. This overrides the \"Default project\" setting.',\n  },\n  dontRememberProject: {\n    id: 'settings.general.dontRememberProject',\n    defaultMessage: \"Don't remember last project\",\n  },\n  rememberProjectPerIntegration: {\n    id: 'settings.general.rememberProjectPerIntegration',\n    defaultMessage: 'Remember for each integration',\n  },\n  rememberProjectPerUrl: {\n    id: 'settings.general.rememberProjectPerUrl',\n    defaultMessage: 'Remember for each URL / webpage',\n  },\n});\n\nconst idToMessage = {\n  none: 'dontRememberProject',\n  integration: 'rememberProjectPerIntegration',\n  url: 'rememberProjectPerUrl',\n};\n\nexport default function RememberLast() {\n  const [rememberProjectPer, setRememberProjectPer] =\n    useSetting('rememberProjectPer');\n\n  React.useEffect(() => {\n    if (!idToMessage[rememberProjectPer]) setRememberProjectPer('none');\n  }, [rememberProjectPer, setRememberProjectPer]);\n\n  const handleSelected = React.useCallback((id: string) => {\n    setRememberProjectPer(id as typeof DEFAULT_SETTINGS['rememberProjectPer']);\n  }, []);\n\n  return (\n    <Card.Section>\n      <FormattedMessage tagName={Cta} {...messages.title} />\n      <FormattedMessage tagName='span' {...messages.copy} />\n      <Dropdown\n        selected={rememberProjectPer}\n        onItemClick={handleSelected}\n        css={css`\n          width: 360px;\n        `}\n      >\n        <Dropdown.Trigger>\n          {!!idToMessage[rememberProjectPer] && (\n            <FormattedMessage {...messages[idToMessage[rememberProjectPer]]} />\n          )}\n        </Dropdown.Trigger>\n        <Dropdown.Overlay />\n        <Dropdown.Content>\n          <Dropdown.Item id='none'>\n            <FormattedMessage {...messages.dontRememberProject} />\n          </Dropdown.Item>\n          <Dropdown.Item id='integration'>\n            <FormattedMessage {...messages.rememberProjectPerIntegration} />\n          </Dropdown.Item>\n          <Dropdown.Item id='url'>\n            <FormattedMessage {...messages.rememberProjectPerUrl} />\n          </Dropdown.Item>\n        </Dropdown.Content>\n      </Dropdown>\n    </Card.Section>\n  );\n}\n\nconst Cta = styled.h5`\n  font-size: 14px;\n  margin-bottom: -8px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n`;\n","import * as React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Card from '@src/ui/components/Card';\nimport DefaultProject from './DefaultProject';\nimport RememberLast from './RememberLast';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.projects.header',\n    defaultMessage: 'Projects settings',\n  },\n});\n\nconst Projects: React.FC = () => {\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <DefaultProject />\n      <RememberLast />\n    </Card>\n  );\n};\n\nexport default Projects;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Card from '@src/ui/components/Card';\nimport { Tab } from '@src/types';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.welcome.header',\n    defaultMessage: 'Start tracking time in your favorite apps',\n  },\n  welcome: {\n    id: 'settings.general.welcome.message',\n    defaultMessage:\n      'You can add Toggl Track Browser Extension to over 130 tools, including Trello, Asana, JIRA and many more.',\n  },\n  cta: {\n    id: 'settings.general.welcome.cta',\n    defaultMessage:\n      'Visit the <link>Integrations page</link> to use this feature.',\n  },\n});\n\nconst Welcome: React.FC<{\n  setUrl: React.Dispatch<React.SetStateAction<Tab>>;\n}> = ({ setUrl }) => {\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Content>\n        <FormattedMessage tagName='span' {...messages.welcome} />\n\n        <FormattedMessage\n          tagName='span'\n          {...messages.cta}\n          values={{\n            link: chunk => (\n              <Link onClick={() => setUrl('integrations')}>{chunk}</Link>\n            ),\n          }}\n        />\n      </Content>\n    </Card>\n  );\n};\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 16px;\n  padding-top: 16px;\n`;\n\nconst Link = styled.a`\n  text-decoration: underline;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.grape_120.regular};\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.grape_120.hover};\n  }\n`;\n\nexport default Welcome;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { FormattedMessage, MessageDescriptor } from 'react-intl';\nimport { css } from '@emotion/react';\nimport { track } from '@src/lib/utils';\n\nconst SwitchOption = ({\n  cta,\n  description,\n  value,\n  onChange,\n  customContent,\n  dataHeapId,\n  sideElement,\n}: {\n  cta: MessageDescriptor;\n  description?: MessageDescriptor;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  customContent?: React.ReactNode;\n  dataHeapId?: string;\n  sideElement?: React.ReactNode;\n}) => {\n  const handleSwitchChange = React.useCallback(() => {\n    onChange(!value);\n    if (dataHeapId) track(dataHeapId, { value: !value });\n  }, [dataHeapId, onChange, value]);\n\n  return (\n    <SwitchOverlay onClick={handleSwitchChange}>\n      <div\n        css={css`\n          display: flex;\n          gap: 16px;\n          justify-content: space-between;\n        `}\n      >\n        <div\n          css={css`\n            display: flex;\n            gap: 16px;\n          `}\n        >\n          <SwitchButton>\n            <SwitchCircle checked={value} />\n            <SwitchSlider checked={value} />\n          </SwitchButton>\n          <SwitchLabel>\n            <FormattedMessage tagName={SwitchCta} {...cta} />\n            <FormattedMessage tagName={SwitchDescription} {...description} />\n          </SwitchLabel>\n          {sideElement}\n        </div>\n      </div>\n      {!!customContent && (\n        <div\n          css={css`\n            margin-left: 40px;\n          `}\n        >\n          {customContent}\n        </div>\n      )}\n    </SwitchOverlay>\n  );\n};\n\nconst SwitchOverlay = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0 12px;\n\n  -webkit-appearance: none;\n  width: 100%;\n  background-color: initial;\n  box-shadow: none;\n`;\n\nconst SwitchButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: -15px;\n`;\n\nconst SwitchCircle = styled.div<{ checked: boolean }>`\n  width: 16px;\n  height: 16px;\n  border-radius: 100%;\n  background-color: ${({ checked, theme }) =>\n    checked ? theme.colors.accent.regular : theme.colors.ui_50.regular};\n  position: relative;\n  right: ${({ checked }) => (checked ? '-28px' : '-12px')};\n  box-shadow: 1px 1px 4px 0px #00000066;\n`;\n\nconst SwitchSlider = styled.div<{ checked: boolean }>`\n  width: 24px;\n  height: 8px;\n  border-radius: 34px;\n  background-color: ${({ checked, theme }) =>\n    checked ? theme.colors.accent_020.regular : theme.colors.ui_20.regular};\n`;\n\nconst SwitchLabel = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nconst SwitchCta = styled.span`\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nconst SwitchDescription = styled.span`\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: ${({ theme }) => theme.text.normal};\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nexport default SwitchOption;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Card from '@src/ui/components/Card';\nimport { DurationInput } from '@src/ui/components';\nimport { parseDuration } from '@src/lib/timerUtils';\nimport useSetting from '@src/lib/hooks/useSetting';\n\nimport SwitchOption from '../../components/SwitchOption';\nimport {\n  clearStopAtDayEndAlarm,\n  configureStopAtDayEnd,\n} from '@src/lib/stopTimeAtDayEnd';\nimport { track } from '@src/lib/utils';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.startingStopping.header',\n    defaultMessage: 'Starting and stopping the timer',\n  },\n  startAutomaticallyCta: {\n    id: 'settings.general.startingStopping.startAutomatically.cta',\n    defaultMessage: 'Start timer automatically',\n  },\n  startAutomaticallyDescription: {\n    id: 'settings.general.startingStopping.startAutomatically.description',\n    defaultMessage: `Start a timer with your most recent time entry's details when the browser is opened`,\n  },\n  stopAutomaticallyCta: {\n    id: 'settings.general.startingStopping.stopAutomatically.cta',\n    defaultMessage: 'Stop timer automatically',\n  },\n  stopAutomaticallyDescription: {\n    id: 'settings.general.startingStopping.stopAutomatically.description',\n    defaultMessage: 'Stop the timer when the browser is closed',\n  },\n  stopAtDayEndCta: {\n    id: 'settings.general.startingStopping.stopAtDayEnd.cta',\n    defaultMessage: 'Stop timer automatically at a specified time of day',\n  },\n  stopAtDayEndDescription: {\n    id: 'settings.general.startingStopping.stopAtDayEnd.description',\n    defaultMessage:\n      'Stop the timer automatically when it reaches your specified time',\n  },\n  stopAtDayEndLabel: {\n    id: 'settings.general.startingStopping.stopAtDayEnd.label',\n    defaultMessage: 'Stop time:',\n  },\n});\n\nconst StartingStopping: React.FC = () => {\n  const [startAutomatically, setStartAutomatically] =\n    useSetting('startAutomatically');\n  const [stopAutomatically, setStopAutomatically] =\n    useSetting('stopAutomatically');\n  const [stopAtDayEnd, setStopAtDayEnd] = useSetting('stopAtDayEnd');\n  const [dayEndTime, setDayEndTime] = useSetting('dayEndTime');\n  const [inputValue, setInputValue] = React.useState(dayEndTime);\n\n  React.useEffect(() => {\n    setInputValue(dayEndTime);\n  }, [dayEndTime]);\n\n  const handleStartAutomaticallyChange = React.useCallback(value => {\n    setStartAutomatically(value);\n    track('automate-timer', { context: 'Start', value });\n  }, []);\n\n  const handleStopAutomaticallyChange = React.useCallback(value => {\n    setStopAutomatically(value);\n    track('automate-timer', { context: 'Stop', value });\n  }, []);\n\n  const handleStopAtDayEndChange = React.useCallback(value => {\n    setStopAtDayEnd(value);\n    track('automate-timer', { context: 'Stop At Set Time', value });\n\n    if (value) void configureStopAtDayEnd(dayEndTime);\n    else void clearStopAtDayEndAlarm();\n  }, []);\n\n  const handleInputChange = React.useCallback(\n    (e?: React.ChangeEvent<HTMLInputElement>) => {\n      setInputValue(e?.target.value || '');\n    },\n    []\n  );\n\n  const handleDayEndTimeBlur = React.useCallback(() => {\n    const durationString = parseDuration(inputValue).toISOTime({\n      suppressSeconds: true,\n    });\n    setDayEndTime(durationString);\n    setInputValue(durationString);\n    configureStopAtDayEnd(durationString);\n  }, [inputValue]);\n\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.startAutomaticallyCta}\n          description={messages.startAutomaticallyDescription}\n          value={startAutomatically}\n          onChange={handleStartAutomaticallyChange}\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.stopAutomaticallyCta}\n          description={messages.stopAutomaticallyDescription}\n          value={stopAutomatically}\n          onChange={handleStopAutomaticallyChange}\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.stopAtDayEndCta}\n          description={messages.stopAtDayEndDescription}\n          value={stopAtDayEnd}\n          onChange={handleStopAtDayEndChange}\n        />\n        {stopAtDayEnd && (\n          <DurationContainer>\n            <TimeLabel>\n              <FormattedMessage {...messages.stopAtDayEndLabel} />\n            </TimeLabel>\n            <StyledDuration\n              value={inputValue}\n              onChange={handleInputChange}\n              onBlur={handleDayEndTimeBlur}\n            />\n          </DurationContainer>\n        )}\n      </Card.Section>\n    </Card>\n  );\n};\n\nconst DurationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-top: 8px;\n  margin-left: 54px;\n  width: 300px;\n  gap: 4px;\n`;\n\nconst TimeLabel = styled.span`\n  text-transform: uppercase;\n  font-size: 11px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  color: ${({ theme }) => theme.colors.ui_60.regular};\n`;\n\nconst StyledDuration = styled(DurationInput)`\n  text-align: left;\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.normal};\n\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.colors.ui_40.regular};\n\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nexport default StartingStopping;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Card from '@src/ui/components/Card';\nimport { DurationInput } from '@src/ui/components';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport { configureIdleDetector, removeIdleDetector } from '@src/lib/idle';\n\nimport SwitchOption from '../../components/SwitchOption';\nimport { TimeField } from '@src/ui/components/TimeField';\nimport { Time, parseTime } from '@internationalized/date';\nimport { clearPeriodicReminder } from '@src/lib/reminders';\nimport { useReminderNotificationExperiment } from '@src/lib/hooks/useReminderNotificationExperiment';\nimport { Db } from '@src/lib/db';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.reminders.header',\n    defaultMessage: 'Reminders and idle detection',\n  },\n  remindMeCta: {\n    id: 'settings.general.reminders.remindMe.cta',\n    defaultMessage: 'Remind me to track time',\n  },\n  remindMeDescription: {\n    id: 'settings.general.reminders.remindMe.description',\n    defaultMessage:\n      \"Receive a notification if you're not tracking time during specified hours\",\n  },\n  remindMeConfig: {\n    id: 'settings.general.reminders.remindMe.config',\n    defaultMessage:\n      'On weekdays from <fromTo>to</fromTo> remind me after {interval} minutes since the last time entry stopped.',\n  },\n  idleDetectionCta: {\n    id: 'settings.general.reminders.idleDetection.cta',\n    defaultMessage: 'Idle detection',\n  },\n  idleDetectionDescription: {\n    id: 'settings.general.reminders.idleDetection.description',\n    defaultMessage:\n      \"Receive a notification when you've been idle with a running timer. Allows you to discard the idle time.\",\n  },\n});\n\nconst Reminders: React.FC = () => {\n  const [remindMe, setRemindMe] = useSetting('remindersCheckEnabled');\n  const [idleDetection, setIdleDetection] = useSetting('idleDetectionEnabled');\n\n  const handleRemindMeChange = (value: boolean) => {\n    if (!value) clearPeriodicReminder();\n\n    setRemindMe(value);\n    Db.set('reminderManuallyEdited', true);\n  };\n\n  const handleIdleDetectionChange = (value: boolean) => {\n    setIdleDetection(value);\n  };\n\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.remindMeCta}\n          description={messages.remindMeDescription}\n          value={remindMe}\n          onChange={handleRemindMeChange}\n          dataHeapId='remind-tracking'\n        />\n        {remindMe && (\n          <ConfigWrapper>\n            <FormattedMessage\n              {...messages.remindMeConfig}\n              values={{\n                fromTo: (chunks: React.ReactNode[]) => (\n                  <FromToControl>{chunks}</FromToControl>\n                ),\n                interval: <IntervalControl />,\n              }}\n            />\n          </ConfigWrapper>\n        )}\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.idleDetectionCta}\n          description={messages.idleDetectionDescription}\n          value={idleDetection}\n          onChange={handleIdleDetectionChange}\n          dataHeapId='detect-idle-time'\n        />\n      </Card.Section>\n    </Card>\n  );\n};\n\nconst FromToControl: React.FC<{\n  children: React.ReactNode[] | React.ReactNode;\n}> = ({ children }) => {\n  const [[from, to], setFromTo] = useSetting('remindersFromTo');\n  const [hasError, setHasError] = React.useState(false);\n  const [localFrom, setLocalFrom] = React.useState(parseTime(from));\n  const [localTo, setLocalTo] = React.useState(parseTime(to));\n\n  const handleFromChange = (value: Time) => {\n    const isBeforeTo = value.compare(localTo) < 0;\n    setLocalFrom(value);\n\n    if (!isBeforeTo) {\n      return setHasError(true);\n    }\n\n    setFromTo([value.toString(), to]);\n    setHasError(false);\n  };\n\n  const handleToChange = (value: Time) => {\n    const isAfterFrom = value.compare(localFrom) > 0;\n    setLocalTo(value);\n\n    if (!isAfterFrom) {\n      return setHasError(true);\n    }\n\n    setFromTo([from, value.toString()]);\n    setHasError(false);\n  };\n\n  return (\n    <>\n      <TimeField\n        error={hasError}\n        value={localFrom}\n        onChange={handleFromChange}\n      />\n      {children}\n      <TimeField error={hasError} value={localTo} onChange={handleToChange} />\n    </>\n  );\n};\n\nconst IntervalControl: React.FC = () => {\n  const [interval, setInterval] = useSetting('remindersInterval');\n  const [inputValue, setInputValue] = React.useState(0);\n\n  React.useEffect(() => {\n    setInputValue(interval);\n  }, [interval]);\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = e => {\n    setInputValue(Number(e.target.value));\n  };\n\n  const handleBlur: React.FocusEventHandler<HTMLInputElement> = () => {\n    setInterval(inputValue);\n    setInputValue(inputValue);\n  };\n\n  return (\n    <StyledDuration\n      type='number'\n      value={inputValue}\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n\nconst ConfigWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 53px;\n`;\n\nconst StyledDuration = styled(DurationInput)`\n  display: inline-block;\n  text-align: left;\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.normal};\n  width: 64px;\n  margin: 0 4px 0 4px;\n\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.colors.ui_40.regular};\n\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nexport default Reminders;\n","import { useEffect, useState } from 'react';\n\nexport const useIntersectionObserver = (\n  target: React.RefObject<HTMLDivElement>\n) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const onIntersect = ([entry]: IntersectionObserverEntry[]) => {\n    setIsVisible(entry.isIntersecting);\n  };\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      rootMargin: '0px',\n      threshold: 1.0,\n    });\n\n    observer.observe(target?.current as unknown as Element);\n\n    return () => observer.disconnect();\n  }, []);\n\n  return isVisible;\n};\n","import * as React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Card from '@src/ui/components/Card';\nimport useSetting from '@src/lib/hooks/useSetting';\n\nimport SwitchOption from '../../components/SwitchOption';\nimport { Badge } from '@src/packages/ui/Badge';\nimport { useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { useNewTabDiscoveryExperiment } from '@src/lib/hooks/useNewTabDiscoveryExperiment';\nimport { useIntersectionObserver } from '@src/lib/hooks/useIntersectionObserver';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.other.header',\n    defaultMessage: 'Other settings',\n  },\n  newTabCta: {\n    id: 'settings.general.other.newTab.cta',\n    defaultMessage: 'Enable Toggl Track’s new tab page',\n  },\n  newTabDescription: {\n    id: 'settings.general.other.newTab.description',\n    defaultMessage:\n      'Open a new browser tab to access your personal Toggl Track dashboard and start tracking your time effortlessly',\n  },\n  tinyButtonCta: {\n    id: 'settings.general.other.tinyButton.cta',\n    defaultMessage: 'Enable Tiny Button',\n  },\n  tinyButtonDescription: {\n    id: 'settings.general.other.tinyButton.description',\n    defaultMessage: `Adds a button in all of your browser's tabs, so that you can track time from everywhere.`,\n  },\n  taggingCta: {\n    id: 'settings.general.other.tagging.cta',\n    defaultMessage: 'Enable automatic tagging',\n  },\n  taggingDescription: {\n    id: 'settings.general.other.tagging.description',\n    defaultMessage:\n      'If an integration supports tags or labels, automatically add them to the time entry. Not available in all integrations.',\n  },\n  postPopupCta: {\n    id: 'settings.general.other.postPopup.cta',\n    defaultMessage: 'Open edit popup after starting an integration timer',\n  },\n  postPopupDescription: {\n    id: 'settings.general.other.postPopup.description',\n    defaultMessage:\n      'Automatically opens the edit form immediately after clicking a \"Start timer\" link in any integration',\n  },\n  rightClickCta: {\n    id: 'settings.general.other.rightClick.cta',\n    defaultMessage: 'Show \"Start timer\" option in browser right click menu',\n  },\n  rightClickDescription: {\n    id: 'settings.general.other.rightClick.description',\n    defaultMessage:\n      'Select text and start a timer with that description from the right-click menu. If nothing is selected, the page title is used as the description.',\n  },\n  darkModeCta: {\n    id: 'settings.general.other.darkMode.cta',\n    defaultMessage: 'Enable dark mode',\n  },\n  darkModeDescription: {\n    id: 'settings.general.other.darkMode.description',\n    defaultMessage: 'Use dark mode for Toggl Track Browser Extension',\n  },\n  new: {\n    id: 'settings.general.other.new',\n    defaultMessage: 'New',\n  },\n});\n\nconst Other: React.FC = () => {\n  const theme = useTheme();\n  const newTabElementRef = React.useRef<HTMLDivElement>(null);\n  const [enableTinyButton, setEnableTinyButton] =\n    useSetting('enableTinyButton');\n  const [enableNewTabPage, setEnableNewTabPage] =\n    useSetting('enableNewTabPage');\n  const [tagging, setTagging] = useSetting('enableAutoTagging');\n  const [postPopup, setPostPopup] = useSetting('showPostPopup');\n  const [rightClick, setRightClick] = useSetting('showRightClickButton');\n  const [darkMode, setDarkMode] = useSetting('darkMode');\n  const [darkModeUserSet, setDarkModeUser] = useSetting('darkModeUserSet');\n  const [newTabPageDiscovered, setNewTabPageDiscovered] = useSetting(\n    'newTabPageDiscovered',\n    true\n  );\n\n  const newTabElementVisible = useIntersectionObserver(newTabElementRef);\n\n  React.useEffect(() => {\n    if (newTabElementVisible) setNewTabPageDiscovered(true);\n  }, [newTabElementVisible, setNewTabPageDiscovered]);\n\n  const handleNewTabChange = React.useCallback(\n    value => {\n      chrome.permissions.request(\n        {\n          permissions: ['tabs'],\n        },\n        granted => {\n          if (granted) setEnableNewTabPage(value);\n        }\n      );\n    },\n    [setEnableNewTabPage]\n  );\n\n  const handleTinyButtonChange = React.useCallback(\n    value => {\n      if (value) {\n        chrome.permissions.request(\n          {\n            origins: ['<all_urls>'],\n          },\n          granted => {\n            if (granted) setEnableTinyButton(value);\n          }\n        );\n      } else {\n        setEnableTinyButton(value);\n      }\n    },\n    [setEnableTinyButton]\n  );\n\n  const handleTaggingChange = React.useCallback(value => {\n    setTagging(value);\n  }, []);\n\n  const handlePostPopupChange = React.useCallback(value => {\n    setPostPopup(value);\n  }, []);\n\n  const handleRightClickChange = React.useCallback(value => {\n    setRightClick(value);\n  }, []);\n\n  const handleDarkModeChange = React.useCallback(value => {\n    setDarkMode(value);\n    setDarkModeUser(true);\n  }, []);\n\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Card.Section ref={newTabElementRef}>\n        <SwitchOption\n          cta={messages.newTabCta}\n          description={messages.newTabDescription}\n          value={enableNewTabPage}\n          onChange={handleNewTabChange}\n          dataHeapId='new-tab-page'\n          sideElement={\n            <BadgeContainer>\n              <Badge\n                size='regular'\n                color={theme.colors.orange.regular}\n                textColor={theme.colors.ui_0.regular}\n              >\n                <FormattedMessage {...messages.new} />\n              </Badge>\n            </BadgeContainer>\n          }\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.tinyButtonCta}\n          description={messages.tinyButtonDescription}\n          value={enableTinyButton}\n          onChange={handleTinyButtonChange}\n          dataHeapId='tiny-button'\n          sideElement={\n            <BadgeContainer>\n              <Badge\n                size='regular'\n                color={theme.colors.orange.regular}\n                textColor={theme.colors.ui_0.regular}\n              >\n                <FormattedMessage {...messages.new} />\n              </Badge>\n            </BadgeContainer>\n          }\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.taggingCta}\n          description={messages.taggingDescription}\n          value={tagging}\n          onChange={handleTaggingChange}\n          dataHeapId='automate-tagging'\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.postPopupCta}\n          description={messages.postPopupDescription}\n          value={postPopup}\n          onChange={handlePostPopupChange}\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.rightClickCta}\n          description={messages.rightClickDescription}\n          value={rightClick}\n          onChange={handleRightClickChange}\n        />\n      </Card.Section>\n      <Card.Section>\n        <SwitchOption\n          cta={messages.darkModeCta}\n          description={messages.darkModeDescription}\n          value={darkMode}\n          onChange={handleDarkModeChange}\n        />\n      </Card.Section>\n    </Card>\n  );\n};\n\nconst BadgeContainer = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin-left: 48px;\n`;\n\nexport default Other;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\nimport * as Browser from 'webextension-polyfill';\n\nimport { Button } from '@src/ui/components';\nimport Card from '@src/ui/components/Card';\nimport { DEFAULT_SETTINGS } from '@src/lib/constants';\nimport { Db } from '@src/lib/db';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.resetAll.header',\n    defaultMessage: 'Reset all settings',\n  },\n  cta: {\n    id: 'settings.general.resetAll.cta',\n    defaultMessage: 'This action is irreversible',\n  },\n  description: {\n    id: 'settings.general.resetAll.description',\n    defaultMessage:\n      'All Toggl Track Browser Extension settings will be reset and you will be logged out',\n  },\n  button: {\n    id: 'settings.general.resetAll.button',\n    defaultMessage: 'Reset all settings to default',\n  },\n});\n\nasync function resetAllSettings() {\n  await Browser.storage.sync.clear();\n  Object.keys(DEFAULT_SETTINGS).forEach(\n    (key: keyof typeof DEFAULT_SETTINGS) => {\n      Db.set(key, DEFAULT_SETTINGS[key]);\n    }\n  );\n  window.location.reload();\n}\n\nconst ResetAll: React.FC = () => {\n  const handleButtonClick: React.MouseEventHandler<Element> =\n    React.useCallback(() => {\n      const isConfirmed = confirm(\n        'Are you sure you want to reset your settings?'\n      );\n      if (isConfirmed) resetAllSettings();\n    }, []);\n\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Content>\n        <MessageWrapper>\n          <FormattedMessage tagName={Cta} {...messages.cta} />\n          <FormattedMessage tagName='span' {...messages.description} />\n        </MessageWrapper>\n        <StyledButton onClick={handleButtonClick}>\n          <FormattedMessage {...messages.button} />\n        </StyledButton>\n      </Content>\n    </Card>\n  );\n};\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 16px;\n  padding-top: 16px;\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n`;\n\nconst Cta = styled.h5`\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n`;\n\nconst StyledButton = styled(Button)`\n  height: 36px;\n  width: 220px;\n  color: ${({ theme }) => theme.colors.error_120.regular};\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  white-space: nowrap;\n`;\n\nexport default ResetAll;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\nimport * as Browser from 'webextension-polyfill';\n\nimport { Button } from '@src/ui/components';\nimport Card from '@src/ui/components/Card';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.clearCache.header',\n    defaultMessage: 'Clear cache',\n  },\n  description: {\n    id: 'settings.general.clearCache.description',\n    defaultMessage: `Clear all the extension's cached data.`,\n  },\n  button: {\n    id: 'settings.general.clearCache.button',\n    defaultMessage: 'Clear cache',\n  },\n});\n\nasync function clearCache() {\n  await Browser.storage.local.clear();\n}\n\nconst ClearCache: React.FC = () => {\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Content>\n        <MessageWrapper>\n          <FormattedMessage tagName='span' {...messages.description} />\n        </MessageWrapper>\n        <StyledButton onClick={() => clearCache()}>\n          <FormattedMessage {...messages.button} />\n        </StyledButton>\n      </Content>\n    </Card>\n  );\n};\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 16px;\n  padding-top: 16px;\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n`;\n\nconst StyledButton = styled(Button)`\n  height: 36px;\n  width: 220px;\n  color: ${({ theme }) => theme.colors.error_120.regular};\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  white-space: nowrap;\n`;\n\nexport default ClearCache;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport { Header } from '@src/ui/components';\n\nimport Projects from './Projects';\nimport Welcome from './Welcome';\nimport StartingStopping from './StartingStopping';\nimport Reminders from './Reminders';\nimport Other from './Other';\nimport ResetAll from './ResetAll';\nimport { Tab } from '@src/types';\nimport ClearCache from './ClearCache';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.general.header',\n    defaultMessage: 'General',\n  },\n});\n\nconst GeneralPage: React.FC<{\n  setUrl: React.Dispatch<React.SetStateAction<Tab>>;\n}> = ({ setUrl }) => {\n  return (\n    <Root>\n      <Header>\n        <FormattedMessage {...messages.header} />\n      </Header>\n      <Content>\n        <Welcome setUrl={setUrl} />\n        <Projects />\n        <StartingStopping />\n        <Reminders />\n        <Other />\n        <ClearCache />\n        <ResetAll />\n      </Content>\n    </Root>\n  );\n};\n\nexport default GeneralPage;\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 24px;\n`;\n","import * as React from 'react';\n\nexport const SearchIcon = () => {\n  return (\n    <svg\n      width='16'\n      height='16'\n      viewBox='0 0 16 16'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M0 6.5C0 2.91015 2.91015 0 6.5 0C10.0899 0 13 2.91015 13 6.5C13 7.93411 12.5356 9.25975 11.7489 10.3347L15.5889 14.1747C15.9794 14.5652 15.9794 15.1984 15.5889 15.5889C15.1983 15.9794 14.5652 15.9794 14.1747 15.5889L10.3347 11.7489C9.25972 12.5356 7.9341 13 6.5 13C2.91015 13 0 10.0899 0 6.5ZM2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 8.98528 8.98528 11 6.5 11C4.01472 11 2 8.98528 2 6.5Z'\n        fill='#95899B'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport TogglOrigins from '@toggl/track-extension';\n\nimport { Button, TextInput } from '@src/ui/components';\nimport Card from '@src/ui/components/Card';\nimport { Checkbox } from '@src/ui/components/Checkbox';\n\nimport useSetting from '@src/lib/hooks/useSetting';\nimport { css, useTheme } from '@emotion/react';\nimport { SearchIcon } from '@src/ui/icons/SearchIcon';\nimport Browser from 'webextension-polyfill';\nimport { Db } from '@src/lib/db';\nimport { track } from '@src/lib/utils';\n\nconst messages = defineMessages({\n  integrationsListHeader: {\n    id: 'settings.integrations.listHeader',\n    defaultMessage: 'Integrations',\n  },\n  integrationsListInfo: {\n    id: 'settings.integrations.integrationsListInfo',\n    defaultMessage:\n      'Enable the tools you want to use with Toggl Track Browser Extension. You can enable everything by clicking the \"Enable all\" button.',\n  },\n  enableAllButton: {\n    id: 'settings.integrations.enableAllButton',\n    defaultMessage: 'Enable All',\n  },\n  disableAllButton: {\n    id: 'settings.integrations.disableAllButton',\n    defaultMessage: 'Disable All',\n  },\n});\n\nexport default function IntegrationsPage() {\n  const theme = useTheme();\n  const [filter, setFilter] = React.useState('');\n  const filteredIntegrations = React.useMemo(\n    () =>\n      Object.entries(TogglOrigins).filter(([key, entry]) =>\n        `${entry.name} - ${key}`.toLowerCase().includes(filter)\n      ),\n    [filter]\n  );\n\n  const [selectedIntegrations, setSelectedIntegrations] = useSetting(\n    'integrations',\n    true\n  );\n\n  const onSelectIntegration = (key: string) => {\n    const permission = { origins: [`*://*.${key}/`] };\n\n    if (selectedIntegrations[key]) {\n      void Browser.permissions.remove(permission).then(() =>\n        setSelectedIntegrations({\n          ...selectedIntegrations,\n          [key]: !selectedIntegrations[key],\n        })\n      );\n    } else {\n      void Browser.permissions.request(permission).then(response => {\n        if (!response) return;\n\n        setSelectedIntegrations({\n          ...selectedIntegrations,\n          [key]: !selectedIntegrations[key],\n        });\n      });\n    }\n  };\n\n  const onApplyAll = (status: boolean) => {\n    if (status) {\n      void Browser.permissions.getAll().then(permissions => {\n        if (permissions.origins?.includes('<all_urls>'))\n          return Db.set(\n            'integrations',\n            Object.keys(TogglOrigins).reduce((acc, key) => {\n              acc[key] = true;\n              return acc;\n            }, {})\n          );\n      });\n\n      void Browser.permissions.request({ origins: ['<all_urls>'] });\n      track('enable-integrations', { context: 'Enable all web' });\n    } else {\n      void Browser.permissions.remove({ origins: ['<all_urls>'] }).then(() =>\n        setSelectedIntegrations(\n          Object.keys(TogglOrigins).reduce((acc, key) => {\n            acc[key] = status;\n            return acc;\n          }, {})\n        )\n      );\n    }\n  };\n\n  return (\n    <Card header={<FormattedMessage {...messages.integrationsListHeader} />}>\n      <Card.Section>\n        <FormattedMessage {...messages.integrationsListInfo} />\n\n        <ListContainer>\n          <List>\n            <div\n              css={css`\n                position: relative;\n                display: flex;\n                align-items: center;\n                margin-bottom: 4px;\n\n                & > svg {\n                  position: absolute;\n                  left: 8px;\n                }\n              `}\n            >\n              <SearchIcon />\n              <TextInput\n                css={css`\n                  border: 1px solid ${theme.colors.ui_40.regular};\n                  height: 30px;\n                  padding-left: 30px;\n                `}\n                value={filter}\n                placeholder='Filter integrations'\n                onChange={e => setFilter(e.target.value)}\n              />\n            </div>\n\n            {filteredIntegrations.map(\n              ([key, entry]: [string, { name: string }]) => (\n                <ListItem onClick={() => onSelectIntegration(key)} key={key}>\n                  <Checkbox checked={selectedIntegrations[key]} />\n                  <span\n                    css={css`\n                      white-space: nowrap;\n                      text-overflow: ellipsis;\n                      overflow: hidden;\n                    `}\n                  >{`${entry.name} - ${key}`}</span>\n                </ListItem>\n              )\n            )}\n          </List>\n        </ListContainer>\n\n        <ButtonWrapper>\n          <Button onClick={() => onApplyAll(true)}>\n            <FormattedMessage {...messages.enableAllButton} />\n          </Button>\n          <Button\n            onClick={() => onApplyAll(false)}\n            dataHeapId='extension:disable-integrations'\n          >\n            <FormattedMessage {...messages.disableAllButton} />\n          </Button>\n        </ButtonWrapper>\n      </Card.Section>\n    </Card>\n  );\n}\n\nconst ListContainer = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  width: 400px;\n  overflow: hidden;\n  border: 1px solid ${({ theme }) => theme.colors.ui_40.regular};\n`;\n\nconst List = styled.div`\n  width: 400px;\n  height: 334px;\n  padding: 8px;\n  gap: 4px;\n  overflow: auto;\n\n  background: ${({ theme }) => theme.colors.surface_primary.regular};\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  line-height: 28px;\n  cursor: pointer;\n  padding: 0 8px;\n  border-radius: 4px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.surface_secondary.hover};\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  width: calc(113px * 2 + 8px);\n`;\n","import * as React from 'react';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport TogglOrigins from '@toggl/track-extension';\n\nimport Browser from 'webextension-polyfill';\n\nimport Card from '@src/ui/components/Card';\nimport { Button, TextInput } from '@src/ui/components';\nimport Dropdown from '@src/components/Dropdown';\nimport useSetting from '@src/lib/hooks/useSetting';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.integrations.customURLs.header',\n    defaultMessage: 'Custom URLs for integrations',\n  },\n  cta: {\n    id: 'settings.integrations.customURLs.cta',\n    defaultMessage:\n      'If you use a tool hosted on a custom domain, you can enable it here. Enter the domain name in the format \"toggl.com\" and select the integration from the dropdown. Ports are not supported.',\n  },\n  button: {\n    id: 'settings.integrations.customURLs.button',\n    defaultMessage: 'Add',\n  },\n  delete: {\n    id: 'settings.integrations.customURLs.delete',\n    defaultMessage: 'Delete',\n  },\n});\n\nconst firstIntegration = Object.keys(TogglOrigins)[0];\n\nconst CustomURLs: React.FC = () => {\n  const inputsContainer = React.useRef<HTMLDivElement>(null);\n  const [integrations, setIntegrations] = useSetting('customIntegrations');\n  const [domain, setDomain] = React.useState('');\n  const [selectedIntegration, setSelectedIntegration] =\n    React.useState(firstIntegration);\n\n  const handleDomainChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setDomain(e.target.value),\n    [setDomain]\n  );\n\n  const handleAddClick = React.useCallback(() => {\n    if (domain.trim() === '') return;\n\n    const permission = { origins: [`*://*.${domain}/`] };\n\n    void Browser.permissions.request(permission).then(response => {\n      if (!response) return;\n\n      setIntegrations({\n        ...integrations,\n        [domain]: TogglOrigins[selectedIntegration],\n      });\n\n      setDomain('');\n      setSelectedIntegration(firstIntegration);\n    });\n  }, [domain, integrations, selectedIntegration, setIntegrations]);\n\n  const handleDeleteClick = React.useCallback(\n    (key: string) => {\n      const permission = { origins: [`*://*.${key}/`] };\n\n      void Browser.permissions.remove(permission).then(() => {\n        const { [key]: _, ...rest } = integrations;\n        setIntegrations(rest);\n      });\n    },\n    [integrations, setIntegrations]\n  );\n\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Card.Section>\n        <FormattedMessage tagName='span' {...messages.cta} />\n        <List>\n          {Object.entries(integrations).map(([integration, { name }]) => (\n            <ListItem key={integration}>\n              <span>\n                <CaptionItem>{integration}</CaptionItem>\n                {` - ${name}`}\n              </span>\n              <DeleteButton onClick={() => handleDeleteClick(integration)}>\n                <FormattedMessage {...messages.delete} />\n              </DeleteButton>\n            </ListItem>\n          ))}\n        </List>\n        <Container ref={inputsContainer}>\n          <StyledTextInput value={domain} onChange={handleDomainChange} />\n\n          <Dropdown\n            onOpenChange={open => {\n              if (open) inputsContainer.current?.scrollIntoView();\n            }}\n            onItemClick={id => {\n              setSelectedIntegration(id);\n            }}\n            css={css`\n              width: 192px;\n            `}\n          >\n            <Dropdown.Trigger height={36}>\n              {TogglOrigins[selectedIntegration]?.name ||\n                TogglOrigins[firstIntegration]?.name}\n            </Dropdown.Trigger>\n            <Dropdown.Overlay />\n            <Dropdown.Content>\n              {Object.entries(TogglOrigins).map(([integration, entry]) => (\n                <Dropdown.Item key={integration} id={integration}>\n                  {entry?.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Content>\n          </Dropdown>\n        </Container>\n        <StyledButton onClick={handleAddClick}>\n          <FormattedMessage {...messages.button} />\n        </StyledButton>\n      </Card.Section>\n    </Card>\n  );\n};\n\nconst List = styled.div`\n  width: 400px;\n  height: 100px;\n  padding: 8px;\n  gap: 4px;\n  overflow: auto;\n\n  background: ${({ theme }) => theme.colors.surface_primary.regular};\n  border: 1px solid ${({ theme }) => theme.colors.ui_40.regular};\n  border-radius: 8px;\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  line-height: 20px;\n  padding: 0 20px 0 12px;\n  font-size: 14px;\n`;\n\nconst CaptionItem = styled.span`\n  font-weight: ${({ theme }) => theme.text.bold};\n`;\n\nconst DeleteButton = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  color: ${({ theme }) => theme.colors.error_120.regular};\n  cursor: pointer;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`;\n\nconst StyledTextInput = styled(TextInput)`\n  width: 192px;\n  height: 36px;\n\n  border-radius: 8px;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 74px;\n`;\n\nexport default CustomURLs;\n","export default \"__VITE_ASSET__e913401a__\"","import { useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport { CrossIcon } from '@src/ui/icons/CrossIcon';\nimport * as React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\nimport heroSrc from './hero.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: 'settings.onboardingBanner.title',\n    defaultMessage: 'Welcome!',\n  },\n  description: {\n    id: 'settings.onboardingBanner.description',\n    defaultMessage: `This is the settings page for Track extension. {br}\n    Come here whenever you need to tailor your extension for the most comfortable use.`,\n  },\n  greetings: {\n    id: 'settings.onboardingBanner.greetings',\n    defaultMessage: 'Happy tracking!',\n  },\n});\n\nexport const OnboardingBanner: React.FC<{\n  onClose: React.MouseEventHandler;\n}> = props => {\n  const theme = useTheme();\n  const prefersColorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n    .matches\n    ? 'dark'\n    : 'light';\n  const [darkMode] = useSetting('darkMode');\n  const [darkModeUserSet] = useSetting('darkModeUserSet');\n\n  const settingsColorScheme = darkModeUserSet\n    ? darkMode\n      ? 'dark'\n      : 'light'\n    : prefersColorScheme;\n\n  return (\n    <Root darkMode={settingsColorScheme === 'dark'}>\n      <CloseIconContainer onClick={props.onClose}>\n        <CrossIcon color={theme.colors.ui_50.regular} />\n      </CloseIconContainer>\n      <div>\n        <Title>\n          <FormattedMessage {...messages.title} />\n        </Title>\n        <DescriptionsContainer>\n          <Description>\n            <FormattedMessage\n              {...messages.description}\n              values={{ br: <br /> }}\n            />\n          </Description>\n          <Description>\n            <strong>\n              <FormattedMessage {...messages.greetings} />\n            </strong>\n          </Description>\n        </DescriptionsContainer>\n      </div>\n      <div>\n        <img src={heroSrc} alt='' />\n      </div>\n    </Root>\n  );\n};\n\nconst Root = styled.div<{ darkMode: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  color: ${({ theme }) => theme.colors.ui.regular};\n  background-color: ${({ theme, darkMode }) =>\n    darkMode\n      ? theme.colors.surface_primary.regular\n      : theme.colors.pale_peach.regular};\n  padding: 26px 128px 0 32px;\n\n  & > div {\n    gap: 16px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.h2`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 167%;\n`;\n\nconst DescriptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  padding-bottom: 26px;\n`;\n\nconst Description = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 143%;\n`;\n\nconst CloseIconContainer = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  cursor: pointer;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport { CustomScripts } from '@toggl/track-extension';\n\nimport Browser from 'webextension-polyfill';\n\nimport Card from '@src/ui/components/Card';\nimport { Button, TextInput } from '@src/ui/components';\nimport useSetting from '@src/lib/hooks/useSetting';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.integrations.customScripts.header',\n    defaultMessage: 'Custom Scripts for Integrations',\n  },\n  cta: {\n    id: 'settings.integrations.customScripts.cta',\n    defaultMessage:\n      'Support of custom workflows for users on enterprise and premium plan.',\n  },\n  button: {\n    id: 'settings.integrations.customScripts.button',\n    defaultMessage: 'Add',\n  },\n  delete: {\n    id: 'settings.integrations.customScripts.delete',\n    defaultMessage: 'Delete',\n  },\n});\n\nconst CustomScriptInput: React.FC = () => {\n  const inputsContainer = React.useRef<HTMLDivElement>(null);\n  const [customScripts, setCustomScripts] = useSetting('customScripts');\n  const [domain, setDomain] = React.useState('');\n  const [scriptCode, setScriptCode] = React.useState('');\n\n  const handleDomainChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setDomain(e.target.value),\n    [setDomain]\n  );\n\n  const handleScriptCodeChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setScriptCode(e.target.value),\n    [setScriptCode]\n  );\n\n  const handleAddClick = React.useCallback(() => {\n    if (domain.trim() === '') return;\n    if (!CustomScripts[scriptCode]) {\n      return;\n    }\n\n    const permission = { origins: [`*://*.${domain}/`] };\n\n    void Browser.permissions.request(permission).then(response => {\n      if (!response) return;\n\n      setCustomScripts({\n        ...customScripts,\n        [domain]: CustomScripts[scriptCode],\n      });\n\n      setDomain('');\n      setScriptCode('');\n    });\n  }, [domain, setCustomScripts, customScripts, scriptCode]);\n\n  const handleDeleteClick = React.useCallback(\n    (key: string) => {\n      const { [key]: _, ...rest } = customScripts;\n      setCustomScripts(rest);\n    },\n    [customScripts, setCustomScripts]\n  );\n\n  return (\n    <Card header={<FormattedMessage {...messages.header} />}>\n      <Card.Section>\n        <FormattedMessage tagName='span' {...messages.cta} />\n        <List>\n          {Object.entries(customScripts).map(([integration, { name }]) => (\n            <ListItem key={integration}>\n              <span>\n                <CaptionItem>{integration}</CaptionItem>\n                {` - ${name}`}\n              </span>\n              <DeleteButton onClick={() => handleDeleteClick(integration)}>\n                <FormattedMessage {...messages.delete} />\n              </DeleteButton>\n            </ListItem>\n          ))}\n        </List>\n        <Container ref={inputsContainer}>\n          <StyledTextInput\n            placeholder='Domain'\n            value={domain}\n            onChange={handleDomainChange}\n          />\n\n          <StyledTextInput\n            placeholder='Script Code'\n            value={scriptCode}\n            onChange={handleScriptCodeChange}\n          />\n        </Container>\n        <StyledButton onClick={handleAddClick}>\n          <FormattedMessage {...messages.button} />\n        </StyledButton>\n      </Card.Section>\n    </Card>\n  );\n};\n\nconst List = styled.div`\n  width: 400px;\n  height: 100px;\n  padding: 8px;\n  gap: 4px;\n  overflow: auto;\n\n  background: ${({ theme }) => theme.colors.surface_primary.regular};\n  border: 1px solid ${({ theme }) => theme.colors.ui_40.regular};\n  border-radius: 8px;\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  line-height: 20px;\n  padding: 0 20px 0 12px;\n  font-size: 14px;\n`;\n\nconst CaptionItem = styled.span`\n  font-weight: ${({ theme }) => theme.text.bold};\n`;\n\nconst DeleteButton = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  color: ${({ theme }) => theme.colors.error_120.regular};\n  cursor: pointer;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`;\n\nconst StyledTextInput = styled(TextInput)`\n  width: 192px;\n  height: 36px;\n\n  border-radius: 8px;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 74px;\n`;\n\nexport default CustomScriptInput;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport { Header } from '@src/ui/components';\n\nimport Integrations from './Integrations';\nimport CustomURLs from './CustomURLs';\nimport { OnboardingBanner } from '@src/pages/settings/components/onboardingBanner';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport CustomScripts from './CustomScripts';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.integrations.header',\n    defaultMessage: 'Integrations',\n  },\n});\n\nconst GeneralPage: React.FC = () => {\n  const [settingsOnboarded, setSettingsOnboardingDone, loaded] =\n    useSetting('settingsOnboarded');\n\n  return (\n    <Root>\n      <Header>\n        <FormattedMessage {...messages.header} />\n      </Header>\n      {loaded && !settingsOnboarded && (\n        <OnboardingBanner onClose={() => setSettingsOnboardingDone(true)} />\n      )}\n      <Content>\n        <Integrations />\n        <CustomURLs />\n        <CustomScripts />\n      </Content>\n    </Root>\n  );\n};\n\nexport default GeneralPage;\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 16px;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport { Header } from '@src/ui/components';\nimport Card from '@src/ui/components/Card';\nimport useSetting from '@src/lib/hooks/useSetting';\n\nimport SwitchOption from '../components/SwitchOption';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.telemetry.header',\n    defaultMessage: 'Telemetry',\n  },\n  subHeader: {\n    id: 'settings.telemetry.subHeader',\n    defaultMessage: 'Telemetry',\n  },\n  sendUsageStatisticsCta: {\n    id: 'settings.telemetry.sendUsageStatistics.cta',\n    defaultMessage: 'Send usage statistics',\n  },\n  sendUsageStatisticsDescription: {\n    id: 'settings.telemetry.sendUsageStatistics.description',\n    defaultMessage:\n      'Help us understand how Toggl Track Browser Extension is used by sending usage statistics',\n  },\n  sendErrorReportsCta: {\n    id: 'settings.telemetry.sendErrorReports.cta',\n    defaultMessage: 'Send error reports',\n  },\n  sendErrorReportsDescription: {\n    id: 'settings.telemetry.sendErrorReports.description',\n    defaultMessage:\n      'Submit error reports to help us fix issues with Toggl Track Browser Extension',\n  },\n});\n\nconst Telemetry: React.FC = () => {\n  const [sendUsageStatistics, setSendUsageStatistics] = useSetting(\n    'sendUsageStatistics'\n  );\n  const [sendErrorReports, setSendErrorReports] =\n    useSetting('sendErrorReports');\n\n  const handleSendUsageStatisticsChange = React.useCallback(value => {\n    setSendUsageStatistics(value);\n  }, []);\n\n  const handleSendErrorReportsChange = React.useCallback(value => {\n    setSendErrorReports(value);\n  }, []);\n\n  return (\n    <Root>\n      <Header>\n        <FormattedMessage {...messages.header} />\n      </Header>\n      <Content>\n        <Card header={<FormattedMessage {...messages.subHeader} />}>\n          <Card.Section>\n            <SwitchOption\n              cta={messages.sendUsageStatisticsCta}\n              description={messages.sendUsageStatisticsDescription}\n              value={sendUsageStatistics}\n              onChange={handleSendUsageStatisticsChange}\n            />\n          </Card.Section>\n          <Card.Section>\n            <SwitchOption\n              cta={messages.sendErrorReportsCta}\n              description={messages.sendErrorReportsDescription}\n              value={sendErrorReports}\n              onChange={handleSendErrorReportsChange}\n            />\n          </Card.Section>\n        </Card>\n      </Content>\n    </Root>\n  );\n};\n\nexport default Telemetry;\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 16px;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport { Button, Header } from '@src/ui/components';\nimport Card from '@src/ui/components/Card';\nimport { sendMessage } from '@src/lib/messaging';\n\nimport * as userService from '@src/services/user';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.myAccount.header',\n    defaultMessage: 'My Account',\n  },\n  subHeader: {\n    id: 'settings.myAccount.subHeader',\n    defaultMessage: 'Account settings',\n  },\n  yourCta: {\n    id: 'settings.myAccount.your.cta',\n    defaultMessage: 'Your Toggl account',\n  },\n  yourDescription: {\n    id: 'settings.myAccount.your.description',\n    defaultMessage: `You're currently logged in as {email}`,\n  },\n  syncCta: {\n    id: 'settings.myAccount.sync.cta',\n    defaultMessage: 'Sync data',\n  },\n  syncDescription: {\n    id: 'settings.myAccount.sync.description',\n    defaultMessage:\n      'Use this to manually sync your data (projects, tags etc.) into Toggl Track Browser Extension',\n  },\n  syncButton: {\n    id: 'settings.myAccount.sync.button',\n    defaultMessage: 'Sync with Toggl',\n  },\n  logoutCta: {\n    id: 'settings.myAccount.logout.cta',\n    defaultMessage: 'Log out',\n  },\n  logoutDescription: {\n    id: 'settings.myAccount.logout.description',\n    defaultMessage: 'Log out of Toggl Track Browser Extension',\n  },\n  logoutButton: {\n    id: 'settings.myAccount.logout.button',\n    defaultMessage: 'Log out',\n  },\n});\n\nconst MyAccount: React.FC = () => {\n  const { data: currentUser } = userService.useUser();\n\n  const handleSyncClick = React.useCallback(() => {\n    sendMessage({ type: 'activate', payload: null });\n  }, []);\n\n  const handleLogoutClick = React.useCallback(() => {\n    sendMessage({ type: 'logout', payload: null });\n  }, []);\n\n  return (\n    <Root>\n      <FormattedMessage tagName={Header} {...messages.header} />\n      <Content>\n        <Card header={<FormattedMessage {...messages.subHeader} />}>\n          <Card.Section>\n            <Wrapper>\n              <FormattedMessage tagName={Cta} {...messages.yourCta} />\n              <FormattedMessage\n                tagName={Description}\n                {...messages.yourDescription}\n                values={{ email: currentUser?.email }}\n              />\n            </Wrapper>\n          </Card.Section>\n          <Card.Section>\n            <Wrapper>\n              <FormattedMessage tagName={Cta} {...messages.syncCta} />\n              <FormattedMessage\n                tagName={Description}\n                {...messages.syncDescription}\n              />\n            </Wrapper>\n            <StyledButton onClick={handleSyncClick}>\n              <FormattedMessage {...messages.syncButton} />\n            </StyledButton>\n          </Card.Section>\n          <Card.Section>\n            <Wrapper>\n              <FormattedMessage tagName={Cta} {...messages.logoutCta} />\n              <FormattedMessage\n                tagName={Description}\n                {...messages.logoutDescription}\n              />\n            </Wrapper>\n            <LogoutButton onClick={handleLogoutClick}>\n              <FormattedMessage {...messages.logoutButton} />\n            </LogoutButton>\n          </Card.Section>\n        </Card>\n      </Content>\n    </Root>\n  );\n};\n\nexport default MyAccount;\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 16px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst Cta = styled.span`\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nconst Description = styled.span`\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.text.normal};\n  color: ${({ theme }) => theme.colors.ui.regular};\n`;\n\nconst StyledButton = styled(Button)`\n  width: 196px;\n  height: 36px;\n  margin-bottom: 8px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n`;\n\nconst LogoutButton = styled(StyledButton)`\n  color: ${({ theme }) => theme.colors.error_120.regular};\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport { Header, TextInput, Button } from '@src/ui/components';\n\nimport Card from '@src/ui/components/Card';\nimport useSetting from '@src/lib/hooks/useSetting';\n\nimport SwitchOption from '../components/SwitchOption';\nimport { css } from '@emotion/react';\nimport Browser from 'webextension-polyfill';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.pomodoro.header',\n    defaultMessage: 'Pomodoro',\n  },\n  subHeader: {\n    id: 'settings.pomodoro.subHeader',\n    defaultMessage: 'What is Pomodoro?',\n  },\n  subHeaderDescription: {\n    id: 'settings.pomodoro.subHeaderDescription',\n    defaultMessage:\n      'Pomodoro® is a popular time management technique developed by Francesco Cirillo to help people be more productive.',\n  },\n  subHeaderDescription2: {\n    id: 'settings.pomodoro.subHeaderDescription2',\n    defaultMessage:\n      'Toggl Track Browser Extension includes a Pomodoro timer feature, which you can enable and customise below.',\n  },\n  pomodoroSettingsSection: {\n    id: 'settings.pomodoro.pomodoroSettingsSection',\n    defaultMessage: 'Pomodoro settings',\n  },\n  enablePomodoro: {\n    id: 'settings.pomodoro.enablePomodoro',\n    defaultMessage: 'Enable pomodoro',\n  },\n  enablePomodoroDescription: {\n    id: 'settings.pomodoro.enablePomodoroDescription',\n    defaultMessage:\n      'Start a Pomodoro timer when you start a time entry. At the end of the Pomodoro interval, you will receive a notification to take a break.',\n  },\n  intervalText: {\n    id: 'settings.pomodoro.intervalText',\n    defaultMessage: 'Pomodoro timer interval in minutes',\n  },\n  stopTimer: {\n    id: 'settings.pomodoro.stopTimer',\n    defaultMessage: 'Stop timer at end of interval',\n  },\n  stopTimerDescription: {\n    id: 'settings.pomodoro.stopTimerDescription',\n    defaultMessage:\n      'When the Pomodoro timer interval ends, your active timer will be stopped',\n  },\n  focusMode: {\n    id: 'settings.pomodoro.focusMode',\n    defaultMessage: 'Focus mode',\n  },\n  focusModeDescription: {\n    id: 'settings.pomodoro.focusModeDescription',\n    defaultMessage:\n      'Display a countdown instead of the recent entries list while a Pomodoro interval is active.',\n  },\n  soundNotification: {\n    id: 'settings.pomodoro.soundNotification',\n    defaultMessage: 'Sound notification at end of interval',\n  },\n  soundNotificationDescription: {\n    id: 'settings.pomodoro.soundNotificationDescription',\n    defaultMessage:\n      'When the Pomodoro timer interval ends, a sound will be played',\n  },\n  setVolume: {\n    id: 'settings.pomodoro.setVolume',\n    defaultMessage: 'Set volume',\n  },\n  tickingSound: {\n    id: 'settings.pomodoro.tickingSound',\n    defaultMessage: 'Ticking sound during Pomodoro (beta)',\n  },\n  tickingSoundDescription: {\n    id: 'settings.pomodoro.tickingSoundDescription',\n    defaultMessage:\n      'While a Pomodoro timer is active, a ticking sound will be played',\n  },\n  testButton: {\n    id: 'settings.pomodoro.testBurron',\n    defaultMessage: 'Test',\n  },\n  stopButton: {\n    id: 'settings.pomodoro.stopButton',\n    defaultMessage: 'Stop',\n  },\n});\n\nconst Pomodoro: React.FC = () => {\n  const [pomodoroEnabled, setPomodoroEnabled] = useSetting(\n    'pomodoroModeEnabled'\n  );\n  const [pomodoroInterval, setPomodoroInterval] =\n    useSetting('pomodoroInterval');\n  const [stopTimerAtEnd, setStopTimerAtEnd] = useSetting(\n    'pomodoroStopTimeTrackingWhenTimerEnds'\n  );\n  const [focusMode, setFocusMode] = useSetting('pomodoroFocusMode');\n  const [soundNotification, setSoundNotification] = useSetting(\n    'pomodoroSoundEnabled'\n  );\n  const [notificationVolume, setNotificationVolume] = useSetting(\n    'pomodoroSoundVolume'\n  );\n  const [tickingSound, setTickingSound] = useSetting('pomodoroTickerEnabled');\n  const [tickingVolume, setTickingVolume] = useSetting('pomodoroTickerVolume');\n  const [tickingPlaying, setTickingPlaying] = React.useState(false);\n\n  const tickAudio = React.useMemo(\n    () => new Audio(Browser.runtime.getURL('sounds/tick-tock.mp3')),\n    []\n  );\n\n  const playTestAudio = () => {\n    const audio = new Audio(Browser.runtime.getURL('sounds/time_is_up_1.mp3'));\n    audio.volume = notificationVolume;\n    void audio.play();\n  };\n\n  const playTickAudio = React.useCallback(() => {\n    tickAudio.volume = tickingVolume;\n    tickAudio.loop = true;\n\n    tickAudio.paused ? tickAudio.play() : tickAudio.pause();\n    setTickingPlaying(!tickingPlaying);\n  }, [tickAudio, tickingPlaying, tickingVolume]);\n\n  return (\n    <Root>\n      <Header>\n        <FormattedMessage {...messages.header} />\n      </Header>\n      <Content>\n        <Card header={<FormattedMessage {...messages.subHeader} />}>\n          <Card.Section\n            css={css`\n              display: flex;\n              flex-direction: column;\n              gap: 40px;\n            `}\n          >\n            <div>\n              <FormattedMessage {...messages.subHeaderDescription} />\n            </div>\n            <div>\n              <FormattedMessage {...messages.subHeaderDescription2} />\n            </div>\n          </Card.Section>\n        </Card>\n        <Card\n          header={<FormattedMessage {...messages.pomodoroSettingsSection} />}\n        >\n          <Card.Section>\n            <SwitchOption\n              cta={messages.enablePomodoro}\n              description={messages.enablePomodoroDescription}\n              onChange={setPomodoroEnabled}\n              value={pomodoroEnabled}\n              customContent={\n                pomodoroEnabled && (\n                  <div\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }}\n                  >\n                    <CustomContentContainer>\n                      <FormattedMessage {...messages.intervalText} />\n                      <TextInput\n                        type='number'\n                        css={css`\n                          width: 72px;\n                          margin-left: 8px;\n                        `}\n                        value={pomodoroInterval}\n                        onChange={e =>\n                          setPomodoroInterval(Number(e.target.value))\n                        }\n                      />\n                    </CustomContentContainer>\n                  </div>\n                )\n              }\n              dataHeapId='enable-pomodoro'\n            />\n          </Card.Section>\n          <Card.Section>\n            <SwitchOption\n              cta={messages.stopTimer}\n              description={messages.stopTimerDescription}\n              onChange={setStopTimerAtEnd}\n              value={stopTimerAtEnd}\n            />\n          </Card.Section>\n          <Card.Section>\n            <SwitchOption\n              cta={messages.focusMode}\n              description={messages.focusModeDescription}\n              onChange={setFocusMode}\n              value={focusMode}\n            />\n          </Card.Section>\n          <Card.Section>\n            <SwitchOption\n              cta={messages.soundNotification}\n              description={messages.soundNotificationDescription}\n              onChange={setSoundNotification}\n              value={soundNotification}\n              customContent={\n                soundNotification && (\n                  <div\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }}\n                  >\n                    <CustomContentContainer>\n                      <FormattedMessage {...messages.setVolume} />\n                      <TextInput\n                        css={css`\n                          width: 74px;\n                          margin: 0 4px 0 8px;\n                        `}\n                        type='number'\n                        value={notificationVolume * 100}\n                        onChange={e =>\n                          setNotificationVolume(Number(e.target.value) / 100)\n                        }\n                      />\n                      {'%'}\n                      <StyledButton onClick={playTestAudio}>\n                        <FormattedMessage {...messages.testButton} />\n                      </StyledButton>\n                    </CustomContentContainer>\n                  </div>\n                )\n              }\n            />\n          </Card.Section>\n          {/* TODO: Implement ticking sound\n          <Card.Section>\n            <SwitchOption\n              cta={messages.tickingSound}\n              description={messages.tickingSoundDescription}\n              onChange={setTickingSound}\n              value={tickingSound}\n              customContent={\n                tickingSound && (\n                  <div\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }}\n                  >\n                    <CustomContentContainer>\n                      <FormattedMessage {...messages.setVolume} />\n\n                      <TextInput\n                        css={css`\n                          width: 74px;\n                          margin: 0 4px 0 8px;\n                        `}\n                        type='number'\n                        value={tickingVolume * 100}\n                        onChange={e =>\n                          setTickingVolume(Number(e.target.value) / 100)\n                        }\n                      />\n                      {'%'}\n                      <StyledButton onClick={playTickAudio}>\n                        {tickingPlaying ? (\n                          <FormattedMessage {...messages.stopButton} />\n                        ) : (\n                          <FormattedMessage {...messages.testButton} />\n                        )}\n                      </StyledButton>\n                    </CustomContentContainer>\n                  </div>\n                )\n              }\n            />\n          </Card.Section> */}\n        </Card>\n      </Content>\n    </Root>\n  );\n};\n\nexport default Pomodoro;\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 16px;\n`;\n\nconst CustomContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 16px;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 76px;\n  margin-left: 12px;\n  font-weight: ${({ theme }) => theme.text.semibold};\n`;\n","import * as React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { SVGProps } from 'react';\n\nexport const WhatsNewIcon = (props: SVGProps<SVGSVGElement>) => {\n  const theme = useTheme();\n\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='16'\n      height='16'\n      viewBox='0 0 16 16'\n      fill='none'\n      {...props}\n    >\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12.9941 0C14.1019 0 15 0.894518 15 1.99406V14.0059C15 15.1072 14.1029 16 12.9941 16H3.00586C1.89805 16 1 15.1055 1 14.0059V1.99406C1 0.892775 1.89706 0 3.00586 0H12.9941ZM12.0046 8H3.9954C3.45566 8 3 8.44771 3 9C3 9.55614 3.44565 10 3.9954 10H12.0046C12.5443 10 13 9.55229 13 9L12.9933 8.88266C12.9358 8.38271 12.5151 8 12.0046 8ZM12.0046 5H3.9954C3.45566 5 3 5.44771 3 6C3 6.55614 3.44565 7 3.9954 7H12.0046C12.5443 7 13 6.55229 13 6L12.9933 5.88266C12.9358 5.38271 12.5151 5 12.0046 5ZM12.0046 2H3.9954C3.45566 2 3 2.44772 3 3C3 3.55613 3.44565 4 3.9954 4H12.0046C12.5443 4 13 3.55228 13 3L12.9933 2.88266C12.9358 2.38271 12.5151 2 12.0046 2Z'\n        fill={props.color || theme.colors.pale_peach.regular}\n      />\n    </svg>\n  );\n};\n","export default \"__VITE_ASSET__f5ca544e__\"","import { css, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport * as React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\nimport heroSrc from './changelogHero.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: 'settings.whatsNew.banner.title',\n    defaultMessage: `Discover What's Unfolded!`,\n  },\n  description: {\n    id: 'settings.whatsNew.banner.description',\n    defaultMessage: `Get an overview of the extension's most recent updates. From new features to bug {br} fixes, Stay in the loop!`,\n  },\n});\n\nexport const Banner: React.FC = () => {\n  const prefersColorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n    .matches\n    ? 'dark'\n    : 'light';\n  const [darkMode] = useSetting('darkMode');\n  const [darkModeUserSet] = useSetting('darkModeUserSet');\n\n  const settingsColorScheme = darkModeUserSet\n    ? darkMode\n      ? 'dark'\n      : 'light'\n    : prefersColorScheme;\n\n  return (\n    <Root darkMode={settingsColorScheme === 'dark'}>\n      <div\n        css={css`\n          padding-top: 26px;\n        `}\n      >\n        <Title>\n          <FormattedMessage {...messages.title} />\n        </Title>\n        <DescriptionsContainer>\n          <Description>\n            <FormattedMessage\n              {...messages.description}\n              values={{ br: <br /> }}\n            />\n          </Description>\n        </DescriptionsContainer>\n      </div>\n      <div>\n        <img src={heroSrc} alt='' />\n      </div>\n    </Root>\n  );\n};\n\nconst Root = styled.div<{ darkMode: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  color: ${({ theme }) => theme.colors.ui.regular};\n  background-color: ${({ theme, darkMode }) =>\n    darkMode\n      ? theme.colors.surface_primary.regular\n      : theme.colors.pale_peach.regular};\n  padding: 0 128px 0 32px;\n\n  & > div {\n    gap: 16px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.h2`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 167%;\n`;\n\nconst DescriptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  padding-bottom: 26px;\n`;\n\nconst Description = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 143%;\n`;\n\nconst CloseIconContainer = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  cursor: pointer;\n`;\n","export const changelog = [\n  {\n    version: '3.0.37',\n    description: null,\n    features: [],\n    fixes: [\n      {\n        title: 'Jira Integration',\n        description: 'Fix project on single page task',\n      },\n    ],\n  },\n];\n","import { css, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { Badge } from '@src/packages/ui/Badge';\nimport { Header } from '@src/ui/components';\nimport * as React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\nimport { Banner } from './Banner';\nimport { changelog } from './changelog';\nimport { Db } from '@src/lib/db';\nimport { DEFAULT_SETTINGS } from '@src/lib/constants';\nimport SwitchOption from '../../components/SwitchOption';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport Browser from 'webextension-polyfill';\n\nconst messages = defineMessages({\n  header: {\n    id: 'settings.whatsNew.header',\n    defaultMessage: 'Changelog',\n  },\n  version: {\n    id: 'settings.whatsNew.version',\n    defaultMessage: '🎉 Version {version} – {description}',\n  },\n  latestUpdate: {\n    id: 'settings.whatsNew.latestUpdate',\n    defaultMessage: 'Latest update',\n  },\n  newFeatures: {\n    id: 'settings.whatsNew.newFeatures',\n    defaultMessage: 'New Features:',\n  },\n  improvements: {\n    id: 'settings.whatsNew.improvements',\n    defaultMessage: 'Improvements:',\n  },\n  bugFixes: {\n    id: 'settings.whatsNew.bugFixes',\n    defaultMessage: 'Bug Fixes:',\n  },\n  previous: {\n    id: 'settings.whatsNew.previous',\n    defaultMessage: '👀 Looking for previous changes? Check it out <a>here</a>',\n  },\n  footer1: {\n    id: 'settings.whatsNew.footer1',\n    defaultMessage:\n      'For more information on how Toggl Track extension works take a look {br}at the guide:',\n  },\n  footer2: {\n    id: 'settings.whatsNew.footer2',\n    defaultMessage:\n      'If you have any problems or feedback regarding Toggl Track {br}extension, write to us at:',\n  },\n  readTheGuide: {\n    id: 'settings.whatsNew.readTheGuide',\n    defaultMessage: 'Read the guide',\n  },\n  enableFeature: {\n    id: 'settings.whatsNew.enableFeature',\n    defaultMessage: 'Enable',\n  },\n  disableFeature: {\n    id: 'settings.whatsNew.disableFeature',\n    defaultMessage: 'Disable',\n  },\n  optOutCta: {\n    id: 'settings.whatsNew.optOutCta',\n    defaultMessage: 'What’s new page',\n  },\n  optOutDescription: {\n    id: 'settings.whatsNew.optOutDescription',\n    defaultMessage:\n      'Show this page automatically when the extension is updated',\n  },\n});\n\nexport const WhatsNew: React.FC = () => {\n  const theme = useTheme();\n  const [showChangelog, setShowChangelog] = useSetting('showChangelog');\n  const [tinyButtonEnabled, setTinyButtonEnabled] =\n    useSetting('enableTinyButton');\n  const [selectedIntegrations, setSelectedIntegrations] =\n    useSetting('integrations');\n\n  const latest = changelog[0];\n\n  const onSelectIntegration = (key: string) => {\n    const permission = { origins: [`*://*.${key}/`] };\n    if (selectedIntegrations[key]) {\n      void Browser.permissions.remove(permission).then(() =>\n        setSelectedIntegrations({\n          ...selectedIntegrations,\n          [key]: !selectedIntegrations[key],\n        })\n      );\n    } else {\n      void Browser.permissions.request(permission).then(response => {\n        if (!response) return;\n\n        setSelectedIntegrations({\n          ...selectedIntegrations,\n          [key]: !selectedIntegrations[key],\n        });\n      });\n    }\n  };\n\n  const handleTogglFeature = (settingName: string, hostName?: string) => {\n    if (settingName === 'enableNewTabPage') {\n      chrome.permissions.request(\n        {\n          permissions: ['tabs'],\n        },\n        granted => {\n          if (granted)\n            void Db.set(settingName as keyof typeof DEFAULT_SETTINGS, true);\n        }\n      );\n    } else if (settingName === 'enableTinyButton') {\n      if (tinyButtonEnabled) {\n        setTinyButtonEnabled(false);\n      } else {\n        chrome.permissions.request(\n          {\n            origins: ['<all_urls>'],\n          },\n          granted => {\n            if (granted) {\n              setTinyButtonEnabled(true);\n            }\n          }\n        );\n      }\n    } else if (settingName === 'integration' && hostName) {\n      onSelectIntegration(hostName);\n    }\n  };\n\n  return (\n    <Root>\n      <Header>\n        <FormattedMessage {...messages.header} />\n      </Header>\n      <Banner />\n      <Content>\n        <Section>\n          <span\n            css={css`\n              font-weight: 600;\n              margin-right: 18px;\n            `}\n          >\n            <FormattedMessage\n              {...messages.version}\n              values={{\n                version: latest.version,\n                description: latest.description,\n              }}\n            />\n          </span>\n          <Badge\n            color={theme.colors.orange.regular}\n            textColor={theme.colors.ui_0.regular}\n          >\n            <FormattedMessage {...messages.latestUpdate} />\n          </Badge>\n        </Section>\n        <Section>\n          <ListContainer>\n            {latest.features && (\n              <div>\n                <strong>\n                  <FormattedMessage {...messages.newFeatures} />\n                </strong>\n                <List>\n                  {latest.features.map(\n                    ({ title, description, settingsName, hostname }, index) => (\n                      <li key={index}>\n                        <strong>\n                          {title}\n                          {': '}\n                        </strong>\n                        <span>{description}</span>\n                        {settingsName && (\n                          <span\n                            onClick={() =>\n                              handleTogglFeature(settingsName, hostname)\n                            }\n                          >\n                            {' ['}\n                            {settingsName === 'enableTinyButton' &&\n                              (tinyButtonEnabled ? (\n                                <FormattedMessage\n                                  {...messages.disableFeature}\n                                  tagName={EnableFeatureText}\n                                />\n                              ) : (\n                                <FormattedMessage\n                                  {...messages.enableFeature}\n                                  tagName={EnableFeatureText}\n                                />\n                              ))}\n                            {settingsName === 'integration' &&\n                              (selectedIntegrations[hostname ?? ''] ? (\n                                <FormattedMessage\n                                  {...messages.disableFeature}\n                                  tagName={EnableFeatureText}\n                                />\n                              ) : (\n                                <FormattedMessage\n                                  {...messages.enableFeature}\n                                  tagName={EnableFeatureText}\n                                />\n                              ))}\n                            {']'}\n                          </span>\n                        )}\n                      </li>\n                    )\n                  )}\n                </List>\n              </div>\n            )}\n            {latest.improvements && (\n              <div>\n                <strong>\n                  <FormattedMessage {...messages.improvements} />\n                </strong>\n                <List>\n                  {latest.improvements.map(({ title, description }, index) => (\n                    <li key={index}>\n                      <strong>\n                        {title}\n                        {': '}\n                      </strong>\n                      <span>{description}</span>\n                    </li>\n                  ))}\n                </List>\n              </div>\n            )}\n            {latest.fixes && (\n              <div>\n                <strong>\n                  <FormattedMessage {...messages.bugFixes} />\n                </strong>\n                <List>\n                  {latest.fixes.map(({ title, description }, index) => (\n                    <li key={index}>\n                      <strong>\n                        {title}\n                        {': '}\n                      </strong>\n                      <span>{description}</span>\n                    </li>\n                  ))}\n                </List>\n              </div>\n            )}\n          </ListContainer>\n        </Section>\n        <Section>\n          <SwitchOption\n            cta={messages.optOutCta}\n            description={messages.optOutDescription}\n            value={showChangelog}\n            onChange={value => setShowChangelog(value)}\n            dataHeapId='changelog-opt-out'\n          />\n        </Section>\n        <Footer>\n          <div>\n            <div>\n              <FormattedMessage {...messages.footer1} values={{ br: <br /> }} />\n            </div>\n            <Link\n              href='https://support.toggl.com/en/articles/2206984-toggl-track-browser-extension'\n              target='_blank'\n              rel='noreferrer noopener'\n            >\n              <FormattedMessage {...messages.readTheGuide} />\n            </Link>\n          </div>\n          <div>\n            <div>\n              <FormattedMessage {...messages.footer2} values={{ br: <br /> }} />\n            </div>\n            <Link href='mailto:support@toggl.com'>{'support@toggl.com'}</Link>\n          </div>\n        </Footer>\n      </Content>\n    </Root>\n  );\n};\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 24px;\n  gap: 16px;\n`;\n\nconst Section = styled.div`\n  display: flex;\n  width: 100%;\n  border-radius: 8px;\n  background: ${({ theme }) => theme.colors.surface_primary.regular};\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.ui.regular};\n  padding: 16px;\n  align-items: center;\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 16px;\n`;\n\nconst List = styled.ul`\n  padding-inline-start: 24px;\n  margin-block-start: 8px;\n\n  & > li {\n    padding: 2px 0;\n  }\n`;\n\nconst Footer = styled.div`\n  background: transparent;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.ui.regular};\n  width: 100%;\n  max-width: 1000px;\n  flex-grow: 0;\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n  }\n`;\n\nconst Link = styled.a`\n  text-decoration: underline;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.grape_120.regular};\n  :hover,\n  :focus {\n    color: ${({ theme }) => theme.colors.grape_120.hover};\n  }\n`;\n\nconst EnableFeatureText = styled.span`\n  color: ${({ theme }) => theme.colors.accent_120.regular};\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 143%;\n  margin: 0 4px;\n  cursor: pointer;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.accent_120.hover};\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Logo from '@ui/icons/Logo';\nimport SettingsIcon from '@ui/icons/SettingsIcon';\nimport PrivateIcon from '@src/ui/icons/PrivateIcon';\nimport ArrowIcon from '@src/ui/icons/ArrowIcon';\nimport PomodoroIcon from '@src/ui/icons/PomodoroIcon';\nimport TelemetryIcon from '@src/ui/icons/TelemetryIcon';\nimport QuestionIcon from '@src/ui/icons/QuestionIcon';\nimport { Tab } from '@src/types';\n\nimport GeneralPage from './tabs/General';\nimport IntegrationsPage from './tabs/Integrations';\nimport TelemetryPage from './tabs/Telemetry';\nimport MyAccountPage from './tabs/MyAccount';\nimport PomodoroPage from './tabs/Pomodoro';\nimport { dsm } from '@src/packages/ui/color';\nimport { useUser } from '@src/services/user';\nimport { WhatsNewIcon } from '@src/ui/icons/WhatsNewIcon';\nimport { WhatsNew } from './tabs/WhatsNew';\nimport { useNewTabDiscoveryExperiment } from '@src/lib/hooks/useNewTabDiscoveryExperiment';\nimport { abTester } from '@src/lib/abTester';\nimport useSetting from '@src/lib/hooks/useSetting';\nimport { isFirefox } from '@src/lib/utils';\nimport { useReminderNotificationExperiment } from '@src/lib/hooks/useReminderNotificationExperiment';\n\nconst messages = defineMessages({\n  settingsDivider: {\n    id: 'settings.nav.settingsDivider',\n    defaultMessage: 'Settings',\n  },\n  general: {\n    id: 'settings.nav.general',\n    defaultMessage: 'General',\n  },\n  integrations: {\n    id: 'settings.nav.integrations',\n    defaultMessage: 'Integrations',\n  },\n  pomodoro: {\n    id: 'settings.nav.pomodoro',\n    defaultMessage: 'Pomodoro',\n  },\n  telemetry: {\n    id: 'settings.nav.telemetry',\n    defaultMessage: 'Telemetry',\n  },\n  myAccount: {\n    id: 'settings.nav.myAccount',\n    defaultMessage: 'My Account',\n  },\n  helpDivider: {\n    id: 'settings.nav.helpDivider',\n    defaultMessage: 'Help',\n  },\n  whatsNew: {\n    id: 'settings.nav.whatsNew',\n    defaultMessage: 'What’s New',\n  },\n  userGuide: {\n    id: 'settings.nav.userGuide',\n    defaultMessage: 'User Guide',\n  },\n});\n\nconst Settings = () => {\n  const [url, setUrl] = React.useState<Tab>('integrations');\n  const { data: user } = useUser();\n  const [newTabPageEnabled, _] = useSetting('enableNewTabPage');\n  const [newTabPageDiscovered, setNewTabPageDiscovered] = useSetting(\n    'newTabPageDiscovered',\n    true\n  );\n  const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n\n  const newTabDiscoveryExperiment = useNewTabDiscoveryExperiment();\n  const __ = useReminderNotificationExperiment();\n\n  React.useEffect(() => {\n    if (user) {\n      abTester.setAttributes({ id: user.id });\n      abTester.subscribe(() => {\n        forceUpdate();\n      });\n      if (window.heap) window.heap.identify(`${user.id}`);\n    }\n  }, [user]);\n\n  React.useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const isUpdate = urlParams.get('update');\n\n    if (isUpdate === 'true') setUrl('whatsNew');\n  }, []);\n\n  const currentPage = React.useMemo(() => {\n    switch (url) {\n      case 'general':\n        return <GeneralPage setUrl={setUrl} />;\n      case 'integrations':\n        return <IntegrationsPage />;\n      case 'pomodoro':\n        return <PomodoroPage />;\n      case 'telemetry':\n        return <TelemetryPage />;\n      case 'myaccount':\n        return <MyAccountPage />;\n      case 'whatsNew':\n        return <WhatsNew />;\n      default:\n        return <IntegrationsPage />;\n    }\n  }, [url]);\n\n  return (\n    <Root>\n      <Sidebar>\n        <Header>\n          <Logo width='118px' height='24px' />\n        </Header>\n        <NavContent>\n          <Group>\n            <Divider>\n              <FormattedMessage {...messages.settingsDivider} />\n            </Divider>\n            <NavLink\n              onClick={() => setUrl('integrations')}\n              active={url === 'integrations'}\n            >\n              <ArrowIcon next />\n              <FormattedMessage {...messages.integrations} />\n            </NavLink>\n            <NavLink\n              onClick={() => setUrl('general')}\n              active={url === 'general'}\n            >\n              <SettingsIcon />\n              <FormattedMessage {...messages.general} />\n              {newTabDiscoveryExperiment.value === 'settings' &&\n                !newTabPageEnabled &&\n                !newTabPageDiscovered && <Dot />}\n            </NavLink>\n\n            <NavLink\n              onClick={() => setUrl('pomodoro')}\n              active={url === 'pomodoro'}\n            >\n              <PomodoroIcon />\n              <FormattedMessage {...messages.pomodoro} />\n            </NavLink>\n            <NavLink\n              onClick={() => setUrl('telemetry')}\n              active={url === 'telemetry'}\n            >\n              <TelemetryIcon />\n              <FormattedMessage {...messages.telemetry} />\n            </NavLink>\n            <NavLink\n              onClick={() => setUrl('myaccount')}\n              active={url === 'myaccount'}\n            >\n              <PrivateIcon />\n              <FormattedMessage {...messages.myAccount} />\n            </NavLink>\n          </Group>\n          <Group>\n            <Divider>\n              <FormattedMessage {...messages.helpDivider} />\n            </Divider>\n            <NavLink\n              onClick={() => setUrl('whatsNew')}\n              active={url === 'whatsNew'}\n            >\n              <WhatsNewIcon />\n              <FormattedMessage {...messages.whatsNew} />\n            </NavLink>\n            <NavButton\n              href='https://support.toggl.com/en/articles/2206984-toggl-track-browser-extension'\n              target='_blank'\n              rel='noreferrer noopener'\n            >\n              <QuestionIcon />\n              <FormattedMessage {...messages.userGuide} />\n            </NavButton>\n          </Group>\n        </NavContent>\n      </Sidebar>\n      <Content>{currentPage}</Content>\n    </Root>\n  );\n};\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Header = styled.div`\n  height: 70px;\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.surface_secondary.regular};\n`;\n\nconst Sidebar = styled.div`\n  width: 180px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  background-color: #2c1338;\n`;\n\nconst NavContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nconst Group = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n\nconst Divider = styled.div`\n  font-family: ${({ theme }) => theme.font.roboto};\n  color: ${({ theme }) => theme.colors.ui_60.regular};\n  font-size: 11px;\n  line-height: normal;\n  font-weight: ${({ theme }) => theme.text.semibold};\n  text-transform: uppercase;\n  letter-spacing: 0.4px;\n`;\n\nconst NavButton = styled.a<{\n  active?: boolean;\n}>`\n  position: relative;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 6px 8px;\n  gap: 12px;\n  border-radius: 8px;\n  font-size: 14px;\n  color: ${({ active, theme }) =>\n    active ? dsm.light.ui_0.regular : theme.colors.pale_peach.regular};\n  background-color: ${({ active }) =>\n    active ? dsm.light.ui_90.regular : 'none'};\n  cursor: pointer;\n  text-decoration: none;\n\n  &:hover {\n    color: ${dsm.light.ui_0.regular};\n    background-color: ${dsm.light.ui_90.regular};\n  }\n`;\n\nconst Dot = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  top: 7px;\n  left: 18px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.error.regular};\n`;\n\nconst NavLink = ({\n  children,\n  onClick,\n  active,\n}: {\n  children: JSX.Element[];\n  onClick: React.MouseEventHandler;\n  active: boolean;\n}) => {\n  return (\n    <NavButton active={active} onClick={onClick}>\n      {children}\n    </NavButton>\n  );\n};\n\nexport default Settings;\n","import * as React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { RawIntlProvider } from 'react-intl';\n\nimport { Db } from '@src/lib/db';\nimport { AppThemeProvider } from '@src/components/AppThemeProvider';\n\nimport Settings from './Settings';\nimport intl from '@src/lib/intl';\n\nimport { PersistQueryClientProvider } from '@tanstack/react-query-persist-client';\nimport { queryClient, persister } from '@src/lib/queryClient';\nimport { ABTestingProvider } from '@src/lib/abTester';\n\nimport '@src/lib/heap';\n\nfunction init() {\n  Db.loadAll();\n\n  const rootContainer = document.querySelector('#__root');\n  if (!rootContainer) throw new Error(\"Can't find Settings page root element\");\n  const root = createRoot(rootContainer);\n\n  root.render(\n    <ABTestingProvider>\n      <PersistQueryClientProvider\n        client={queryClient}\n        persistOptions={{ persister }}\n      >\n        <RawIntlProvider value={intl}>\n          <AppThemeProvider>\n            <Settings />\n          </AppThemeProvider>\n        </RawIntlProvider>\n        <ReactQueryDevtools initialIsOpen={false} />\n      </PersistQueryClientProvider>\n    </ABTestingProvider>\n  );\n}\n\ninit();\n"],"names":["CustomScripts","PrivateIcon","props","theme","useTheme","_jsx","color","colors","pale_peach","regular","ArrowIcon","css","getRotation","next","PomodoroIcon","TelemetryIcon","QuestionIcon","Card","children","header","Root","Header","Content","styled","div","surface_primary","ui_10","ui","text","semibold","Section","allClientPermissions","allWorkspacePermissions","dummyChartDescriptor","dummyDashboardDescriptor","factory","data","entitySyncError","baseUser","country","currentUser","location","invitation","invoice","invoiceSummary","lostPasswords","lostPasswordsNewPassword","lostPassswordsToken","lostPasswordsUser","oauthGoogleUrl","organization","remainingDays","pricingPlanId","lastPricingPlanId","moment","organizationOwner","organizationOwnerTransfer","organizationSubscription","organizationSubscriptionCustomer","organizationSubscriptionCalculation","contactDetails","organizationPricingPlans","organizationPricingPlan","organizationUser","workspaces","organizationCustomer","signup","organizationGroup","organizationGroupUser","project","projectCreateFormValues","projectCreateProperties","projectUser","projectGroup","task","constraints","client","customer","favorite","group","login","notification","paymentRecord","_a","_b","timeEntry","timeEntryInvitation","user","_c","_d","_e","timesheet","timesheetSetup","timesheetSetupCreation","timezones","workspace","DateTime","workspaceAlert","feature","workspaceReminder","meReminder","workspaceSSOConfig","fetch","fetchConfig","fetchInfo","info","subscription","plans","reportLockedAt","preferences","workspaceUser","transfer","weeklyReportEntry","currency","tag","report","schedule","integration","calendar","event","suggestion","messages","defineMessages","title","id","defaultMessage","copy","placeholder","DefaultProject","intl","useIntl","projects","projectService","selectedProjectId","setSelectedProjectId","useSetting","placeholderOption","name","formatMessage","projectsArray","React","useMemo","concat","Object","values","reduce","acc","active","server_deleted_at","push","sort","a","b","localeCompare","selectedProjectName","find","p","handleClick","_jsxs","FormattedMessage","Cta","DropdownContainer","ProjectsDropdown","state","projectId","undefined","Trigger","ChevronIcon","h5","height","ui_40","ChevronDown","dontRememberProject","rememberProjectPerIntegration","rememberProjectPerUrl","idToMessage","none","url","RememberLast","rememberProjectPer","setRememberProjectPer","handleSelected","Dropdown","Projects","welcome","cta","Welcome","setUrl","link","chunk","Link","grape_120","hover","SwitchOption","description","value","onChange","customContent","dataHeapId","sideElement","handleSwitchChange","track","SwitchOverlay","SwitchButton","SwitchCircle","SwitchSlider","SwitchLabel","SwitchCta","SwitchDescription","checked","accent","ui_50","accent_020","ui_20","span","normal","startAutomaticallyCta","startAutomaticallyDescription","stopAutomaticallyCta","stopAutomaticallyDescription","stopAtDayEndCta","stopAtDayEndDescription","stopAtDayEndLabel","StartingStopping","startAutomatically","setStartAutomatically","stopAutomatically","setStopAutomatically","stopAtDayEnd","setStopAtDayEnd","dayEndTime","setDayEndTime","inputValue","setInputValue","handleStartAutomaticallyChange","context","handleStopAutomaticallyChange","handleStopAtDayEndChange","configureStopAtDayEnd","clearStopAtDayEndAlarm","handleInputChange","e","target","handleDayEndTimeBlur","durationString","parseDuration","toISOTime","suppressSeconds","DurationContainer","TimeLabel","StyledDuration","ui_60","DurationInput","remindMeCta","remindMeDescription","remindMeConfig","idleDetectionCta","idleDetectionDescription","Reminders","remindMe","setRemindMe","idleDetection","setIdleDetection","handleRemindMeChange","clearPeriodicReminder","set","handleIdleDetectionChange","ConfigWrapper","fromTo","chunks","FromToControl","interval","IntervalControl","from","to","setFromTo","hasError","setHasError","localFrom","setLocalFrom","parseTime","localTo","setLocalTo","_Fragment","TimeField","isBeforeTo","compare","toString","handleFromChange","isAfterFrom","handleToChange","setInterval","Number","handleBlur","useIntersectionObserver","isVisible","setIsVisible","useState","onIntersect","entry","useEffect","observer","newTabCta","newTabDescription","tinyButtonCta","tinyButtonDescription","taggingCta","taggingDescription","postPopupCta","postPopupDescription","rightClickCta","rightClickDescription","darkModeCta","darkModeDescription","new","Other","newTabElementRef","enableTinyButton","setEnableTinyButton","enableNewTabPage","setEnableNewTabPage","tagging","setTagging","postPopup","setPostPopup","rightClick","setRightClick","darkMode","setDarkMode","darkModeUserSet","setDarkModeUser","newTabPageDiscovered","setNewTabPageDiscovered","newTabElementVisible","handleNewTabChange","chrome","permissions","request","granted","handleTinyButtonChange","origins","handleTaggingChange","handlePostPopupChange","handleRightClickChange","handleDarkModeChange","BadgeContainer","Badge","orange","ui_0","button","resetAllSettings","Browser","sync","clear","keys","DEFAULT_SETTINGS","forEach","key","window","reload","ResetAll","handleButtonClick","confirm","MessageWrapper","StyledButton","Button","error_120","clearCache","local","ClearCache","GeneralPage","SearchIcon","integrationsListHeader","integrationsListInfo","enableAllButton","disableAllButton","IntegrationsPage","filter","setFilter","filteredIntegrations","entries","TogglOrigins","toLowerCase","includes","selectedIntegrations","setSelectedIntegrations","onSelectIntegration","permission","remove","then","response","onApplyAll","status","getAll","Db","ListContainer","List","TextInput","map","ListItem","Checkbox","ButtonWrapper","borderRadius","surface_secondary","delete","firstIntegration","CustomURLs","inputsContainer","integrations","setIntegrations","domain","setDomain","selectedIntegration","setSelectedIntegration","handleDomainChange","handleAddClick","trim","handleDeleteClick","_","rest","CaptionItem","DeleteButton","Container","StyledTextInput","open","current","scrollIntoView","bold","heroSrc$1","greetings","OnboardingBanner","prefersColorScheme","matchMedia","matches","CloseIconContainer","onClose","CrossIcon","Title","DescriptionsContainer","Description","br","heroSrc","h2","CustomScriptInput","customScripts","setCustomScripts","scriptCode","setScriptCode","handleScriptCodeChange","settingsOnboarded","setSettingsOnboardingDone","loaded","Integrations","subHeader","sendUsageStatisticsCta","sendUsageStatisticsDescription","sendErrorReportsCta","sendErrorReportsDescription","Telemetry","sendUsageStatistics","setSendUsageStatistics","sendErrorReports","setSendErrorReports","handleSendUsageStatisticsChange","handleSendErrorReportsChange","yourCta","yourDescription","syncCta","syncDescription","syncButton","logoutCta","logoutDescription","logoutButton","MyAccount","userService","handleSyncClick","sendMessage","type","payload","handleLogoutClick","Wrapper","email","LogoutButton","subHeaderDescription","subHeaderDescription2","pomodoroSettingsSection","enablePomodoro","enablePomodoroDescription","intervalText","stopTimer","stopTimerDescription","focusMode","focusModeDescription","soundNotification","soundNotificationDescription","setVolume","tickingSound","tickingSoundDescription","testButton","stopButton","Pomodoro","pomodoroEnabled","setPomodoroEnabled","pomodoroInterval","setPomodoroInterval","stopTimerAtEnd","setStopTimerAtEnd","setFocusMode","setSoundNotification","notificationVolume","setNotificationVolume","tickingVolume","setTickingVolume","tickingPlaying","setTickingPlaying","tickAudio","Audio","runtime","getURL","playTestAudio","audio","volume","play","loop","paused","pause","preventDefault","stopPropagation","CustomContentContainer","WhatsNewIcon","Banner","changelog","version","latestUpdate","newFeatures","improvements","bugFixes","previous","footer1","footer2","readTheGuide","enableFeature","disableFeature","optOutCta","optOutDescription","WhatsNew","showChangelog","setShowChangelog","tinyButtonEnabled","setTinyButtonEnabled","latest","handleTogglFeature","settingName","hostName","features","settingsName","hostname","index","EnableFeatureText","fixes","Footer","ul","accent_120","settingsDivider","general","pomodoro","telemetry","myAccount","helpDivider","whatsNew","userGuide","Settings","useUser","newTabPageEnabled","forceUpdate","x","newTabDiscoveryExperiment","useNewTabDiscoveryExperiment","useReminderNotificationExperiment","abTester","setAttributes","subscribe","heap","identify","URLSearchParams","search","get","currentPage","PomodoroPage","TelemetryPage","MyAccountPage","Sidebar","Logo","NavContent","Group","Divider","NavLink","SettingsIcon","Dot","NavButton","font","roboto","dsm","light","ui_90","error","onClick","init","loadAll","rootContainer","document","querySelector","Error","createRoot","render","ABTestingProvider","PersistQueryClientProvider","queryClient","persister","RawIntlProvider","AppThemeProvider","ReactQueryDevtools"],"mappings":"8tBAAO,MAAMA,GAAgB,CAC3B,mBAAsB,CACpB,KAAM,wBACN,KAAM,yBACP,EACD,aAAgB,CACd,KAAM,qBACN,KAAM,oBACP,EACD,eAAkB,CAChB,KAAM,uBACN,KAAM,sBACP,CACH,ECTA,SAAwBC,GAAYC,EAAgC,CAClE,MAAMC,EAAQC,IAEd,SACE,MAAA,CAAK,MAAO,GAAI,OAAQ,GAAI,MAAM,6BAAlC,GAAmEF,EAAnE,SACE,CAAAG,EAAA,QAAA,CAAA,SAAQ,sCAAA,CAAR,EACAA,EAAA,OAAA,CACE,EAAE,yNACF,KAAMH,EAAMI,OAASH,EAAMI,OAAOC,WAAWC,QAC7C,SAAS,SAAA,CALb,CAAA,CAAA,CADF,CAUD,CCbD,SAAwBC,GACtBR,EACA,CACA,MAAMC,EAAQC,IAEd,SACE,MAAA,CACE,IAAKO;AAAAA,4BACiBC,GAAYV,EAAMW,IAAP;AAAA,QAEjC,MAAO,GACP,OAAQ,GACR,KAAK,OACL,MAAM,6BAPR,GAQMX,EARN,WAUE,OAAA,CACE,EAAE,4DACF,KAAMA,EAAMI,OAASH,EAAMI,OAAOC,WAAWC,OAAAA,CAF/C,CAAA,CAXJ,CAiBD,CAED,SAASG,GAAYC,EAAgB,CACnC,OAAKA,EACE,EADW,GAEnB,CC3BD,SAAwBC,GAAaZ,EAAgC,CACnE,MAAMC,EAAQC,IAEd,SACE,MAAA,CACE,MAAO,GACP,OAAQ,GACR,KAAK,OACL,MAAM,6BAJR,GAKMF,EALN,WAOE,OAAA,CACE,SAAS,UACT,SAAS,UACT,EAAE,2mBACF,KAAMA,EAAMI,OAASH,EAAMI,OAAOC,WAAWC,OAAAA,CAJ/C,CAAA,CARJ,CAgBD,CCnBD,SAAwBM,GAAcb,EAAgC,CACpE,MAAMC,EAAQC,IAEd,SACE,MAAA,CACE,MAAO,GACP,OAAQ,GACR,KAAK,OACL,MAAM,6BAJR,GAKMF,EALN,WAOE,OAAA,CACE,EAAE,+KACF,KAAMA,EAAMI,OAASH,EAAMI,OAAOC,WAAWC,OAAAA,CAF/C,CAAA,CARJ,CAcD,CCjBD,SAAwBO,GAAad,EAAgC,CACnE,MAAMC,EAAQC,IAEd,SACE,MAAA,CACE,MAAO,GACP,OAAQ,GACR,KAAK,OACL,MAAM,6BAJR,GAKMF,EALN,WAOE,OAAA,CACE,SAAS,UACT,SAAS,UACT,EAAE,mWACF,KAAMA,EAAMI,OAASH,EAAMI,OAAOC,WAAWC,OAAAA,CAJ/C,CAAA,CARJ,CAgBD,CCfD,SAAwBQ,EAAK,CAAEC,SAAAA,EAAUC,OAAAA,CAAZ,EAA6B,CACxD,SACGC,GAAD,CAAA,SAAA,CACEf,EAACgB,GAAD,CAAA,SAASF,CAAAA,CADX,EAEEd,EAACiB,GAAD,CAAA,SAAAJ,CAAA,CAFF,CAAA,CAAA,CADF,CAMD,CAED,MAAME,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBAMJ,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOkB,gBAAgBhB;AAAAA,4BAChC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOmB,MAAMjB;AAAAA;AAAAA,WAEnD,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,EAGpCY,GAASE,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iCAMW,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOmB,MAAMjB;AAAAA;AAAAA,iBAElD,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,EAGrCP,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMvBP,EAAKa,QAAUP,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,mCAWa,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOmB,MAAMjB;AAAAA;AAAAA,EC8P9D,MAAMsB,GAIT,CACF,OAAQ,GACR,OAAQ,GACR,QAAS,EACX,EAglCaC,GAA0B,CACrC,gCAAiC,GACjC,mBAAoB,GACpB,qBAAsB,GACtB,gBAAiB,GACjB,2BAA4B,GAC5B,eAAgB,GAChB,kBAAmB,GACnB,wBAAyB,GACzB,uBAAwB,GACxB,qBAAsB,GACtB,sBAAuB,GACvB,uBAAwB,GACxB,YAAa,GACb,gCAAiC,GACjC,oBAAqB,GACrB,6BAA8B,GAC9B,qBAAsB,GACtB,yBAA0B,GAC1B,2BAA4B,GAC5B,oBAAqB,GACrB,4BAA6B,GAC7B,mBAAoB,GACpB,mBAAoB,GACpB,oBAAqB,GACrB,WAAY,GACZ,wBAAyB,GACzB,cAAe,GACf,2BAA4B,GAC5B,yBAA0B,GAC1B,oBAAqB,GACrB,wBAAyB,GACzB,YAAa,GACb,8BAA+B,GAC/B,WAAY,GACZ,2BAA4B,GAC5B,2BAA4B,GAC5B,0BAA2B,GAC3B,gBAAiB,GACjB,eAAgB,GAChB,8BAA+B,GAC/B,qBAAsB,GACtB,sBAAuB,GACvB,YAAa,GACb,oBAAqB,GACrB,uBAAwB,GACxB,kBAAmB,GACnB,sBAAuB,GACvB,iBAAkB,GAClB,wBAAyB,GACzB,yBAA0B,GAC1B,2BAA4B,GAC5B,2BAA4B,GAC5B,6BAA8B,GAC9B,mBAAoB,GACpB,qBAAsB,GACtB,yCAA0C,GAC1C,eAAgB,GAChB,+BAAgC,GAChC,gCAAiC,GACjC,qBAAsB,GACtB,YAAa,GACb,wCAAyC,GACzC,iCAAkC,GAClC,yCAA0C,GAC1C,oBAAqB,GACrB,0BAA2B,GAC3B,qCAAsC,GACtC,wBAAyB,GACzB,uBAAwB,GACxB,+CAAgD,GAChD,mCAAoC,GACpC,0BAA2B,GAC3B,uBAAwB,GACxB,gBAAiB,GACjB,cAAe,GACf,YAAa,GACb,yBAA0B,GAC1B,sBAAuB,GACvB,2BAA4B,GAC5B,mBAAoB,GACpB,uCAAwC,GACxC,aAAc,GACd,6BAA8B,GAC9B,0BAA2B,GAC3B,uBAAwB,GACxB,sBAAuB,GACvB,qBAAsB,GACtB,kBAAmB,GACnB,sBAAuB,GACvB,mCAAoC,GACpC,0BAA2B,GAC3B,mBAAoB,GACpB,UAAW,GACX,sCAAuC,GACvC,+BAAgC,GAChC,uCAAwC,GACxC,kBAAmB,GACnB,yBAA0B,GAC1B,wBAAyB,GACzB,wBAAyB,GACzB,sBAAuB,GACvB,qBAAsB,GACtB,6CAA8C,GAC9C,iCAAkC,GAClC,wBAAyB,GACzB,qBAAsB,GACtB,4BAA6B,EAC/B,EAy+CMC,GAA6C,CACjD,KAAM,WACN,YAAa,sBACb,OAAQ,GACR,KAAM,QACN,gBAAiB,IACjB,YAAa,CAAE,WAAY,OAAQ,EACnC,MAAO,CACL,UAAW,CACT,CACE,KAAM,SACN,SAAU,WACZ,CACF,EACA,aAAc,CACZ,CACE,SAAU,MACV,SAAU,WACV,KAAM,EACR,CACF,EACA,WAAY,CACV,CACE,SAAU,QACZ,EACA,CACE,SAAU,UACZ,CACF,EACA,QAAS,CACP,CACE,SAAU,eACV,SAAU,IACV,MAAO,CACT,CACF,EACA,OAAQ,CACN,OAAQ,OACR,KAAM,2BACN,GAAI,0BACN,EACA,YAAa,CACX,CACE,SAAU,WACV,UAAW,MACX,MAAO,OACT,CACF,EACA,gBAAiB,CACf,CACE,KAAM,mBACN,WAAY,CAAC,MAAO,MAAO,KAAK,CAClC,CACF,CACF,CACF,EAEMC,GAAqD,CACzD,KAAM,eACN,YAAa,0BACb,OAAQ,GACR,gBAAiB,IACjB,YAAa,CAAC,EACd,QAAS,CAAC,EACV,WAAY,CAAC,CACf,EAEaC,EAAU,CACrB,aAAc,CAACC,EAA8B,MAAsB,CACjE,aAAc,CAAC,UAAU,EACzB,WAAY,8BACZ,aAAc,WACd,MAAO,gBACP,eAAgB,GAChB,GAAI,IACJ,UAAW,KACX,SAAU,iBACV,WAAY,8BACZ,WAAY,8BACZ,GAAGA,CAAA,GAEL,UAAW,CACT,MAAO,CAACA,EAAiC,MAAyB,CAChE,GAAGH,GACH,GAAI,EACJ,WAAY,QACZ,WAAY,8BACZ,aAAc,WACd,WAAY,8BACZ,YAAa,CAAC,EACd,KAAM,CACJ,SAAU,GACV,MAAO,KACT,EACA,GAAGG,CAAA,GAEL,kBAAmB,CACjBA,EAAsC,MACZ,CAC1B,GAAGH,GACH,GAAGG,CAAA,GAEL,UAAW,CACTA,EAAqC,MACZ,CACzB,GAAGF,GACH,GAAI,EACJ,WAAY,QACZ,WAAY,8BACZ,aAAc,WACd,WAAY,8BACZ,YAAa,CAAC,EACd,KAAM,CACJ,SAAU,GACV,MAAO,KACT,EACA,GAAGE,CAAA,GAEL,kBAAmB,CACjBA,EAAmC,MACZ,CACvB,GAAI,EACJ,SAAU,EACV,WAAY,EACZ,WAAY,EACZ,MAAO,EACP,OAAQ,EACR,GAAGA,CAAA,GAEL,sBAAuB,CACrBA,EAA0C,MACZ,CAC9B,GAAGF,GACH,GAAGE,CAAA,EAEP,EACA,gBACEC,IACqB,CACrB,OAAQ,OACR,QAAS,MACT,KAAM,MACN,eAAgB,GAChB,GAAGA,CAAA,GAEL,SAAU,CAACC,EAA8B,MAAkB,CACzD,UAAW,YACX,GAAI,8BACJ,MAAO,6BACP,SAAU,mBACV,GAAI,EACJ,UAAW,sDACX,SAAU,kBACV,GAAGA,CAAA,GAEL,QAAUC,IAAyC,CACjD,GAAI,EACJ,KAAM,SACN,oBAAqB,EACrB,aAAc,KACd,eAAgB,GAChB,eAAgB,GAChB,UAAW,gBACX,GAAGA,CAAA,GAEL,YAAcC,IAAqD,CACjE,UAAW,YACX,GAAI,4BACJ,kBAAmB,EACnB,WAAY,IACZ,WAAY,8BACZ,YAAa,OACb,qBAAsB,OACtB,MAAO,6BACP,SAAU,mBACV,aAAc,GACd,GAAI,EACJ,UAAW,oCACX,cAAe,OACf,gBAAiB,CAAC,EAClB,aAAc,KACd,eAAgB,GAChB,WAAY,EACZ,SAAU,kBACV,WAAY,4BACZ,GAAGA,CAAA,GAEL,SAAWC,IAA4C,CACrD,KAAM,WACN,aAAc,KACd,aAAc,yBACd,MAAO,uCACP,GAAGA,CAAA,GAEL,WAAaC,IAAkD,CAC7D,KAAM,WACN,YAAa,YACb,MAAO,aACP,IAAK,GACL,GAAGA,CAAA,GAEL,QAAUC,IAAyC,CACjD,KAAM,CACJ,OAAQ,EACR,GAAI,IACJ,KAAM,aACN,QAAS,aACT,eAAgB,IAChB,aAAc,IACd,QAAS,IACT,YAAa,EACb,GAAGA,GAAA,YAAAA,EAAS,IACd,EACA,SAAU,CACR,QAAS,IACT,GAAGA,GAAA,YAAAA,EAAS,QACd,EACA,MAAO,CACL,QAAS,IACT,GAAGA,GAAA,YAAAA,EAAS,KACd,EACA,OAAOA,GAAA,YAAAA,EAAS,QAAS,CACvB,CACE,GAAI,EACJ,MAAO,IACP,SAAU,EACV,OAAQ,EACR,SAAU,KACZ,CACF,EACA,OAAOA,GAAA,YAAAA,EAAS,QAAS,CACvB,CACE,GAAI,EACJ,KAAM,IACN,OAAQ,CACV,CACF,EACA,KAAM,CACJ,GAAGA,GAAA,YAAAA,EAAS,IACd,CAAA,GAEF,eACEC,IACiC,CACjC,SAAU,MACV,aAAc,IACd,iBAAkB,IAClB,sBAAuB,IACvB,cAAe,SACf,MAAO,GACP,GAAGA,CAAA,GAEL,cAAgBC,IAA2D,CACzE,MAAO,6BACP,GAAGA,CAAA,GAEL,yBAA0B,CACxBC,EAA8D,MAChC,CAC9B,KAAM,mCACN,QAAS,IACT,SAAU,YACV,GAAGA,CAAA,GAEL,mBACEC,GAEAA,GAAuB,mCACzB,kBACEC,IACuB,CACvB,QAAS,IACT,GAAGA,CAAA,GAEL,eAAgB,CACdC,EAA0C,MACtB,CACpB,IAAK,uBACL,GAAGA,CAAA,GAEL,aAAeC,IAAwD,CAEnE,GAAI,EACJ,GAAI,SACJ,WAAY,SACZ,KAAM,SACN,MAAO,GACP,gBAAiB,EACjB,kBAAmB,SACnB,MAAO,GACP,WAAY,EACZ,2BAA4B,GAC5B,eAAgB,OAChB,WAAY,CACV,eAAgB,GAChB,qBAAsB,IACtB,kBAAmB,aACnB,MAAO,GACP,eAAgB,YAClB,EAEF,GAAGA,CAAA,GAEL,sBAAuB,CACrB,CACE,cAAAC,EAAgB,EAChB,cAAAC,EAAgB,IAChB,kBAAAC,EAAoB,MAMtBH,KACkB,CAClB,GAAGf,EAAQ,aAAae,CAAY,EACpC,WAAY,GACZ,gBAAiBE,EACjB,WAAY,CACV,GAAGjB,EAAQ,aAAA,EAAe,WAC1B,eAAgBgB,GAAiB,EACjC,qBAAsBE,EACtB,kBACEF,GAAiB,EACbG,IAAS,QAAQ,KAAK,EAAE,IAAIH,EAAe,MAAM,EAAE,cACnDG,IACG,QAAQ,KAAK,EACb,SAAS,KAAK,IAAIH,CAAa,EAAG,MAAM,EACxC,YAAY,EACrB,MAAOA,GAAiB,CAC1B,CAAA,GAEF,kBACEI,IACuB,CACvB,GAAI,EACJ,qBAAsB,EACtB,gBAAiB,EACjB,QAAS,EACT,MAAO,QACP,KAAM,SACN,WAAY,SACZ,GAAGA,CAAA,GAEL,0BACEC,IAC+B,CAC/B,kBAAmB,EACnB,gBAAiB,EACjB,iBAAkB,EAClB,aAAc,EACd,aAAc,EACd,WAAY,SACZ,uBACEA,EAA0B,wBAA0B,GACtD,0BACEA,EAA0B,2BAA6B,SACzD,mBAAoBA,EAA0B,oBAAsB,GACpE,sBACEA,EAA0B,uBAAyB,SACrD,aAAcA,EAA0B,cAAgB,UACxD,YAAaA,EAA0B,aAAe,SACtD,GAAGA,CAAA,GAEL,yBACEC,IAC8B,CAC9B,WAAY,GACZ,mBAAoB,GACpB,kBAAmB,uBACnB,eAAgB,SAChB,gBAAiB,IACjB,gBAAiB,GACjB,WAAY,uBACZ,aAAc,KACd,gBAAiB,KACjB,aAAc,KAEd,wBAAyB,aACzB,yBAA0B,aAC1B,uBAAwB,aACxB,yBAA0B,KAC1B,YAAa,KACb,SAAU,MACV,SAAU,aACV,WAAY,GACZ,WAAY,GACZ,UAAW,eACX,aAAc,aACd,mBAAoB,IACpB,MAAO,EACP,KAAM,WACN,WAAY,aACZ,MAAO,WACP,eAAgB,aAChB,iBAAkB,aAClB,iBAAkB,GAClB,GAAGA,CAAA,GAEL,iCACEC,IACsC,CACtC,GAAI,GACJ,cAAe,GACf,iBAAkB,GAClB,WAAY,GACZ,WAAY,GACZ,MAAO,GACP,YAAa,GACb,aAAc,GACd,KAAM,YACN,SAAU,GACV,GAAGA,CAAA,GAEL,oCACEC,IACyC,CACzC,YACE,yEACF,SAAU,MACV,OAAQ,GACR,eAAgB,GAChB,aAAc,OACd,GAAGA,CAAA,GAEL,uCAAwC,CACtCC,EAAkE,MACtB,CAC5C,gBAAiB,mBACjB,aAAc,cACd,kBAAmB,EACnB,cAAeA,EAAe,eAAiB,oBAC/C,eAAgBA,EAAe,gBAAkB,YACjD,WAAY,EACZ,uBAAwBA,EAAe,wBAA0B,KACjE,WAAY,8BACZ,YAAa,EACb,eAAgB,GAChB,WAAY,8BACZ,QAAS,EACT,WAAYA,EAAe,YAAc,KACzC,iBAAkB,GAClB,wBAAyBA,EAAe,yBAA2B,KACnE,SAAUA,EAAe,UAAY,QACrC,GAAGA,CAAA,GAEL,8CAA+C,CAC7CA,EAAyE,MACtB,CACnD,gBAAiB,mBACjB,aAAcA,EAAe,cAAgB,cAC7C,cAAeA,EAAe,eAAiB,QAC/C,cAAeA,EAAe,eAAiB,oBAC/C,eAAgBA,EAAe,gBAAkB,YACjD,WAAY,EACZ,uBAAwBA,EAAe,wBAA0B,KACjE,WAAYA,EAAe,YAAc,KACzC,SAAUA,EAAe,UAAY,QACrC,GAAGA,CAAA,GAEL,yBACEC,IAC8B,CAC9B,YAAa,EACb,oBAAqB,EACrB,YAAa,OACb,eAAgB,EAChB,WAAY,EACZ,MAAO,CACL,CACE,KAAM,OACN,QAAS,EACT,cAAe,CACb,CACE,KAAM,OACN,OAAQ,EACR,gBAAiB,EACjB,aAAc,CACZ,OAAQ,EACR,KAAM,EACN,SAAU,CACZ,EACA,cAAe,CACb,OAAQ,EACR,KAAM,EACN,SAAU,CACZ,CACF,CACF,CACF,EACA,CACE,KAAM,UACN,QAAS,IACT,cAAe,CACb,CACE,KAAM,kBACN,OAAQ,EACR,gBAAiB,IACjB,aAAc,CACZ,OAAQ,IACR,KAAM,IACN,SAAU,IACZ,EACA,cAAe,CACb,OAAQ,IACR,KAAM,IACN,SAAU,IACZ,CACF,EACA,CACE,KAAM,iBACN,OAAQ,GACR,gBAAiB,IACjB,aAAc,CACZ,OAAQ,IACR,KAAM,IACN,SAAU,GACZ,EACA,cAAe,CACb,OAAQ,KACR,KAAM,KACN,SAAU,KACZ,CACF,CACF,CACF,EACA,CACE,KAAM,UACN,QAAS,IACT,cAAe,CACb,CACE,KAAM,kBACN,OAAQ,EACR,gBAAiB,IACjB,aAAc,CACZ,OAAQ,KACR,KAAM,KACN,SAAU,IACZ,EACA,cAAe,CACb,OAAQ,KACR,KAAM,KACN,SAAU,IACZ,CACF,EACA,CACE,KAAM,iBACN,OAAQ,GACR,gBAAiB,IACjB,aAAc,CACZ,OAAQ,KACR,KAAM,KACN,SAAU,IACZ,EACA,cAAe,CACb,OAAQ,MACR,KAAM,MACN,SAAU,KACZ,CACF,CACF,CACF,EACA,CACE,QAAS,GACT,KAAM,eACN,cAAe,CACb,CACE,gBAAiB,GACjB,KAAM,eACN,OAAQ,EACR,aAAc,CACZ,KAAM,EACN,SAAU,EACV,OAAQ,CACV,EACA,cAAe,CACb,KAAM,EACN,SAAU,EACV,OAAQ,CACV,CACF,EACA,CACE,gBAAiB,GACjB,KAAM,eACN,OAAQ,GACR,aAAc,CACZ,KAAM,EACN,SAAU,EACV,OAAQ,CACV,EACA,cAAe,CACb,KAAM,EACN,SAAU,EACV,OAAQ,CACV,CACF,CACF,CACF,CACF,EACA,GAAGA,CAAA,GAEL,wBACEC,IAC6B,CAC7B,KAAM,SACN,OAAQ,EACR,gBAAiB,IACjB,cAAcA,GAAA,YAAAA,EAAyB,eAAgB,CACrD,OAAQ,EACR,KAAM,EACN,SAAU,CACZ,EACA,eAAeA,GAAA,YAAAA,EAAyB,gBAAiB,CACvD,OAAQ,EACR,KAAM,GACN,SAAU,EACZ,EACA,GAAGA,CAAA,GAEL,iBAAkB,CAChBC,EACAC,KAMsB,CACtB,MAAO,GACP,WAAY,SACZ,eAAgB,GAChB,MAAO,SACP,OAAQ,CAAC,CAAE,SAAU,EAAG,KAAM,SAAU,EACxC,GAAI,EACJ,OAAQ,GACR,gBAAiB,KACjB,KAAM,SACN,MAAO,GACP,SAAU,GACV,QAAS,EACT,WAAYA,GAAc,CACxB,CAAE,aAAc,EAAG,MAAO,GAAO,KAAM,SAAU,SAAU,EAAM,CACnE,EACA,GAAGD,CAAA,GAEL,qBACEE,IAC0B,CAC1B,iBAAkB,EAClB,mBAAoB,SACpB,QAAS,OACT,WAAY,OACZ,eAAgB,OAChB,WAAY,SACZ,YAAa,EACb,YAAa,EACb,uBAAwB,GACxB,GAAGA,CAAA,GAEL,OAASC,GACHA,GAIG,CACL,WAAY,GACZ,aAAc,UACd,MAAO,6BACP,SAAU,YACV,aAAc,GACd,UAAW,CACT,qBAAsB,EACtB,cAAe,EACjB,CAAA,EAGJ,kBAAmB,CACjBC,EAAgD,MACzB,CACvB,SAAU,EACV,KAAM,SACN,GAAI,SACJ,WAAY,CAAC,CAAC,EACd,MAAO,CACL,CAAE,QAAS,EAAG,KAAM,WAAY,WAAY,SAAU,OAAQ,EAAK,CACrE,EACA,GAAGA,CAAA,GAEL,sBAAuB,CACrBC,EAAwD,MAC7B,CAC3B,QAAS,EACT,KAAM,WACN,WAAY,SACZ,OAAQ,GACR,GAAGA,CAAA,GAEL,QAAUC,IAAwC,CAChD,OAAQ,GACR,aAAc,OACd,GAAI,aACJ,eAAgB,GAChB,SAAU,GACV,IAAK,OACL,UAAW,EAGX,MAAO,UACP,WAAY,aACZ,SAAU,OACV,gBAAiB,OACjB,UAAW,KACX,GAAI,EACJ,WAAY,GACZ,KAAM,eACN,KAAM,OACN,UAAW,GACX,WAAY,GACZ,kBAAmB,OACnB,SAAU,GACV,IAAK,EACL,aAAc,EACd,UAAW,GACX,GAAGA,CAAA,GAEL,wBAAyB,CACvBC,EAA4D,MAC/B,CAC7B,eAAgB,GAChB,SAAU,GACV,UAAW,KACX,MAAO,GACP,SAAU,GACV,gBAAiB,EACjB,UAAW,GACX,UAAW,KACX,WAAY,GACZ,KAAM,eACN,WAAY,KACZ,KAAM,KACN,mBAAoB,KACpB,UAAW,GACX,qBAAsB,CACpB,OAAQ,EACV,EACA,WAAY,GACZ,SAAU,KACV,aAAc,EACd,GAAGA,CAAA,GAEL,wBAAyB,CACvBC,EAA4D,MAC/B,CAC7B,OAAQ,GACR,eAAgB,GAChB,SAAU,GAEV,MAAO,UACP,UAAW,KACX,WAAY,GACZ,KAAM,eACN,UAAW,GACX,qBAAsB,KACtB,WAAY,GACZ,SAAU,GACV,IAAK,EACL,UAAW,GACX,GAAGA,CAAA,GAEL,YAAcC,IAAoD,CAChE,GAAI,aACJ,IAAK,OACL,GAAI,EACJ,YAAa,OACb,QAAS,GACT,WAAY,EACZ,KAAM,OACN,QAAS,EACT,aAAc,EACd,GAAGA,CAAA,GAEL,aAAeC,IAAuD,CACpE,GAAI,EACJ,SAAU,EACV,IAAK,EACL,IAAK,EACL,GAAGA,CAAA,GAEL,KAAOC,IAA+B,CACpC,OAAQ,GACR,GAAIA,EAAK,IAAM,KACf,kBAAmB,EACnB,GAAI,EACJ,KAAM,YACN,IAAK,EACL,gBAAiB,EACjB,IAAK,EACL,GAAGA,CAAA,GAEL,OAASA,IAAmC,CAC1C,OAAQ,GACR,GAAIA,EAAK,IAAM,KACf,kBAAmB,EACnB,GAAI,EACJ,KAAM,YACN,WAAY,EACZ,gBAAiB,EACjB,aAAc,EACd,QAASA,EAAK,SAAW,EACzB,GAAGA,CAAA,GAEL,qBACEC,IAC0B,CAC1B,oBAAqB,GACrB,gBAAiB,GACjB,YAAa,GACb,aAAc,GACd,+BAAgC,GAChC,GAAGA,CAAA,GAEL,OAASC,IAAqC,CAC5C,GAAI,SACJ,GAAI,EACJ,KAAM,cACN,IAAK,EACL,SAAU,GACV,YAAa7C,GACb,GAAG6C,CAAA,GAEL,aAAeA,IAAiD,CAC9D,GAAI,SACJ,GAAI,EACJ,KAAM,cACN,IAAK,EACL,SAAU,GACV,GAAGA,CAAA,GAEL,SAAWC,IAA6D,CACtE,iBAAkB,EAClB,mBAAoB,SACpB,QAAS,OACT,WAAY,OACZ,eAAgB,OAChB,WAAY,SACZ,YAAa,EACb,YAAa,EACb,uBAAwB,GACxB,GAAGA,CAAA,GAEL,SAAWC,IAA2C,CACpD,SAAU,GACV,OAAQ,GACR,YAAa,cACb,WAAY,KACZ,QAAS,KACT,QAAS,CAAC,EACV,YAAa,EACb,aAAc,EACd,KAAM,EACN,GAAGA,CAAA,GAEL,MAAQC,IAAkC,CACxC,GAAI,SACJ,GAAI,EACJ,KAAM,SACN,aAAc,EACd,GAAGA,CAAA,GAEL,MAAQC,GACNA,GAAA,KAAAA,EAAS,CACP,MAAO,6BACP,SAAU,sCACZ,EACF,aAAc,CAAC,IACVC,CAAA,KAC6C,CAChD,QAAS,CACP,KAAM,CAAE,KAAM,OAAQ,KAAM,WAAY,EACxC,QAAS,MACX,EACA,MAAO,EACP,QAAS,CACP,gBAAiB,OACjB,GAAI,KACJ,OAAQ,MACV,EACA,WAAY,4BACZ,GAAI,EACJ,kBAAmB,oBACnB,QAAS,OACT,MAAO,CACL,gBAAiB,OACjB,GAAI,KACJ,OAAQ,MACV,EACA,QAAS,EACT,GAAGA,CAAA,GAEL,cAAgBC,GAA0D,SAAA,OACxE,cAAe,2BACf,SAAU,MACV,YAAa,EACb,YAAa,sCACb,IAAIC,EAAAD,EAAc,KAAd,KAAAC,EAAqBD,EAAc,MAAQ,OAAY,EAAI,KAC/D,KAAKE,EAAAF,EAAc,MAAd,KAAAE,EAAqB,KAC1B,WAAYF,EAAc,YAAc,KACxC,YAAa,UACb,aAAc,EACd,GAAGA,CAAA,GAEL,UAAYG,IAA8C,CACxD,GAAI,aACJ,SAAU,GACV,YAAa,cACb,SAAU,GACV,QAAS,GACT,GAAI,EACJ,kBAAmB,KACnB,MAAO,4BACP,IAAK,EACL,QAAS,EACT,IAAK,EACL,GAAGA,CAAA,GAEL,oBAAqB,CACnBC,EACAC,EAAsB,CAAA,EACtBF,EAAkC,CAAA,IACT,eAAA,OACzB,yBAA0B,EAC1B,cAAcF,EAAAI,EAAK,MAAL,KAAAJ,EAAY,EAC1B,mBAAmBC,EAAAG,EAAK,KAAL,KAAAH,EAAW,EAC9B,qBAAqBI,EAAAD,EAAK,OAAL,KAAAC,EAAa,SAClC,WAAY,CACV,GAAGrD,EAAQ,UAAU,EAAE,EACvB,SAASsD,EAAAF,EAAK,KAAL,KAAAE,EAAW,EACpB,cAAcC,EAAAH,EAAK,MAAL,KAAAG,EAAY,EAC1B,GAAGL,CACL,EACA,GAAGC,CAAA,GAEL,UAAYK,IAA8C,CACxD,wBAAyB,GACzB,wBAAyB,EACzB,0BAA2B,GAC3B,YAAa,EACb,cAAe,oBACf,SAAUrC,EAAO,EAAE,MAAM,MAAM,EAAE,OAAO,YAAY,EACpD,UAAW,EACX,YAAa,SACb,gBAAiB,GACjB,cAAe,GACf,WAAY,GACZ,aAAc,GACd,YAAa,SACb,kBAAmB,KACnB,iBAAkBA,EAAO,EAAE,MAAM,MAAM,EAAE,YAAY,EACrD,WAAYA,EAAO,EAAE,QAAQ,MAAM,EAAE,OAAO,YAAY,EACxD,OAAQ,cACR,aAAcA,EAAO,EAAE,QAAQ,MAAM,EAAE,YAAY,EACnD,mBAAoB,EACpB,aAAc,GACd,GAAGqC,CAAA,GAEL,eACEC,IACoB,CACpB,GAAI,EACJ,UAAW,EACX,YAAa,SACb,YAAa,EACb,cAAe,WACf,YAAa,SACb,WAAYtC,EAAO,EAAE,QAAQ,MAAM,EAAE,OAAO,YAAY,EACxD,SAAUA,EAAO,EAAE,MAAM,MAAM,EAAE,OAAO,YAAY,EACpD,aAAc,EACd,cAAe,QACf,OAAQ,CAAC,EACT,aAAc,EACd,GAAGsC,CAAA,GAEL,uBACEC,IAC4B,CAC5B,WAAY,CAAC,CAAC,EACd,YAAa,EACb,YAAa,SACb,WAAYvC,EAAO,EAAE,QAAQ,MAAM,EAAE,OAAO,YAAY,EACxD,aAAc,KACd,cAAe,KACf,GAAGuC,CAAA,GAEL,cAAe,CAACR,EAAoC,MAAuB,CACzE,GAAI,aACJ,SAAU,GACV,YAAa,cACb,SAAU,GACV,QAAS,GACT,GAAI,EACJ,kBAAmB,KACnB,MAAO,4BACP,IAAK,EACL,QAAS,EACT,IAAK,EACL,QAAS,EACT,GAAGA,CAAA,GAEL,UAAW,CAACS,EAAuB,KAAkB,CACnD,kBACA,GAAGA,CACL,EACA,KAAOP,IAA+B,CACpC,OAAQ,GACR,MAAO,GACP,GAAI,SACJ,iBAAkBA,EAAK,kBAAoB,KAC3C,MAAO,SACP,UAAWA,EAAK,WAAa,KAC7B,GAAI,EACJ,SAAUA,EAAK,UAAY,KAC3B,gBAAiBA,EAAK,iBAAmB,KACzC,WAAYA,EAAK,YAAc,KAC/B,YAAaA,EAAK,aAAe,KACjC,KAAM,SACN,MAAO,GACP,KAAMA,EAAK,MAAQ,KACnB,SAAU,SACV,IAAK,EACL,IAAK,EACL,gBAAiB,EACjB,GAAGA,CAAA,GAEL,UAAW,CAACQ,EAAgC,MAAmB,CAC7D,MAAO,GACP,GAAI,SACJ,YAAa,GACb,WAAY,CAAE,GAAI,OAAQ,OAAQ,CAAE,EACpC,iBAAkB,SAClB,aAAc,GACd,SAAU,SACV,GAAI,EACJ,cAAeC,GAAS,IAAI,EAAE,UAAU,EACxC,SAAU,SACV,KAAM,SACN,gCAAiC,GACjC,4BAA6B,GAC7B,+BAAgC,GAChC,+BAAgC,GAChC,gBAAiB,EACjB,QAAS,GACT,QAAS,EACT,6BAA8B,GAC9B,4BAA6B,GAC7B,aAAcD,EAAU,cAAgB,KACxC,iBAAkB,GAClB,YAAa/D,GACb,GAAG+D,CAAA,GAEL,eACEE,IACoB,CACpB,GAAI,EACJ,YAAa,cACb,YAAa,EACb,UAAW,EACX,UAAW,GACX,IAAK,EACL,eAAgB,gBAChB,WAAY,CAAC,EAAE,EACf,eAAgB,CAAC,iBAAiB,EAClC,eAAgB,CAAC,EACjB,gBAAiB,CAAC,EAClB,GAAGA,CAAA,GAEL,iBACEC,IACsB,CACtB,QAAS,GACT,WAAY,EACZ,KAAM,iBACN,GAAGA,CAAA,GAEL,kBACEC,IACuB,CACvB,YAAa,EACb,WAAY,SACZ,UAAW,EACX,UAAW,CAAC,CAAC,EACb,UAAW,EACX,SAAU,CAAC,CAAC,EACZ,aAAc,EACd,GAAGA,CAAA,GAEL,WAAaC,IAAiD,CAC5D,WAAY,8BACZ,UAAW,EACX,UAAW,KACX,YAAa,EACb,UAAW,IACX,SAAU,KACV,aAAc,EACd,GAAGA,CAAA,GAEL,mBACEC,IACwB,CACxB,OAAQ,SACR,QAAS,GACT,KAAM,OACN,GAAGA,CAAA,GAEL,kBACEC,GAKsB,CACtB,KAAM,CAAE,OAAQC,KAAgBC,CAAA,EAAcF,EACvC,MAAA,CACL,OAAQnE,EAAQ,mBAAmBoE,GAAe,CAAA,CAAE,EACpD,GAAGpE,EAAQ,iBAAiBqE,GAAa,EAAE,CAAA,CAE/C,EACA,iBAAmBC,IAAuD,CACxE,YAAa,CACX,QAAS,UACT,UAAW,YACX,GAAGA,EAAK,WACV,CAAA,GAEF,sBACEC,IAC2B,CAC3B,WAAY,GACZ,mBAAoB,GACpB,kBAAmB,aACnB,eAAgB,OAChB,gBAAiB,IACjB,gBAAiB,GACjB,qBAAsB,GACtB,GAAGA,CAAA,GAEL,+BAAgC,CAAC,CAC/B,cAAAvD,EAAgB,EAChB,cAAAC,EAAgB,IAChB,kBAAAC,EAAoB,IAAA,KAKQ,CAC5B,qBAAsB,GACtB,WAAY,GACZ,mBAAoB,GACpB,eAAgB,OAChB,gBAAiBD,EACjB,qBAAsBC,EACtB,oBAAqB,CACnB,gBAAiB,EACjB,uBAAwB,EACxB,WAAY,EACZ,YAAa,KACb,YAAaF,GAAiB,EAC1BG,EAAA,EAAS,QAAQ,KAAK,EAAE,IAAIH,EAAe,MAAM,EACjDG,EAAO,EAAE,QAAQ,KAAK,EAAE,SAAS,KAAK,IAAIH,CAAa,EAAG,MAAM,GAEjE,SAAS,EAAG,QAAQ,EACpB,YAAY,EACf,YAAaA,GAAiB,EAC1BG,EAAA,EAAS,QAAQ,KAAK,EAAE,IAAIH,EAAe,MAAM,EACjDG,EAAO,EAAE,QAAQ,KAAK,EAAE,SAAS,KAAK,IAAIH,CAAa,EAAG,MAAM,GAEjE,SAAS,EAAG,QAAQ,EACpB,YAAY,EACf,MAAOA,GAAiB,CAC1B,EACA,kBACEA,GAAiB,EACbG,IAAS,QAAQ,KAAK,EAAE,IAAIH,EAAe,MAAM,EAAE,cACnDG,IACG,QAAQ,KAAK,EACb,SAAS,KAAK,IAAIH,CAAa,EAAG,MAAM,EACxC,YAAY,EACrB,gBAAiBA,GAAiB,CAAA,GAEpC,oCACES,IACyC,CACzC,gBAAiB,SACjB,aAAc,SACd,cAAe,SACf,kBAAmB,EACnB,cAAe,SACf,eAAgB,SAChB,WAAY,EACZ,uBAAwB,OACxB,WAAY,SACZ,YAAa,EACb,eAAgB,GAChB,WAAY,SACZ,QAAS,EACT,WAAY,OACZ,iBAAkB,GAClB,wBAAyB,OACzB,SAAU,SACV,GAAGA,CAAA,GAEL,eAAiB+C,IAAoD,CACnE,YAAa,EACb,oBAAqB,EACrB,YAAa,OACb,MAAO,CACL,CACE,KAAM,OACN,QAAS,EACT,cAAe,CACb,CACE,KAAM,OACN,OAAQ,EACR,gBAAiB,EACjB,aAAc,CACZ,OAAQ,EACR,KAAM,EACN,SAAU,CACZ,EACA,cAAe,CACb,OAAQ,EACR,KAAM,EACN,SAAU,CACZ,CACF,CACF,CACF,CACF,EACA,eAAgB,EAChB,WAAY,EACZ,GAAGA,CAAA,GAEL,qBAAsB,CAAC,CACrB,iBAAkBC,KACfC,CAAA,KACuD,CAC1D,8BAA+B,GAC/B,qBAAsB,EACtB,iBAAkBD,EAClB,oBAAqB,IAAI,KAAK,EAAE,SAAS,EACzC,eAAgB,GAChB,GAAGC,CAAA,GAEL,cAAe,CAAC,IACXC,CAAA,KACyC,CAC5C,OAAQ,GACR,MAAO,GACP,GAAI,SACJ,iBAAkBA,EAAc,kBAAoB,KACpD,MAAO,SACP,UAAWA,EAAc,WAAa,KACtC,GAAI,EACJ,SAAUA,EAAc,UAAY,GACpC,gBAAiBA,EAAc,iBAAmB,KAClD,WAAYA,EAAc,YAAc,KACxC,UAAWA,EAAc,WAAa,GACtC,YAAaA,EAAc,aAAe,KAC1C,KAAM,SACN,KAAMA,EAAc,MAAQ,KAC5B,SAAU,SACV,aAAc,EACd,yBAA0BA,EAAc,0BAA4B,KACpE,QAAS,EACT,mBAAoB,GACpB,GAAGA,CAAA,GAEL,iBAAmB1E,GAAuD,OAAA,OACxE,SAAU,GACV,GAAGA,EACH,iBAAiB+C,EAAA/C,EAAK,kBAAL,KAAA+C,EAAwB,CACvC,SAAU,EACV,SAAU,CAAC,CACb,CAAA,GAEF,YAAc0B,GAAwD,OAAA,OACpE,iBAAkB,SAClB,YAAa,aACb,gBAAiB,WACjB,gBAAiB,GACjB,oBAAqB,GACrB,mBAAoB,GACpB,mBAAoB,CAClB,SAAS1B,EAAA0B,EAAY,qBAAZ,KAAA1B,EAAkC,GAC3C,IAAK,EACL,KAAM,EACR,EACA,yBAA0B,GAC1B,yBAA0B,2BAC1B,eAAgB,OAChB,cAAe,eACf,YAAa,eACb,gBAAiB,WACjB,6BAA8B,oBAC9B,gBAAiB,GACjB,WAAY,GACZ,oBAAqB,GACrB,oBAAqB,GACrB,4BAA6B,GAC7B,sBAAuB,GACvB,gBAAiB,GACjB,uBAAwB,cACxB,uBAAwB,0CACxB,sBAAuB,WACvB,yBAA0B,eAC1B,uBAAwB,QACxB,qBAAsB,GACtB,2BAA4B,GAC5B,oBAAqB,GACrB,qBAAsB,WACtB,wBAAyB,OACzB,oBAAqB,GACrB,8BAA+B,GAC/B,gBAAiB,GACjB,uBAAwB,GACxB,oBAAqB,GACrB,UAAW,WACX,eAAgB,CAAC,CAAE,KAAM,gBAAiB,QAAS,GAAO,EAC1D,0BAA2B,GAC3B,2BAA4B,GAC5B,2BAA4B,GAC5B,MAAO,QACP,GAAG0B,CAAA,GAEL,uBACEE,IAC4B,CAC5B,kBAAmB,EACnB,aAAc,EACd,aAAc,EACd,WAAY,aACZ,uBAAwB,GACxB,0BAA2B,aAC3B,mBAAoB,GACpB,sBAAuB,aACvB,QAAS,UACT,aAAc,UACd,YAAa,aACb,GAAGA,CAAA,GAEL,kBACEC,GACiC,SAAA,OACjC,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACtC,SAAU,MACV,qBAAsB,EACtB,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAC7B,YAAY7B,EAAA6B,EAAkB,aAAlB,KAAA7B,EAAgC,EAC5C,iBAAiBC,EAAA4B,EAAkB,kBAAlB,KAAA5B,EAAqC,KACtD,QAAS,IACT,GAAG4B,CAAA,GAEL,SAAWC,IAA2C,CACpD,YAAa,EACb,SAAU,MACV,OAAQ,IACR,GAAGA,CAAA,GAEL,IAAMC,IAA4B,CAChC,GAAI,IACJ,KAAM,OACN,aAAc,EACd,GAAI,SACJ,GAAGA,CAAA,GAEL,UAAYA,IAAwC,CAClD,GAAI,EACJ,KAAM,OACN,aAAc,EACd,GAAI,SACJ,GAAGA,CAAA,GAEL,SAAU,CAACA,EAAyB,MAAkB,CACpD,KAAM,OACN,aAAc,EACd,GAAGA,CAAA,GAEL,UAAYA,IAAwC,CAClD,GAAI,IACJ,KAAM,OACN,aAAc,EACd,GAAI,SACJ,GAAGA,CAAA,GAEL,YAAcC,IAA+C,CAC3D,GAAI,GACJ,KAAM,UACN,MAAO,QACP,gBAAiB,GACjB,OAAQ,GACR,IAAK,GACL,WAAY,8BACZ,WAAY,GACZ,OAAQ,KACR,qBAAsB,CAAC,EACvB,qBAAsB,CAAC,EACvB,GAAGA,CAAA,GAEL,gBAAkBC,IAAyD,CACzE,UAAW,KACX,WAAY,MACZ,aAAc,MACd,YAAa,OACb,SAAU,CACR,UAAW,QACX,KAAM,EACN,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EACxB,MAAO,IACT,EACA,WAAY,6BACZ,SAAU,CAAC,KAAK,EAChB,UAAW,CAAC,EACZ,GAAGA,CAAA,GAGL,iBACEC,IACsB,CACtB,sBACEA,EAAY,uBAAyB,kBACvC,cAAeA,EAAY,eAAiB,CAC1C,iBAAkB,mBAClB,eAAgB,CAAC,EACjB,aAAc,WAChB,EACA,QAASA,EAAY,SAAW,GAChC,kBAAmBA,EAAY,mBAAqB,CAClD,iBAAkB,CAChB,eAAgB,CAAC,OAAQ,OAAO,EAChC,YAAa,CAAC,OAAQ,UAAW,MAAM,EACvC,mBAAoB,CAClB,CACE,GAAI,OACJ,KAAM,eACR,CACF,CACF,CACF,EACA,WAAYA,EAAY,YAAc,GACtC,WAAYA,EAAY,YAAc,KACtC,YAAaA,EAAY,aAAe,KACxC,cAAeA,EAAY,eAAiB,IAAA,GAG9C,sBACEA,IAC2B,CAC3B,sBACEA,EAAY,uBAAyB,kBACvC,cAAeA,EAAY,eAAiB,CAC1C,eAAgB,CAAC,EACjB,aAAc,WAChB,EACA,QAASA,EAAY,SAAW,GAChC,kBAAmBA,EAAY,mBAAqB,CAAC,EACrD,WAAYA,EAAY,YAAc,GACtC,YAAaA,EAAY,aAAe,KACxC,cAAeA,EAAY,eAAiB,CAAC,EAC7C,gBAAiBA,EAAY,iBAAmB,IAAA,GAGlD,aAAc,CACZ,oBACEA,IACyB,CACzB,wBAAyB,EACzB,MAAO,iBACP,SAAU,SACV,WAAY,aACZ,GAAGA,CAAA,GAEL,4BACEC,IACiC,CACjC,SAAU,GACV,YAAa,EACb,wBAAyB,EACzB,YAAa,yBACb,KAAM,iBACN,GAAGA,CAAA,GAEL,yBAA0B,CACxBC,EAA2C,MACb,CAC9B,kBAAmB,EACnB,MAAO,4BACP,WAAY,uBACZ,SAAU,SACV,QAAS,aACT,SAAU,uBACV,YAAa,WACb,UAAW,mBACX,MAAO,CACL,WAAY,KACZ,WAAY,IACd,EACA,YAAa,EACb,wBAAyB,EACzB,GAAGA,CAAA,EAEP,EAEA,uBAAwB,CACtBC,EAA8C,MAClB,CAC5B,SAAU,EACV,SAAU,GACV,UAAW,uBACX,WAAY,EACZ,QAAS,KACT,QAAS,KACT,aAAc,EACd,GAAGA,CAAA,GAGL,gBAAiB,CAACjC,EAAiC,MAAyB,CAC1E,OAAQ,GACR,MAAO,GACP,OAAQ,KACR,YAAa,GACb,MAAO,4BACP,SAAU,oBACV,GAAI,EACJ,kBAAmB,EACnB,GAAGA,CAAA,GAGL,kBAAmB,CACjBX,EAAqC,MACd,CACvB,GAAI,uBACJ,GAAI,EACJ,KAAM,sBACN,IAAK,EACL,GAAGA,CAAA,EAEP,EC/9IM6C,GAAWC,EAAe,CAC9BC,MAAO,CACLC,GAAI,iDACJC,eAAgB,iBAFX,EAIPC,KAAM,CACJF,GAAI,gDACJC,eACE,wFAHE,EAKNE,YAAa,CACXH,GAAI,uDACJC,eAAgB,YAFL,CAViB,CAAD,EAgB/B,SAAwBG,IAAiB,CACvC,MAAMC,EAAOC,KACP,CAAE9F,KAAM+F,CAAR,EAAqBC,GAA3B,EACM,CAACC,EAAmBC,CAApB,EACJC,EAAW,gBAAD,EAENC,EAAoBrG,EAAQkC,QAAQ,CACxCuD,GAAI,EACJa,KAAMR,EAAKS,cAAcjB,GAASM,WAA5B,CAAA,CAFkB,EAKpBY,EAAgBC,EAAMC,QAAAA,QAC1B,IACE,CAACL,CAAD,EAAoBM,OAClBC,OAAOC,OAAOb,GAAY,CAAA,CAA1B,EACGc,OAAkB,CAACC,EAAK7E,KACnBA,EAAQ8E,QAAU,CAAC9E,EAAQ+E,mBAC7BF,EAAIG,KAAKhF,CAAT,EAEK6E,GACN,CAAA,CANL,EAOGI,KAAK,CAACC,EAAGC,IAAMD,EAAEd,KAAKgB,cAAcD,EAAEf,IAAvB,CAPlB,CADF,EAUF,CAACN,CAAD,CAZoB,EAehBuB,EAAsBd,EAAAA,QAAAA,QAC1B,KACGD,EAAcgB,KAAUC,GAAAA,EAAEhC,KAAOS,CAAjC,GAAuDG,GACrDC,KACL,CAACE,EAAeN,CAAhB,CAJ0B,EAOtBwB,EAAcjB,sBAAmBhB,GAAkC,CACvEU,EAAsBV,GAAAA,KAAAA,EAAM,IAA5B,CACD,EAAE,CAFiB,CAAA,EAKlB,OAAAkC,EAAC7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC0J,EAAD,CAAkB,QAASC,GAA3B,GAAoCvC,GAASE,KAAAA,CAD/C,EAEEtH,EAAC0J,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,GAASK,IAAAA,CAFhD,EAIEzH,EAAC4J,GAAD,CAAA,WACGC,GAAD,CACE,UADF,GAEE,SAAUC,GAASN,EAAYM,EAAMC,SAAP,EAC9B,kBAAA/B,EACA,eAAgBgC,OAChB,gBACGC,GAAD,CAAA,SACGZ,CAAAA,EACDrJ,EAACkK,GAAD,CAAa,MAAO,GAAI,OAAQ,EAAA,CAFlC,CAAA,CAAA,CAAA,CAAA,CANJ,CAAA,CALJ,CAAA,CAAA,CADF,CAqBD,CAED,MAAMP,GAAMzI,EAAOiJ;AAAAA;AAAAA;AAAAA,iBAGF,CAAC,CAAErK,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,EAGrCoI,GAAoB1I,EAAOC;AAAAA;AAAAA,EAI3B8I,GAAU/I,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,YAMXtB,GAASA,EAAMuK,QAAU;AAAA;AAAA;AAAA,sBAGf,CAAC,CAAEtK,MAAAA,CAAF,IAAcA,EAAMI,OAAOmK,MAAMjK;AAAAA;AAAAA,WAE7C,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA;AAAAA,EAIpC8J,GAAchJ,EAAOoJ,EAAD;AAAA;AAAA,ECzGpBlD,EAAWC,EAAe,CAC9BC,MAAO,CACLC,GAAI,+CACJC,eAAgB,8BAFX,EAIPC,KAAM,CACJF,GAAI,8CACJC,eACE,oFAHE,EAKN+C,oBAAqB,CACnBhD,GAAI,uCACJC,eAAgB,6BAFG,EAIrBgD,8BAA+B,CAC7BjD,GAAI,iDACJC,eAAgB,+BAFa,EAI/BiD,sBAAuB,CACrBlD,GAAI,yCACJC,eAAgB,iCAFK,CAlBO,CAAD,EAwBzBkD,GAAc,CAClBC,KAAM,sBACN3D,YAAa,gCACb4D,IAAK,uBAHa,EAMpB,SAAwBC,IAAe,CACrC,KAAM,CAACC,EAAoBC,CAArB,EACJ7C,EAAW,oBAAD,EAEZK,EAAAA,QAAAA,UAAgB,IAAM,CACfmC,GAAYI,IAAqBC,EAAsB,MAAD,CAAA,EAC1D,CAACD,EAAoBC,CAArB,CAFH,EAIA,MAAMC,EAAiBzC,sBAAmBhB,GAAe,CACvDwD,EAAsBxD,CAAtB,CACD,EAAE,CAFoB,CAAA,EAKrB,OAAAkC,EAAC7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC0J,EAAD,CAAkB,QAASC,GAA3B,GAAoCvC,EAASE,KAAAA,CAD/C,EAEEtH,EAAC0J,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,EAASK,IAAAA,CAFhD,EAGEgC,EAACwB,EAAD,CACE,SAAUH,EACV,YAAaE,EACb,IAAK1K;AAAAA;AAAAA,UAHP,SAOE,CAACN,EAAAiL,EAAS,QAAV,CAAA,SACG,CAAC,CAACP,GAAYI,MACZpB,MAAqBtC,EAASsD,GAAYI,GAAAA,CAA3C,CAAA,CATN,EAYE9K,EAACiL,EAAS,YACTxB,EAAAwB,EAAS,QAAV,CAAA,SACE,CAACjL,EAAAiL,EAAS,KAAV,CAAe,GAAG,OAAlB,WACGvB,EAAqBtC,CAAAA,GAAAA,EAASmD,mBAAAA,CAA/B,CAAA,CADF,EAGCvK,EAAAiL,EAAS,KAAV,CAAe,GAAG,cAAlB,WACGvB,EAAqBtC,CAAAA,GAAAA,EAASoD,6BAAAA,CAA/B,CAAA,CADF,EAGCxK,EAAAiL,EAAS,KAAV,CAAe,GAAG,MAAlB,WACGvB,EAAqBtC,CAAAA,GAAAA,EAASqD,qBAAAA,CAA/B,CAAA,CARJ,CAAA,CAAA,CAbF,CAAA,CAAA,CAHF,CAAA,CAAA,CADF,CA+BD,CAED,MAAMd,GAAMzI,EAAOiJ;AAAAA;AAAAA;AAAAA,iBAGF,CAAC,CAAErK,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,ECjFrC4F,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,mCACJC,eAAgB,mBAFV,CADsB,CAAD,EAOzB0D,GAAqB,MAEtBtK,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,GAAStG,MAAAA,CAA7C,EAAA,SAAA,CACEd,EAAC2H,GAAD,CAAA,CAAA,EACC3H,EAAA6K,GAFH,CAAA,CAAA,CAAA,CAAA,CADF,ECRIzD,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,kCACJC,eAAgB,2CAFV,EAIR2D,QAAS,CACP5D,GAAI,mCACJC,eACE,2GAHK,EAKT4D,IAAK,CACH7D,GAAI,+BACJC,eACE,+DAHC,CAVyB,CAAD,EAiBzB6D,GAED,CAAC,CAAEC,OAAAA,CAAF,MAED1K,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,GAAStG,MAAAA,CAA7C,EAAA,WACGG,GAAD,CAAA,SAAA,CACEjB,EAAC0J,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,GAAS+D,OAAAA,CADhD,EAGEnL,EAAC0J,EAAD,CACE,QAAQ,OADV,GAEMtC,GAASgE,IACb,OAAQ,CACNG,KACEC,GAAAxL,EAACyL,GAAD,CAAM,QAAS,IAAMH,EAAO,cAAD,EAA3B,SAA8CE,CAAAA,CAA9C,CAFI,CAAA,CANZ,CAAA,CAAA,CAAA,CAAA,CAFJ,EAmBIvK,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQjBsK,GAAOvK,EAAOgI;AAAAA;AAAAA;AAAAA,WAGT,CAAC,CAAEpJ,MAAAA,CAAF,IAAcA,EAAMI,OAAOwL,UAAUtL;AAAAA;AAAAA;AAAAA,aAGpC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOwL,UAAUC;AAAAA;AAAAA,ECtD7CC,EAAe,CAAC,CACpBR,IAAAA,EACAS,YAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,cAAAA,EACAC,WAAAA,EACAC,YAAAA,CAPoB,IAgBhB,CACEC,MAAAA,EAAqB5D,EAAAA,QAAAA,YAAkB,IAAM,CACjDwD,EAAS,CAACD,CAAF,EACJG,GAAYG,EAAMH,EAAY,CAAEH,MAAO,CAACA,CAAAA,CAAvB,CACpB,EAAA,CAACG,EAAYF,EAAUD,CAAvB,CAHwB,EAK3B,SACGO,GAAD,CAAe,QAASF,EAAxB,SACE,CAAAnM,EAAA,MAAA,CACE,IAAKM;AAAAA;AAAAA;AAAAA;AAAAA,UADP,WAOE,MAAA,CACE,IAAKA;AAAAA;AAAAA;AAAAA,YADP,SAAA,CAMEmJ,EAAC6C,GAAD,CAAA,SAAA,CACEtM,EAACuM,GAAD,CAAc,QAAST,CAAAA,CADzB,EAEE9L,EAACwM,GAAD,CAAc,QAASV,CAAAA,CAFzB,CAAA,CAAA,CANF,EAUErC,EAACgD,GAAD,CAAA,SAAA,CACEzM,EAAC0J,EAAD,CAAkB,QAASgD,GAA3B,GAA0CtB,CAAAA,CAD5C,EAEEpL,EAAC0J,EAAD,CAAkB,QAASiD,GAA3B,GAAkDd,CAAAA,CAFpD,CAAA,CAAA,CAAA,EAICK,CAdH,CAAA,CAAA,CAPF,CAAA,EAwBC,CAAC,CAACF,KACD,MAAA,CACE,IAAK1L;AAAAA;AAAAA,YADP,SAKG0L,CAAAA,CA/BP,CAAA,CAAA,CADF,CAqCD,EAEKK,GAAgBnL,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAevBmL,GAAepL,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOtBoL,GAAerL,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,sBAIN,CAAC,CAAEyL,QAAAA,EAAS9M,MAAAA,CAAX,IACnB8M,EAAU9M,EAAMI,OAAO2M,OAAOzM,QAAUN,EAAMI,OAAO4M,MAAM1M;AAAAA;AAAAA,WAEpD,CAAC,CAAEwM,QAAAA,CAAF,IAAiBA,EAAU,QAAU;AAAA;AAAA,EAI3CJ,GAAetL,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,sBAIN,CAAC,CAAEyL,QAAAA,EAAS9M,MAAAA,CAAX,IACnB8M,EAAU9M,EAAMI,OAAO6M,WAAW3M,QAAUN,EAAMI,OAAO8M,MAAM5M;AAAAA,EAG7DqM,GAAcvL,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMrBuL,GAAYxL,EAAO+L;AAAAA;AAAAA;AAAAA,iBAGR,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,WAChC,CAAC,CAAE1B,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,EAGpCuM,GAAoBzL,EAAO+L;AAAAA;AAAAA;AAAAA,iBAGhB,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAK2L;AAAAA,WAChC,CAAC,CAAEpN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,EC7GpCgH,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,2CACJC,eAAgB,iCAFV,EAIR2F,sBAAuB,CACrB5F,GAAI,2DACJC,eAAgB,2BAFK,EAIvB4F,8BAA+B,CAC7B7F,GAAI,mEACJC,eAAiB,qFAFY,EAI/B6F,qBAAsB,CACpB9F,GAAI,0DACJC,eAAgB,0BAFI,EAItB8F,6BAA8B,CAC5B/F,GAAI,kEACJC,eAAgB,2CAFY,EAI9B+F,gBAAiB,CACfhG,GAAI,qDACJC,eAAgB,qDAFD,EAIjBgG,wBAAyB,CACvBjG,GAAI,6DACJC,eACE,kEAHqB,EAKzBiG,kBAAmB,CACjBlG,GAAI,uDACJC,eAAgB,YAFC,CA9BW,CAAD,EAoCzBkG,GAA6B,IAAM,CACvC,KAAM,CAACC,EAAoBC,CAArB,EACJ1F,EAAW,oBAAD,EACN,CAAC2F,EAAmBC,CAApB,EACJ5F,EAAW,mBAAD,EACN,CAAC6F,EAAcC,CAAf,EAAkC9F,EAAW,cAAD,EAC5C,CAAC+F,EAAYC,CAAb,EAA8BhG,EAAW,YAAD,EACxC,CAACiG,EAAYC,CAAb,EAA8B7F,mBAAe0F,CAAf,EAEpC1F,EAAAA,QAAAA,UAAgB,IAAM,CACpB6F,EAAcH,CAAD,CAAA,EACZ,CAACA,CAAD,CAFH,EAIMI,MAAAA,EAAiC9F,sBAA2BuD,GAAA,CAChE8B,EAAsB9B,CAAD,EACrBM,EAAM,iBAAkB,CAAEkC,QAAS,QAASxC,MAAAA,CAAAA,CAAvC,CACN,EAAE,CAHoC,CAAA,EAKjCyC,EAAgChG,sBAA2BuD,GAAA,CAC/DgC,EAAqBhC,CAAD,EACpBM,EAAM,iBAAkB,CAAEkC,QAAS,OAAQxC,MAAAA,CAAAA,CAAtC,CACN,EAAE,CAHmC,CAAA,EAKhC0C,EAA2BjG,sBAA2BuD,GAAA,CAC1DkC,EAAgBlC,CAAD,EACfM,EAAM,iBAAkB,CAAEkC,QAAS,mBAAoBxC,MAAAA,CAAAA,CAAlD,EAEDA,EAAY2C,GAAsBR,CAAD,EAC3BS,GAAL,CACN,EAAE,CAN8B,CAAA,EAQ3BC,EAAoBpG,sBACvBqG,GAA4C,CAC7BA,GAAAA,GAAAA,YAAAA,EAAGC,OAAO/C,QAAS,EAApB,CACd,EACD,CAJwB,CAAA,EAOpBgD,EAAuBvG,EAAAA,QAAAA,YAAkB,IAAM,CACnD,MAAMwG,EAAiBC,GAAcb,CAAD,EAAac,UAAU,CACzDC,gBAAiB,EAAA,CADI,EAGvBhB,EAAca,CAAD,EACbX,EAAcW,CAAD,EACbN,GAAsBM,CAAD,CAAA,EACpB,CAACZ,CAAD,CAP0B,EAS7B,SACGvN,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAStG,MAAAA,CAA7C,EAAA,SACE,CAACd,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS+F,sBACd,YAAa/F,EAASgG,8BACtB,MAAOO,EACP,SAAUU,CAAAA,CAJZ,CAAA,CADF,EAQCrO,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASiG,qBACd,YAAajG,EAASkG,6BACtB,MAAOO,EACP,SAAUU,CAAAA,CAJZ,CAAA,CADF,EAQC9E,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC4L,EAAD,CACE,IAAKxE,EAASmG,gBACd,YAAanG,EAASoG,wBACtB,MAAOO,EACP,SAAUS,CAAAA,CAJZ,EAMCT,GACCtE,EAAC0F,GAAD,CAAA,SAAA,CACEnP,EAACoP,GAAD,CAAA,WACG1F,EAAqBtC,CAAAA,GAAAA,EAASqG,iBAAAA,CAA/B,CAAA,CAFJ,EAIEzN,EAACqP,GAAD,CACE,MAAOlB,EACP,SAAUQ,EACV,OAAQG,CAAAA,CAPZ,CAAA,CAAA,CARJ,CAAA,CAAA,CAjBF,CAAA,CAAA,CADF,CAwCD,EAEKK,GAAoBjO,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAU3BiO,GAAYlO,EAAO+L;AAAAA;AAAAA;AAAAA,iBAGR,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,WAChC,CAAC,CAAE1B,MAAAA,CAAF,IAAcA,EAAMI,OAAOoP,MAAMlP;AAAAA,EAGvCiP,GAAiBnO,EAAOqO,EAAD;AAAA;AAAA;AAAA,iBAGZ,CAAC,CAAEzP,MAAAA,CAAF,IAAcA,EAAMyB,KAAK2L;AAAAA;AAAAA;AAAAA,sBAGrB,CAAC,CAAEpN,MAAAA,CAAF,IAAcA,EAAMI,OAAOmK,MAAMjK;AAAAA;AAAAA,WAE7C,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,ECtJpCgH,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,oCACJC,eAAgB,8BAFV,EAIRgI,YAAa,CACXjI,GAAI,0CACJC,eAAgB,yBAFL,EAIbiI,oBAAqB,CACnBlI,GAAI,kDACJC,eACE,2EAHiB,EAKrBkI,eAAgB,CACdnI,GAAI,6CACJC,eACE,4GAHY,EAKhBmI,iBAAkB,CAChBpI,GAAI,+CACJC,eAAgB,gBAFA,EAIlBoI,yBAA0B,CACxBrI,GAAI,uDACJC,eACE,yGAHsB,CAvBI,CAAD,EA8BzBqI,GAAsB,IAAM,CAChC,KAAM,CAACC,EAAUC,CAAX,EAA0B7H,EAAW,uBAAD,EACpC,CAAC8H,EAAeC,CAAhB,EAAoC/H,EAAW,sBAAD,EAE9CgI,EAAwBpE,GAAmB,CAC1CA,GAA4BqE,KAEjCJ,EAAYjE,CAAD,EACRsE,EAAAA,IAAI,yBAA0B,EAAjC,CAAA,EAGIC,EAA6BvE,GAAmB,CACpDmE,EAAiBnE,CAAD,CAAA,EAGlB,SACGlL,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAStG,MAAAA,CAA7C,EAAA,SACE,CAAC2I,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC4L,EAAD,CACE,IAAKxE,EAASoI,YACd,YAAapI,EAASqI,oBACtB,MAAOK,EACP,SAAUI,EACV,WAAW,iBAAA,CALb,EAOCJ,GACC9P,EAACsQ,GAAD,CAAA,WACG5G,EACKtC,CAAAA,GAAAA,EAASsI,eACb,OAAQ,CACNa,OAASC,GACPxQ,EAACyQ,GAAD,CAAA,SAAgBD,CAAAA,CAFZ,EAINE,SAAU1Q,EAAC2Q,GAAD,EAAA,CAJJ,CAAA,CAFV,CAAA,CAVN,CAAA,CAAA,CAAA,EAsBC3Q,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASuI,iBACd,YAAavI,EAASwI,yBACtB,MAAOI,EACP,SAAUK,EACV,WAAW,kBAAA,CALb,CAAA,CAxBJ,CAAA,CAAA,CADF,CAmCD,EAEKI,GAED,CAAC,CAAE5P,SAAAA,CAAF,IAAiB,CACf,KAAA,CAAC,CAAC+P,EAAMC,CAAP,EAAYC,CAAb,EAA0B5I,EAAW,iBAAD,EACpC,CAAC6I,EAAUC,CAAX,EAA0BzI,mBAAe,EAAf,EAC1B,CAAC0I,EAAWC,CAAZ,EAA4B3I,EAAe4I,QAAAA,SAAAA,GAAUP,CAAD,CAAxB,EAC5B,CAACQ,EAASC,CAAV,EAAwB9I,EAAe4I,QAAAA,SAAAA,GAAUN,CAAD,CAAxB,EA0B9B,SACES,GAAA,CAAA,SAAA,CACEtR,EAACuR,GAAD,CACE,MAAOR,EACP,MAAOE,EACP,SA7BoBnF,GAAgB,CACxC,MAAM0F,EAAa1F,EAAM2F,QAAQL,CAAd,EAAyB,EAG5C,GAFAF,EAAapF,CAAD,EAER,CAAC0F,EACH,OAAOR,EAAY,EAAD,EAGpBF,EAAU,CAAChF,EAAM4F,SAAP,EAAmBb,CAAnB,CAAD,EACTG,EAAY,EAAD,CAAA,CAoBGW,CAHZ,EAKC9Q,EACDb,EAACuR,GAAD,CAAW,MAAOR,EAAU,MAAOK,EAAS,SApBxBtF,GAAgB,CACtC,MAAM8F,EAAc9F,EAAM2F,QAAQR,CAAd,EAA2B,EAG/C,GAFAI,EAAWvF,CAAD,EAEN,CAAC8F,EACH,OAAOZ,EAAY,EAAD,EAGpBF,EAAU,CAACF,EAAM9E,EAAM4F,SAAAA,CAAb,CAAD,EACTV,EAAY,EAAD,CAAA,CAW6Ca,CAPxD,CAAA,CAAA,CADF,CAWD,EAEKlB,GAA4B,IAAM,CACtC,KAAM,CAACD,EAAUoB,CAAX,EAA0B5J,EAAW,mBAAD,EACpC,CAACiG,EAAYC,CAAb,EAA8B7F,mBAAe,CAAf,EAEpCA,OAAAA,EAAAA,QAAAA,UAAgB,IAAM,CACpB6F,EAAcsC,CAAD,CAAA,EACZ,CAACA,CAAD,CAFH,IAcGrB,GAAD,CACE,KAAK,SACL,MAAOlB,EACP,SAbkES,GAAA,CACpER,EAAc2D,OAAOnD,EAAEC,OAAO/C,KAAV,CAAP,CAAA,EAaX,OAV0D,IAAM,CAClEgG,EAAY3D,CAAD,EACXC,EAAcD,CAAD,CAAA,CAQH6D,CALZ,CAQD,EAEK1B,GAAgBpP,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMvBkO,GAAiBnO,EAAOqO,EAAD;AAAA;AAAA;AAAA;AAAA,iBAIZ,CAAC,CAAEzP,MAAAA,CAAF,IAAcA,EAAMyB,KAAK2L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sBAKrB,CAAC,CAAEpN,MAAAA,CAAF,IAAcA,EAAMI,OAAOmK,MAAMjK;AAAAA;AAAAA,WAE7C,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,ECzL7B6R,GACXpD,GACG,CACH,KAAM,CAACqD,EAAWC,CAAY,EAAIC,mBAAS,EAAK,EAE1CC,EAAc,CAAC,CAACC,CAAK,IAAmC,CAC5DH,EAAaG,EAAM,cAAc,CAAA,EAGnCC,OAAAA,EAAAA,QAAAA,UAAU,IAAM,CACR,MAAAC,EAAW,IAAI,qBAAqBH,EAAa,CACrD,WAAY,MACZ,UAAW,CAAA,CACZ,EAEQ,OAAAG,EAAA,QAAQ3D,GAAA,YAAAA,EAAQ,OAA6B,EAE/C,IAAM2D,EAAS,YACxB,EAAG,CAAE,CAAA,EAEEN,CACT,ECVM9K,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,gCACJC,eAAgB,gBAFV,EAIRiL,UAAW,CACTlL,GAAI,oCACJC,eAAgB,wCAFP,EAIXkL,kBAAmB,CACjBnL,GAAI,4CACJC,eACE,gHAHe,EAKnBmL,cAAe,CACbpL,GAAI,wCACJC,eAAgB,oBAFH,EAIfoL,sBAAuB,CACrBrL,GAAI,gDACJC,eAAiB,0FAFI,EAIvBqL,WAAY,CACVtL,GAAI,qCACJC,eAAgB,0BAFN,EAIZsL,mBAAoB,CAClBvL,GAAI,6CACJC,eACE,yHAHgB,EAKpBuL,aAAc,CACZxL,GAAI,uCACJC,eAAgB,qDAFJ,EAIdwL,qBAAsB,CACpBzL,GAAI,+CACJC,eACE,sGAHkB,EAKtByL,cAAe,CACb1L,GAAI,wCACJC,eAAgB,uDAFH,EAIf0L,sBAAuB,CACrB3L,GAAI,gDACJC,eACE,mJAHmB,EAKvB2L,YAAa,CACX5L,GAAI,sCACJC,eAAgB,kBAFL,EAIb4L,oBAAqB,CACnB7L,GAAI,8CACJC,eAAgB,iDAFG,EAIrB6L,IAAK,CACH9L,GAAI,6BACJC,eAAgB,KAFb,CAzDyB,CAAD,EA+DzB8L,GAAkB,IAAM,CAC5B,MAAMxT,EAAQC,IACRwT,EAAmBhL,iBAA6B,IAA7B,EACnB,CAACiL,EAAkBC,CAAnB,EACJvL,EAAW,kBAAD,EACN,CAACwL,EAAkBC,CAAnB,EACJzL,EAAW,kBAAD,EACN,CAAC0L,EAASC,CAAV,EAAwB3L,EAAW,mBAAD,EAClC,CAAC4L,EAAWC,CAAZ,EAA4B7L,EAAW,eAAD,EACtC,CAAC8L,EAAYC,CAAb,EAA8B/L,EAAW,sBAAD,EACxC,CAACgM,EAAUC,CAAX,EAA0BjM,EAAW,UAAD,EACpC,CAACkM,EAAiBC,CAAlB,EAAqCnM,EAAW,iBAAD,EAC/C,CAACoM,EAAsBC,CAAvB,EAAkDrM,EACtD,uBACA,EAFgE,EAK5DsM,EAAuBvC,GAAwBsB,CAAD,EAEpDhL,EAAAA,QAAAA,UAAgB,IAAM,CAChBiM,GAAsBD,EAAwB,EAAD,CAAA,EAChD,CAACC,EAAsBD,CAAvB,CAFH,EAIME,MAAAA,GAAqBlM,sBAChBuD,GAAA,CACP4I,OAAOC,YAAYC,QACjB,CACED,YAAa,CAAC,MAAD,GAEJE,IAAA,CACLA,IAASlB,EAAoB7H,CAAD,CAAA,CALpC,CAAA,EASF,CAAC6H,CAAD,CAXyB,EAcrBmB,GAAyBvM,sBACpBuD,GAAA,CACHA,EACF4I,OAAOC,YAAYC,QACjB,CACEG,QAAS,CAAC,YAAD,GAEAF,IAAA,CACLA,IAASpB,EAAoB3H,CAAD,CAAA,CALpC,EASA2H,EAAoB3H,CAAD,CACpB,EAEH,CAAC2H,CAAD,CAf6B,EAkBzBuB,GAAsBzM,sBAA2BuD,GAAA,CACrD+H,EAAW/H,CAAD,CACX,EAAE,CAFyB,CAAA,EAItBmJ,GAAwB1M,sBAA2BuD,GAAA,CACvDiI,EAAajI,CAAD,CACb,EAAE,CAF2B,CAAA,EAIxBoJ,GAAyB3M,sBAA2BuD,GAAA,CACxDmI,EAAcnI,CAAD,CACd,EAAE,CAF4B,CAAA,EAIzBqJ,GAAuB5M,sBAA2BuD,GAAA,CACtDqI,EAAYrI,CAAD,EACXuI,EAAgB,EAAD,CAChB,EAAE,CAH0B,CAAA,EAK7B,SACGzT,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAStG,MAAAA,CAA7C,EAAA,SACE,CAACd,EAAAY,EAAK,QAAN,CAAc,IAAK2S,EAAnB,WACG3H,EAAD,CACE,IAAKxE,EAASqL,UACd,YAAarL,EAASsL,kBACtB,MAAOgB,EACP,SAAUe,GACV,WAAW,eACX,cACGW,GAAD,CAAA,WACGC,GAAD,CACE,KAAK,UACL,MAAOvV,EAAMI,OAAOoV,OAAOlV,QAC3B,UAAWN,EAAMI,OAAOqV,KAAKnV,QAH/B,WAKGsJ,EAAqBtC,CAAAA,GAAAA,EAASiM,GAAAA,CAA/B,CAAA,CALF,CAAA,CADF,CAAA,CAPJ,CAAA,CADF,EAoBCrT,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASuL,cACd,YAAavL,EAASwL,sBACtB,MAAOY,EACP,SAAUsB,GACV,WAAW,cACX,cACGM,GAAD,CAAA,WACGC,GAAD,CACE,KAAK,UACL,MAAOvV,EAAMI,OAAOoV,OAAOlV,QAC3B,UAAWN,EAAMI,OAAOqV,KAAKnV,QAH/B,WAKGsJ,EAAqBtC,CAAAA,GAAAA,EAASiM,GAAAA,CAA/B,CAAA,CALF,CAAA,CADF,CAAA,CAPJ,CAAA,CADF,EAoBCrT,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASyL,WACd,YAAazL,EAAS0L,mBACtB,MAAOc,EACP,SAAUoB,GACV,WAAW,kBAAA,CALb,CAAA,CADF,EASChV,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS2L,aACd,YAAa3L,EAAS4L,qBACtB,MAAOc,EACP,SAAUmB,EAAAA,CAJZ,CAAA,CADF,EAQCjV,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS6L,cACd,YAAa7L,EAAS8L,sBACtB,MAAOc,EACP,SAAUkB,EAAAA,CAJZ,CAAA,CADF,EAQClV,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS+L,YACd,YAAa/L,EAASgM,oBACtB,MAAOc,EACP,SAAUiB,EAAAA,CAJZ,CAAA,CAnEJ,CAAA,CAAA,CADF,CA6ED,EAEKC,GAAiBlU,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECzNxBiG,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,mCACJC,eAAgB,oBAFV,EAIR4D,IAAK,CACH7D,GAAI,gCACJC,eAAgB,6BAFb,EAILqE,YAAa,CACXtE,GAAI,wCACJC,eACE,qFAHS,EAKbgO,OAAQ,CACNjO,GAAI,mCACJC,eAAgB,+BAFV,CAdsB,CAAD,EAoB/B,eAAeiO,IAAmB,CAC1BC,MAAAA,GAAgBC,QAAAA,QAAAA,KAAKC,QAC3BlN,OAAOmN,KAAKC,EAAZ,EAA8BC,QAC3BC,GAAuC,CACnC5F,EAAAA,IAAI4F,EAAKF,GAAiBE,EAA7B,CAAA,CAFJ,EAKAC,OAAO7T,SAAS8T,QACjB,CAED,MAAMC,GAAqB,IAAM,CACzBC,MAAAA,EACJ7N,EAAAA,QAAAA,YAAkB,IAAM,CACF8N,QAClB,+CADyB,GAGMZ,IAClC,EAAE,CALH,CAAA,EAOF,SACG7U,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAStG,MAAAA,CAA7C,EAAA,WACGG,GAAD,CAAA,SAAA,CACEwI,EAAC6M,GAAD,CAAA,SAAA,CACEtW,EAAC0J,EAAD,CAAkB,QAASC,GAA3B,GAAoCvC,EAASgE,GAAAA,CAD/C,EAEEpL,EAAC0J,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,EAASyE,WAAAA,CAFhD,CAAA,CAAA,CADF,EAKE7L,EAACuW,GAAD,CAAc,QAASH,EAAvB,WACG1M,EAAqBtC,CAAAA,GAAAA,EAASoO,MAAAA,CAA/B,CAAA,CANJ,CAAA,CAAA,CAAA,CAAA,CAFJ,CAaD,EAEKvU,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQjBmV,GAAiBpV,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOxBwI,GAAMzI,EAAOiJ;AAAAA;AAAAA,iBAEF,CAAC,CAAErK,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,EAGrC+U,GAAerV,EAAOsV,CAAD;AAAA;AAAA;AAAA,WAGhB,CAAC,CAAE1W,MAAAA,CAAF,IAAcA,EAAMI,OAAOuW,UAAUrW;AAAAA;AAAAA,iBAEhC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA;AAAAA,ECjFrC4F,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,qCACJC,eAAgB,aAFV,EAIRqE,YAAa,CACXtE,GAAI,0CACJC,eAAiB,wCAFN,EAIbgO,OAAQ,CACNjO,GAAI,qCACJC,eAAgB,aAFV,CATsB,CAAD,EAe/B,eAAekP,IAAa,CACpBhB,MAAAA,GAAgBiB,QAAAA,QAAAA,MAAMf,OAC7B,CAED,MAAMgB,GAAuB,MAExBhW,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,GAAStG,MAAAA,CAA7C,EAAA,WACGG,GAAD,CAAA,SAAA,CACEjB,EAACsW,GAAD,CAAA,WACG5M,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,GAASyE,WAAAA,CAA9C,CAAA,CAFJ,EAIE7L,EAACuW,GAAD,CAAc,QAAS,IAAMG,GAA7B,EAAA,WACGhN,EAAqBtC,CAAAA,GAAAA,GAASoO,MAAAA,CAA/B,CAAA,CALJ,CAAA,CAAA,CAAA,CAAA,CAFJ,EAcIvU,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQjBmV,GAAiBpV,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOxBoV,GAAerV,EAAOsV,CAAD;AAAA;AAAA;AAAA,WAGhB,CAAC,CAAE1W,MAAAA,CAAF,IAAcA,EAAMI,OAAOuW,UAAUrW;AAAAA;AAAAA,iBAEhC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA;AAAAA,EC/CrC4F,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,0BACJC,eAAgB,SAFV,CADsB,CAAD,EAOzBqP,GAED,CAAC,CAAEvL,OAAAA,CAAF,MAEDvK,GAAD,CAAA,SAAA,CACEf,EAACgB,EAAD,CAAA,WACG0I,EAAqBtC,CAAAA,GAAAA,GAAStG,MAAAA,CAA/B,CAAA,CAFJ,EAIE2I,EAACxI,GAAD,CAAA,SAAA,CACEjB,EAACqL,GAAD,CAAS,OAAAC,CAAA,CADX,EAEGtL,EAAAkL,GAAD,EAAA,EACAlL,EAAC0N,GAHH,CAAA,CAAA,IAIGmC,OACA7P,EAAAsT,GAAD,EAAA,EACCtT,EAAA4W,GANH,CAAA,CAAA,EAOE5W,EAACmW,GAPH,CAAA,CAAA,CAAA,CAAA,CAJF,CAAA,CAAA,CADF,EAoBIpV,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMdF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECjDV2V,GAAa,MAEtB,MAAA,CACE,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BALR,WAOE,OAAA,CACE,SAAS,UACT,SAAS,UACT,EAAE,4ZACF,KAAK,SAAA,CAJP,CAAA,CARJ,ECcI1P,EAAWC,EAAe,CAC9B0P,uBAAwB,CACtBxP,GAAI,mCACJC,eAAgB,cAFM,EAIxBwP,qBAAsB,CACpBzP,GAAI,6CACJC,eACE,qIAHkB,EAKtByP,gBAAiB,CACf1P,GAAI,wCACJC,eAAgB,YAFD,EAIjB0P,iBAAkB,CAChB3P,GAAI,yCACJC,eAAgB,aAFA,CAdY,CAAD,EAoB/B,SAAwB2P,IAAmB,CACzC,MAAMrX,EAAQC,IACR,CAACqX,EAAQC,CAAT,EAAsB9O,mBAAe,EAAf,EACtB+O,EAAuB/O,EAAAA,QAAAA,QAC3B,IACEG,OAAO6O,QAAQC,CAAf,EAA6BJ,OAAO,CAAC,CAACpB,EAAK1D,CAAN,IAClC,GAAEA,EAAMlK,UAAU4N,IAAMyB,cAAcC,SAASN,CAAhD,CADF,EAGF,CAACA,CAAD,CAL2B,EAQvB,CAACO,EAAsBC,CAAvB,EAAkD1P,EACtD,eACA,EAFgE,EAK5D2P,EAAuB7B,GAAgB,CAC3C,MAAM8B,EAAa,CAAE/C,QAAS,CAAE,SAAQiB,IAAV,CAAA,EAE1B2B,EAAqB3B,GAClBN,EAAQf,YAAYoD,OAAOD,CAA3B,EAAuCE,KAAK,IAC/CJ,EAAwB,CACtB,GAAGD,EACH,CAAC3B,GAAM,CAAC2B,EAAqB3B,EAFR,CAAA,CADpB,EAOAN,EAAQf,YAAYC,QAAQkD,CAA5B,EAAwCE,KAAiBC,GAAA,CACxD,CAACA,GAEmBL,EAAA,CACtB,GAAGD,EACH,CAAC3B,GAAM,CAAC2B,EAAqB3B,EAAAA,CAFR,CAAA,CAHpB,CAQN,EAGGkC,EAAcC,GAAoB,CAClCA,GACGzC,EAAQf,YAAYyD,OAASJ,EAAAA,KAAoBrD,GAAA,OAChDA,IAAAA,EAAAA,EAAYI,UAAZJ,MAAAA,EAAqB+C,SAAS,cACzBW,OAAAA,EAAGjI,IACR,eACA1H,OAAOmN,KAAK2B,CAAZ,EAA0B5O,OAAO,CAACC,EAAKmN,KACrCnN,EAAImN,GAAO,GACJnN,GACN,CAAA,CAHH,CAFK,CAAA,CAFN,EAWA6M,EAAQf,YAAYC,QAAQ,CAAEG,QAAS,CAAC,YAAD,CAAA,CAAvC,EACL3I,EAAM,sBAAuB,CAAEkC,QAAS,gBAAA,CAAnC,GAEAoH,EAAQf,YAAYoD,OAAO,CAAEhD,QAAS,CAAC,YAAD,CAAtC,CAAA,EAAwDiD,KAAK,IAChEJ,EACElP,OAAOmN,KAAK2B,CAAZ,EAA0B5O,OAAO,CAACC,EAAKmN,KACrCnN,EAAImN,GAAOmC,EACJtP,GACN,CAAA,CAHH,CADqB,CADpB,CAQN,EAGH,SACGjI,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAS2P,sBAAAA,CAA7C,EAAA,SACGtN,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC0J,EAAqBtC,CAAAA,GAAAA,EAAS4P,oBAAAA,CADjC,EAGEhX,EAACsY,GAAD,CAAA,WACGC,GAAD,CAAA,SACE,CAAA9O,EAAA,MAAA,CACE,IAAKnJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBADP,SAAA,CAaGN,EAAA8W,GAbH,CAAA,CAAA,IAcG0B,EAAD,CACE,IAAKlY;AAAAA,sCACiBR,EAAMI,OAAOmK,MAAMjK;AAAAA;AAAAA;AAAAA,kBAIzC,MAAOgX,EACP,YAAY,sBACZ,SAAUxI,GAAKyI,EAAUzI,EAAEC,OAAO/C,KAAV,CAAA,CAtB5B,CAAA,CAAA,CAAA,EA0BCwL,EAAqBmB,IACpB,CAAC,CAACzC,EAAK1D,CAAN,IACC7I,EAACiP,GAAD,CAAU,QAAS,IAAMb,EAAoB7B,CAAD,EAA5C,SAAA,CACEhW,EAAC2Y,GAAD,CAAU,QAAShB,EAAqB3B,EAAAA,CAAxC,EACAhW,EAAA,OAAA,CACE,IAAKM;AAAAA;AAAAA;AAAAA;AAAAA,sBADP,SAMG,GAAEgS,EAAMlK,UAAU4N,GAAAA,CARvB,CAAA,CAAA,EAAwDA,CAAxD,CAFH,CA3BH,CAAA,CAAA,CAAA,CAJJ,EAgDEvM,EAACmP,GAAD,CAAA,SAAA,CACE5Y,EAACwW,EAAD,CAAQ,QAAS,IAAM0B,EAAW,EAAD,EAAjC,WACGxO,EAAqBtC,CAAAA,GAAAA,EAAS6P,eAAAA,CAA/B,CAAA,CAFJ,EAIEjX,EAACwW,EAAD,CACE,QAAS,IAAM0B,EAAW,EAAD,EACzB,WAAW,iCAFb,WAIGxO,EAAqBtC,CAAAA,GAAAA,EAAS8P,gBAAAA,CAA/B,CAAA,CARJ,CAAA,CAAA,CAhDF,CAAA,CAAA,CAAA,CAAA,CAFJ,CAgED,CAED,MAAMoB,GAAgBpX,EAAOC;AAAAA,mBACV,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAM+Y;AAAAA;AAAAA;AAAAA,sBAGlB,CAAC,CAAE/Y,MAAAA,CAAF,IAAcA,EAAMI,OAAOmK,MAAMjK;AAAAA,EAGlDmY,GAAOrX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBAOJ,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOkB,gBAAgBhB;AAAAA,EAGtDsY,GAAWxX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,wBAUA,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAO4Y,kBAAkBnN;AAAAA;AAAAA,EAIhEiN,GAAgB1X,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECzLvBiG,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,0CACJC,eAAgB,8BAFV,EAIR4D,IAAK,CACH7D,GAAI,uCACJC,eACE,6LAHC,EAKLgO,OAAQ,CACNjO,GAAI,0CACJC,eAAgB,KAFV,EAIRuR,OAAQ,CACNxR,GAAI,0CACJC,eAAgB,QAFV,CAdsB,CAAD,EAoBzBwR,GAAmBtQ,OAAOmN,KAAK2B,CAAZ,EAA0B,GAE7CyB,GAAuB,IAAM,SAC3BC,MAAAA,EAAkB3Q,iBAA6B,IAA7B,EAClB,CAAC4Q,EAAcC,CAAf,EAAkClR,EAAW,oBAAD,EAC5C,CAACmR,EAAQC,CAAT,EAAsB/Q,mBAAe,EAAf,EACtB,CAACgR,EAAqBC,CAAtB,EACJjR,mBAAeyQ,EAAf,EAEIS,EAAqBlR,EAAAA,QAAAA,YACxBqG,GAA2C0K,EAAU1K,EAAEC,OAAO/C,KAAV,EACrD,CAACwN,CAAD,CAFyB,EAKrBI,EAAiBnR,EAAAA,QAAAA,YAAkB,IAAM,CACzC8Q,GAAAA,EAAOM,SAAW,GAAI,OAE1B,MAAM7B,EAAa,CAAE/C,QAAS,CAAE,SAAQsE,IAAV,CAAA,EAEzB3D,EAAQf,YAAYC,QAAQkD,CAA5B,EAAwCE,KAAiBC,GAAA,CACxD,CAACA,IAEWmB,EAAA,CACd,GAAGD,EACH,CAACE,GAAS7B,EAAa+B,EAAAA,CAFV,EAKfD,EAAU,EAAD,EACTE,EAAuBR,EAAD,EAAA,CATnB,GAWJ,CAACK,EAAQF,EAAcI,EAAqBH,CAA5C,CAhBoB,EAkBjBQ,EAAoBrR,sBACvByN,GAAgB,CACf,MAAM8B,EAAa,CAAE/C,QAAS,CAAE,SAAQiB,IAAV,CAAA,EAEzBN,EAAQf,YAAYoD,OAAOD,CAA3B,EAAuCE,KAAK,IAAM,CAC/C,KAAA,EAAGhC,GAAM6D,KAAMC,CAASX,EAAAA,EAC9BC,EAAgBU,CAAD,CAAA,CAFZ,CAAA,EAKP,CAACX,EAAcC,CAAf,CATwB,EAY1B,SACGxY,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,GAAStG,MAAAA,CAA7C,EAAA,SACG2I,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC0J,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,GAASgE,GAAAA,CADhD,EAEEpL,EAACuY,GAAD,CAAA,SACG7P,OAAO6O,QAAQ4B,CAAf,EAA6BV,IAAI,CAAC,CAACzR,EAAa,CAAEoB,KAAAA,CAAAA,CAAhB,IACjCqB,EAACiP,GAAD,CAAA,SACE,CAAAjP,EAAA,OAAA,CAAA,SAAA,CACEzJ,EAAC+Z,GAAD,CAAA,SAAc/S,CADhB,CAAA,EAEI,MAAKoB,GAFT,CAAA,CADF,EAKEpI,EAACga,GAAD,CAAc,QAAS,IAAMJ,EAAkB5S,CAAD,EAA9C,WACG0C,EAAqBtC,CAAAA,GAAAA,GAAS2R,MAAAA,CAA/B,CAAA,CANJ,CAAA,CAAA,EAAe/R,CAAf,CADD,CAAA,CAHL,EAeEyC,EAACwQ,GAAD,CAAW,IAAKf,EAAhB,SAAA,CACElZ,EAACka,GAAD,CAAiB,MAAOb,EAAQ,SAAUI,CAAAA,CAD5C,EAGEhQ,EAACwB,EAAD,CACE,aAAsBkP,GAAA,OAChBA,KAAMjB,EAAAA,EAAgBkB,UAAhBlB,MAAAA,EAAyBmB,iBACpC,EACD,YAAmB9S,GAAA,CACjBiS,EAAuBjS,CAAD,CACvB,EACD,IAAKjH;AAAAA;AAAAA,cAPP,SAWE,CAACN,EAAAiL,EAAS,QAAV,CAAkB,OAAQ,GAA1B,WACGuM,EAAAA,EAAa+B,KAAb/B,YAAAA,EAAmCpP,SAClCoP,EAAAA,EAAawB,MAAbxB,YAAAA,EAAgCpP,KAAAA,CAbtC,EAeEpI,EAACiL,EAAS,YACTjL,EAAAiL,EAAS,QAAV,CAAA,SACGvC,OAAO6O,QAAQC,CAAf,EAA6BiB,IAAI,CAAC,CAACzR,EAAasL,CAAd,IACjCtS,EAACiL,EAAS,KAAV,CAAiC,GAAIjE,EAArC,SACGsL,GAAAA,YAAAA,EAAOlK,IADV,EAAoBpB,CAApB,CADD,CAAA,CAjBL,CAAA,CAAA,CAHF,CAAA,CAAA,CAfF,EA2CEhH,EAACuW,GAAD,CAAc,QAASmD,EAAvB,WACGhQ,EAAqBtC,CAAAA,GAAAA,GAASoO,MAAAA,CAA/B,CAAA,CA5CJ,CAAA,CAAA,CAAA,CAAA,CAFJ,CAmDD,EAEK+C,GAAOrX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBAOJ,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOkB,gBAAgBhB;AAAAA,sBACtC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOmK,MAAMjK;AAAAA;AAAAA,EAIlDsY,GAAWxX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EASlB4Y,GAAc7Y,EAAO+L;AAAAA,iBACV,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAK+Y;AAAAA,EAGrCN,GAAe9Y,EAAO+L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAMX,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,WAChC,CAAC,CAAE1B,MAAAA,CAAF,IAAcA,EAAMI,OAAOuW,UAAUrW;AAAAA;AAAAA,EAI3C6Z,GAAY/Y,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMnB+Y,GAAkBhZ,EAAOsX,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxBjC,GAAerV,EAAOsV,CAAD;AAAA;AAAA,ECpL3B,IAAe+D,GAAA,mBCQf,MAAMnT,GAAWC,EAAe,CAC9BC,MAAO,CACLC,GAAI,kCACJC,eAAgB,UAFX,EAIPqE,YAAa,CACXtE,GAAI,wCACJC,eAAiB;AAAA,uFAFN,EAKbgT,UAAW,CACTjT,GAAI,sCACJC,eAAgB,iBAFP,CAVmB,CAAD,EAgBlBiT,GAEC5a,GAAA,CACZ,MAAMC,EAAQC,IACR2a,EAAqBzE,OAAO0E,WAAW,8BAAlB,EACxBC,QACC,OACA,QACE,CAAC1G,CAAD,EAAahM,EAAW,UAAD,EACvB,CAACkM,CAAD,EAAoBlM,EAAW,iBAAD,EAQpC,SACGnH,GAAD,CAAM,UAPoBqT,EACxBF,EACE,OACA,QACFwG,KAGsC,OAAxC,SAAA,CACE1a,EAAC6a,GAAD,CAAoB,QAAShb,EAAMib,QAAnC,WACGC,GAAD,CAAW,MAAOjb,EAAMI,OAAO4M,MAAM1M,OAAAA,CAArC,CAAA,CADF,EAGAqJ,EAAA,MAAA,CAAA,SAAA,CACEzJ,EAACgb,GAAD,CAAA,WACGtR,EAAqBtC,CAAAA,GAAAA,GAASE,KAAAA,CAA/B,CAAA,CAFJ,EAIEmC,EAACwR,GAAD,CAAA,SAAA,CACEjb,EAACkb,GAAD,CAAA,WACGxR,EACKtC,CAAAA,GAAAA,GAASyE,YACb,OAAQ,CAAEsP,GAAInb,EAAA,KAAA,EAAA,CAAN,CAAA,CAFV,CAAA,CAFJ,EAOEA,EAACkb,GAAD,CAAA,WACE,SAAA,CAAA,WACGxR,EAAqBtC,CAAAA,GAAAA,GAASoT,SAAAA,CAA/B,CAAA,CADF,CAAA,CARJ,CAAA,CAAA,CAJF,CAAA,CAAA,CAAA,EAkBAxa,EAAA,MAAA,CAAA,WACE,MAAA,CAAK,IAAKob,GAAS,IAAI,EAAA,CAAvB,CAAA,CAvBJ,CAAA,CAAA,CADF,CA4BD,EAEKra,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,WAIT,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,sBACpB,CAAC,CAAEN,MAAAA,EAAOoU,SAAAA,CAAT,IACnBA,EACIpU,EAAMI,OAAOkB,gBAAgBhB,QAC7BN,EAAMI,OAAOC,WAAWC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAU1B4a,GAAQ9Z,EAAOma;AAAAA;AAAAA;AAAAA;AAAAA,EAMfJ,GAAwB/Z,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQ/B+Z,GAAcha,EAAO+L;AAAAA;AAAAA;AAAAA;AAAAA,EAMrB4N,GAAqB3Z,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECjG5BiG,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,6CACJC,eAAgB,iCAFV,EAIR4D,IAAK,CACH7D,GAAI,0CACJC,eACE,uEAHC,EAKLgO,OAAQ,CACNjO,GAAI,6CACJC,eAAgB,KAFV,EAIRuR,OAAQ,CACNxR,GAAI,6CACJC,eAAgB,QAFV,CAdsB,CAAD,EAoBzB8T,GAA8B,IAAM,CAClCpC,MAAAA,EAAkB3Q,iBAA6B,IAA7B,EAClB,CAACgT,EAAeC,CAAhB,EAAoCtT,EAAW,eAAD,EAC9C,CAACmR,EAAQC,CAAT,EAAsB/Q,mBAAe,EAAf,EACtB,CAACkT,EAAYC,CAAb,EAA8BnT,mBAAe,EAAf,EAE9BkR,EAAqBlR,EAAAA,QAAAA,YACxBqG,GAA2C0K,EAAU1K,EAAEC,OAAO/C,KAAV,EACrD,CAACwN,CAAD,CAFyB,EAKrBqC,EAAyBpT,EAAAA,QAAAA,YAC5BqG,GAA2C8M,EAAc9M,EAAEC,OAAO/C,KAAV,EACzD,CAAC4P,CAAD,CAF6B,EAKzBhC,EAAiBnR,EAAAA,QAAAA,YAAkB,IAAM,CAEzC,GADA8Q,EAAOM,SAAW,IAClB,CAACha,GAAc8b,GACjB,OAGF,MAAM3D,EAAa,CAAE/C,QAAS,CAAE,SAAQsE,IAAV,CAAA,EAEzB3D,EAAQf,YAAYC,QAAQkD,CAA5B,EAAwCE,KAAiBC,GAAA,CACxD,CAACA,IAEYuD,EAAA,CACf,GAAGD,EACH,CAAClC,GAAS1Z,GAAc8b,EAAAA,CAFV,EAKhBnC,EAAU,EAAD,EACToC,EAAc,EAAD,EAAA,CATV,GAWJ,CAACrC,EAAQmC,EAAkBD,EAAeE,CAA1C,CAnBoB,EAqBjB7B,EAAoBrR,sBACvByN,GAAgB,CACT,KAAA,EAAGA,GAAM6D,KAAMC,CAASyB,EAAAA,EAC9BC,EAAiB1B,CAAD,CAAA,EAElB,CAACyB,EAAeC,CAAhB,CALwB,EAQ1B,SACG5a,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,GAAStG,MAAAA,CAA7C,EAAA,SACG2I,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACEZ,EAAC0J,EAAD,CAAkB,QAAQ,OAA1B,GAAqCtC,GAASgE,GAAAA,CADhD,EAEEpL,EAACuY,GAAD,CAAA,SACG7P,OAAO6O,QAAQgE,CAAf,EAA8B9C,IAAI,CAAC,CAACzR,EAAa,CAAEoB,KAAAA,CAAAA,CAAhB,IAClCqB,EAACiP,GAAD,CAAA,SACE,CAAAjP,EAAA,OAAA,CAAA,SAAA,CACEzJ,EAAC+Z,GAAD,CAAA,SAAc/S,CADhB,CAAA,EAEI,MAAKoB,GAFT,CAAA,CADF,EAKEpI,EAACga,GAAD,CAAc,QAAS,IAAMJ,EAAkB5S,CAAD,EAA9C,WACG0C,EAAqBtC,CAAAA,GAAAA,GAAS2R,MAAAA,CAA/B,CAAA,CANJ,CAAA,CAAA,EAAe/R,CAAf,CADD,CAAA,CAHL,EAeEyC,EAACwQ,GAAD,CAAW,IAAKf,EAAhB,SAAA,CACElZ,EAACka,GAAD,CACE,YAAY,SACZ,MAAOb,EACP,SAAUI,CAAAA,CAJd,EAOEzZ,EAACka,GAAD,CACE,YAAY,cACZ,MAAOuB,EACP,SAAUE,CAAAA,CAVd,CAAA,CAAA,CAfF,EA4BE3b,EAACuW,GAAD,CAAc,QAASmD,EAAvB,WACGhQ,EAAqBtC,CAAAA,GAAAA,GAASoO,MAAAA,CAA/B,CAAA,CA7BJ,CAAA,CAAA,CAAA,CAAA,CAFJ,CAoCD,EAEK+C,GAAOrX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBAOJ,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOkB,gBAAgBhB;AAAAA,sBACtC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOmK,MAAMjK;AAAAA;AAAAA,EAIlDsY,GAAWxX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EASlB4Y,GAAc7Y,EAAO+L;AAAAA,iBACV,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAK+Y;AAAAA,EAGrCN,GAAe9Y,EAAO+L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAMX,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,WAChC,CAAC,CAAE1B,MAAAA,CAAF,IAAcA,EAAMI,OAAOuW,UAAUrW;AAAAA;AAAAA,EAI3C6Z,GAAY/Y,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMnB+Y,GAAkBhZ,EAAOsX,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxBjC,GAAerV,EAAOsV,CAAD;AAAA;AAAA,ECxJrBpP,GAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,+BACJC,eAAgB,cAFV,CADsB,CAAD,EAOzBqP,GAAwB,IAAM,CAClC,KAAM,CAAC+E,EAAmBC,EAA2BC,CAA/C,EACJ5T,EAAW,mBAAD,EAEZ,SACGnH,GAAD,CAAA,SAAA,CACEf,EAACgB,EAAD,CAAA,WACG0I,EAAqBtC,CAAAA,GAAAA,GAAStG,MAAAA,CAA/B,CADF,CAAA,EAGCgb,GAAU,CAACF,KACTnB,GAAD,CAAkB,QAAS,IAAMoB,EAA0B,EAAD,CAAA,CAL9D,EAOEpS,EAACxI,GAAD,CAAA,SACE,CAAAjB,EAAC+b,GAAD,CAAA,CAAA,EACA/b,EAACiZ,GAFH,CAAA,CAAA,EAGEjZ,EAACL,GAHH,CAAA,CAAA,CAAA,CAAA,CAPF,CAAA,CAAA,CADF,CAeD,EAIKoB,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMdF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECtCjBiG,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,4BACJC,eAAgB,WAFV,EAIRwU,UAAW,CACTzU,GAAI,+BACJC,eAAgB,WAFP,EAIXyU,uBAAwB,CACtB1U,GAAI,6CACJC,eAAgB,uBAFM,EAIxB0U,+BAAgC,CAC9B3U,GAAI,qDACJC,eACE,0FAH4B,EAKhC2U,oBAAqB,CACnB5U,GAAI,0CACJC,eAAgB,oBAFG,EAIrB4U,4BAA6B,CAC3B7U,GAAI,kDACJC,eACE,+EAHyB,CAtBC,CAAD,EA6BzB6U,GAAsB,IAAM,CAChC,KAAM,CAACC,EAAqBC,CAAtB,EAAgDrU,EACpD,qBAD8D,EAG1D,CAACsU,EAAkBC,CAAnB,EACJvU,EAAW,kBAAD,EAENwU,EAAkCnU,sBAA2BuD,GAAA,CACjEyQ,EAAuBzQ,CAAD,CACvB,EAAE,CAFqC,CAAA,EAIlC6Q,EAA+BpU,sBAA2BuD,GAAA,CAC9D2Q,EAAoB3Q,CAAD,CACpB,EAAE,CAFkC,CAAA,EAIrC,SACG/K,GAAD,CAAA,SAAA,CACEf,EAACgB,EAAD,CAAA,WACG0I,EAAqBtC,CAAAA,GAAAA,EAAStG,MAAAA,CAA/B,CAAA,CAFJ,EAIEd,EAACiB,GAAD,CAAA,WACGL,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAS4U,SAAAA,CAA7C,EAAA,SACE,CAAChc,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS6U,uBACd,YAAa7U,EAAS8U,+BACtB,MAAOI,EACP,SAAUI,CAAAA,CAJZ,CAAA,CADF,EAQC1c,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS+U,oBACd,YAAa/U,EAASgV,4BACtB,MAAOI,EACP,SAAUG,CAAAA,CAJZ,CAAA,CAVJ,CAAA,CAAA,CAAA,CAAA,CALJ,CAAA,CAAA,CADF,CA2BD,EAIK5b,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMdF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECjFjBiG,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,4BACJC,eAAgB,YAFV,EAIRwU,UAAW,CACTzU,GAAI,+BACJC,eAAgB,kBAFP,EAIXoV,QAAS,CACPrV,GAAI,8BACJC,eAAgB,oBAFT,EAITqV,gBAAiB,CACftV,GAAI,sCACJC,eAAiB,uCAFF,EAIjBsV,QAAS,CACPvV,GAAI,8BACJC,eAAgB,WAFT,EAITuV,gBAAiB,CACfxV,GAAI,sCACJC,eACE,8FAHa,EAKjBwV,WAAY,CACVzV,GAAI,iCACJC,eAAgB,iBAFN,EAIZyV,UAAW,CACT1V,GAAI,gCACJC,eAAgB,SAFP,EAIX0V,kBAAmB,CACjB3V,GAAI,wCACJC,eAAgB,0CAFC,EAInB2V,aAAc,CACZ5V,GAAI,mCACJC,eAAgB,SAFJ,CAtCgB,CAAD,EA4CzB4V,GAAsB,IAAM,CAC1B,KAAA,CAAErb,KAAMI,CAAR,EAAwBkb,GAA9B,EAEMC,EAAkB/U,EAAAA,QAAAA,YAAkB,IAAM,CAClCgV,GAAA,CAAEC,KAAM,WAAYC,QAAS,IAAA,CAA9B,CACZ,EAAE,CAFqB,CAAA,EAIlBC,EAAoBnV,EAAAA,QAAAA,YAAkB,IAAM,CACpCgV,GAAA,CAAEC,KAAM,SAAUC,QAAS,IAAA,CAA5B,CACZ,EAAE,CAFuB,CAAA,EAI1B,SACG1c,GAAD,CAAA,SAAA,CACEf,EAAC0J,EAAD,CAAkB,QAAS1I,EAA3B,GAAuCoG,EAAStG,MAAAA,CADlD,EAEEd,EAACiB,GAAD,CAAA,WACGL,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAS4U,SAAAA,CAA7C,EAAA,SACE,CAAChc,EAAAY,EAAK,QAAN,CAAA,WACG+c,GAAD,CAAA,SAAA,CACE3d,EAAC0J,EAAD,CAAkB,QAASC,GAA3B,GAAoCvC,EAASwV,OAAAA,CAD/C,EAEE5c,EAAC0J,EAAD,CACE,QAASwR,GADX,GAEM9T,EAASyV,gBACb,OAAQ,CAAEe,MAAOzb,GAAAA,YAAAA,EAAayb,KAAtB,CAAA,CALZ,CAAA,CAAA,CAAA,CAAA,CADF,EAUCnU,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACE6I,EAACkU,GAAD,CAAA,SAAA,CACE3d,EAAC0J,EAAD,CAAkB,QAASC,GAA3B,GAAoCvC,EAAS0V,OAAAA,CAD/C,EAEE9c,EAAC0J,EAAD,CACE,QAASwR,GADX,GAEM9T,EAAS2V,eAAAA,CAJjB,CAAA,CAAA,CADF,EAQE/c,EAACuW,GAAD,CAAc,QAAS+G,EAAvB,WACG5T,EAAqBtC,CAAAA,GAAAA,EAAS4V,UAAAA,CAA/B,CAAA,CATJ,CAAA,CAAA,CAAA,EAYCvT,EAAA7I,EAAK,QAAN,CAAA,SAAA,CACE6I,EAACkU,GAAD,CAAA,SAAA,CACE3d,EAAC0J,EAAD,CAAkB,QAASC,GAA3B,GAAoCvC,EAAS6V,SAAAA,CAD/C,EAEEjd,EAAC0J,EAAD,CACE,QAASwR,GADX,GAEM9T,EAAS8V,iBAAAA,CAJjB,CAAA,CAAA,CADF,EAQEld,EAAC6d,GAAD,CAAc,QAASH,EAAvB,WACGhU,EAAqBtC,CAAAA,GAAAA,EAAS+V,YAAAA,CAA/B,CAAA,CATJ,CAAA,CAAA,CAvBF,CAAA,CAAA,CAAA,CAAA,CAHJ,CAAA,CAAA,CADF,CA2CD,EAIKpc,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMdF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQjBwc,GAAUzc,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMjBwI,GAAMzI,EAAO+L;AAAAA;AAAAA,iBAEF,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,WAChC,CAAC,CAAE1B,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,EAGpC8a,GAAcha,EAAO+L;AAAAA;AAAAA;AAAAA,iBAGV,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMyB,KAAK2L;AAAAA,WAChC,CAAC,CAAEpN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,EAGpCmW,GAAerV,EAAOsV,CAAD;AAAA;AAAA;AAAA;AAAA,iBAIV,CAAC,CAAE1W,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,EAGrCqc,GAAe3c,EAAOqV,EAAD;AAAA,WAChB,CAAC,CAAEzW,MAAAA,CAAF,IAAcA,EAAMI,OAAOuW,UAAUrW;AAAAA,EC5I3CgH,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,2BACJC,eAAgB,UAFV,EAIRwU,UAAW,CACTzU,GAAI,8BACJC,eAAgB,mBAFP,EAIXsW,qBAAsB,CACpBvW,GAAI,yCACJC,eACE,uHAHkB,EAKtBuW,sBAAuB,CACrBxW,GAAI,0CACJC,eACE,4GAHmB,EAKvBwW,wBAAyB,CACvBzW,GAAI,4CACJC,eAAgB,mBAFO,EAIzByW,eAAgB,CACd1W,GAAI,mCACJC,eAAgB,iBAFF,EAIhB0W,0BAA2B,CACzB3W,GAAI,8CACJC,eACE,2IAHuB,EAK3B2W,aAAc,CACZ5W,GAAI,iCACJC,eAAgB,oCAFJ,EAId4W,UAAW,CACT7W,GAAI,8BACJC,eAAgB,+BAFP,EAIX6W,qBAAsB,CACpB9W,GAAI,yCACJC,eACE,0EAHkB,EAKtB8W,UAAW,CACT/W,GAAI,8BACJC,eAAgB,YAFP,EAIX+W,qBAAsB,CACpBhX,GAAI,yCACJC,eACE,6FAHkB,EAKtBgX,kBAAmB,CACjBjX,GAAI,sCACJC,eAAgB,uCAFC,EAInBiX,6BAA8B,CAC5BlX,GAAI,iDACJC,eACE,+DAH0B,EAK9BkX,UAAW,CACTnX,GAAI,8BACJC,eAAgB,YAFP,EAIXmX,aAAc,CACZpX,GAAI,iCACJC,eAAgB,sCAFJ,EAIdoX,wBAAyB,CACvBrX,GAAI,4CACJC,eACE,kEAHqB,EAKzBqX,WAAY,CACVtX,GAAI,+BACJC,eAAgB,MAFN,EAIZsX,WAAY,CACVvX,GAAI,+BACJC,eAAgB,MAFN,CAhFkB,CAAD,EAsFzBuX,GAAqB,IAAM,CAC/B,KAAM,CAACC,EAAiBC,CAAlB,EAAwC/W,EAC5C,qBADsD,EAGlD,CAACgX,EAAkBC,CAAnB,EACJjX,EAAW,kBAAD,EACN,CAACkX,EAAgBC,CAAjB,EAAsCnX,EAC1C,uCADoD,EAGhD,CAACoW,EAAWgB,CAAZ,EAA4BpX,EAAW,mBAAD,EACtC,CAACsW,EAAmBe,CAApB,EAA4CrX,EAChD,sBAD0D,EAGtD,CAACsX,EAAoBC,CAArB,EAA8CvX,EAClD,qBAD4D,EAGtBA,EAAW,uBAAD,EAClD,KAAM,CAACwX,EAAeC,CAAhB,EAAoCzX,EAAW,sBAAD,EAC9C,CAAC0X,EAAgBC,CAAjB,EAAsCtX,mBAAe,EAAf,EAEtCuX,EAAYvX,EAAAA,QAAAA,QAChB,IAAM,IAAIwX,MAAMrK,EAAQsK,QAAQC,OAAO,sBAAvB,CAAV,EACN,CAFgB,CAAA,EAKZC,EAAgB,IAAM,CAC1B,MAAMC,EAAQ,IAAIJ,MAAMrK,EAAQsK,QAAQC,OAAO,yBAAvB,CAAV,EACdE,EAAMC,OAASZ,EACVW,EAAME,MAAX,EAGoB9X,OAAAA,EAAAA,QAAAA,YAAkB,IAAM,CAC5CuX,EAAUM,OAASV,EACnBI,EAAUQ,KAAO,GAEjBR,EAAUS,OAAST,EAAUO,KAAV,EAAmBP,EAAUU,QAChDX,EAAkB,CAACD,CAAF,CAChB,EAAA,CAACE,EAAWF,EAAgBF,CAA5B,CANmB,IASnB3e,GAAD,CAAA,SAAA,CACEf,EAACgB,EAAD,CAAA,WACG0I,EAAqBtC,CAAAA,GAAAA,EAAStG,MAAAA,CAA/B,CAAA,CAFJ,EAIE2I,EAACxI,GAAD,CAAA,SAAA,CACEjB,EAACY,EAAD,CAAM,SAAS8I,EAAD,CAAA,GAAsBtC,EAAS4U,SAAAA,CAA7C,EAAA,SACGvS,EAAA7I,EAAK,QAAN,CACE,IAAKN;AAAAA;AAAAA;AAAAA;AAAAA,cADP,SAOE,CAAAN,EAAA,MAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAAS0W,oBAAAA,CAA/B,CAAA,CADF,EAGA9d,EAAA,MAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAAS2W,qBAAAA,CAA/B,CAAA,CAXJ,CAAA,CAAA,CAAA,CAAA,CAFJ,EAiBEtU,EAAC7I,EAAD,CACE,SAAS8I,EAAD,CAAA,GAAsBtC,EAAS4W,uBAAAA,CADzC,EAAA,SAGE,CAAChe,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAAS6W,eACd,YAAa7W,EAAS8W,0BACtB,SAAUe,EACV,MAAOD,EACP,cACEA,GACEhf,EAAA,MAAA,CACE,QAAc4O,GAAA,CACZA,EAAE6R,eAAF,EACA7R,EAAE8R,gBAAF,CACD,EAJH,WAMGC,GAAD,CAAA,SAAA,CACE3gB,EAAC0J,EAAqBtC,CAAAA,GAAAA,EAAS+W,YAAAA,CADjC,EAEEne,EAACwY,EAAD,CACE,KAAK,SACL,IAAKlY;AAAAA;AAAAA;AAAAA,0BAIL,MAAO4e,EACP,SACEC,GAAAA,EAAoBpN,OAAOnD,EAAEC,OAAO/C,KAAV,CAAP,CAAA,CAVzB,CAAA,CAAA,CAAA,CAAA,CAbR,EA8BE,WAAW,iBAAA,CA9Bb,CAAA,CADF,EAkCC9L,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASgX,UACd,YAAahX,EAASiX,qBACtB,SAAUgB,EACV,MAAOD,CAAAA,CAJT,CAAA,CADF,EAQCpf,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASkX,UACd,YAAalX,EAASmX,qBACtB,SAAUe,EACV,MAAOhB,CAAAA,CAJT,CAAA,CADF,EAQCte,EAAAY,EAAK,QAAN,CAAA,WACGgL,EAAD,CACE,IAAKxE,EAASoX,kBACd,YAAapX,EAASqX,6BACtB,SAAUc,EACV,MAAOf,EACP,cACEA,GACExe,EAAA,MAAA,CACE,QAAc4O,GAAA,CACZA,EAAE6R,eAAF,EACA7R,EAAE8R,gBAAF,CACD,EAJH,WAMGC,GAAD,CAAA,SAAA,CACE3gB,EAAC0J,EAAqBtC,CAAAA,GAAAA,EAASsX,SAAAA,CADjC,EAEE1e,EAACwY,EAAD,CACE,IAAKlY;AAAAA;AAAAA;AAAAA,0BAIL,KAAK,SACL,MAAOkf,EAAqB,IAC5B,YACEC,EAAsB1N,OAAOnD,EAAEC,OAAO/C,KAAV,EAAmB,GAA1B,CAAA,CARzB,EAWC,IACD9L,EAACuW,GAAD,CAAc,QAAS2J,EAAvB,WACGxW,EAAqBtC,CAAAA,GAAAA,EAASyX,UAAAA,CAA/B,CAAA,CAfJ,CAAA,CAAA,CAAA,CAAA,CANF,CAAA,CAPN,CAAA,CAtDJ,CAAA,CAAA,CAjBF,CAAA,CAAA,CAJF,CAAA,CAAA,CADF,CA+JD,EAIK9d,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMdF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQjBwf,GAAyBzf,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOhCoV,GAAerV,EAAOsV,CAAD;AAAA;AAAA;AAAA,iBAGV,CAAC,CAAE1W,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA,ECjU9Bof,GAAgB/gB,GAAmC,CAC9D,MAAMC,EAAQC,IAEd,SACE,MAAA,CACE,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OALP,GAMMF,EANN,WAQE,OAAA,CACE,SAAS,UACT,SAAS,UACT,EAAE,woBACF,KAAMA,EAAMI,OAASH,EAAMI,OAAOC,WAAWC,OAAAA,CAJ/C,CAAA,CATJ,CAiBD,ECxBD,IAAegb,GAAA,4BCOf,MAAMhU,GAAWC,EAAe,CAC9BC,MAAO,CACLC,GAAI,iCACJC,eAAiB,2BAFZ,EAIPqE,YAAa,CACXtE,GAAI,uCACJC,eAAiB,gHAFN,CALiB,CAAD,EAWlBqZ,GAAmB,IAAM,CACpC,MAAMnG,EAAqBzE,OAAO0E,WAAW,8BAAlB,EACxBC,QACC,OACA,QACE,CAAC1G,CAAD,EAAahM,EAAW,UAAD,EACvB,CAACkM,CAAD,EAAoBlM,EAAW,iBAAD,EAQpC,SACGnH,GAAD,CAAM,UAPoBqT,EACxBF,EACE,OACA,QACFwG,KAGsC,OAAxC,SACE,CAAAjR,EAAA,MAAA,CACE,IAAKnJ;AAAAA;AAAAA,UADP,SAAA,CAKEN,EAACgb,GAAD,CAAA,WACGtR,EAAqBtC,CAAAA,GAAAA,GAASE,KAAAA,CAA/B,CAAA,CANJ,EAQEtH,EAACib,GAAD,CAAA,WACGC,GAAD,CAAA,WACGxR,EACKtC,CAAAA,GAAAA,GAASyE,YACb,OAAQ,CAAEsP,GAAInb,EAAA,KAAA,EAAA,CAAN,CAAA,CAFV,CAAA,CADF,CAAA,CATJ,CAAA,CAAA,CAAA,EAiBAA,EAAA,MAAA,CAAA,WACE,MAAA,CAAK,IAAKob,GAAS,IAAI,EAAA,CAAvB,CAAA,CAnBJ,CAAA,CAAA,CADF,CAwBD,EAEKra,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,WAIT,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA,sBACpB,CAAC,CAAEN,MAAAA,EAAOoU,SAAAA,CAAT,IACnBA,EACIpU,EAAMI,OAAOkB,gBAAgBhB,QAC7BN,EAAMI,OAAOC,WAAWC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAU1B4a,GAAQ9Z,EAAOma;AAAAA;AAAAA;AAAAA;AAAAA,EAMfJ,GAAwB/Z,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQ/B+Z,GAAcha,EAAO+L;AAAAA;AAAAA;AAAAA;AAAAA,EAMA/L,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EChG3B,MAAM2f,GAAY,CACvB,CACE,QAAS,SACT,YAAa,KACb,SAAU,CAAC,EACX,MAAO,CACL,CACE,MAAO,mBACP,YAAa,iCACf,CACF,CACF,CACF,ECEM1Z,EAAWC,EAAe,CAC9BvG,OAAQ,CACNyG,GAAI,2BACJC,eAAgB,WAFV,EAIRuZ,QAAS,CACPxZ,GAAI,4BACJC,eAAgB,kDAFT,EAITwZ,aAAc,CACZzZ,GAAI,iCACJC,eAAgB,eAFJ,EAIdyZ,YAAa,CACX1Z,GAAI,gCACJC,eAAgB,eAFL,EAIb0Z,aAAc,CACZ3Z,GAAI,iCACJC,eAAgB,eAFJ,EAId2Z,SAAU,CACR5Z,GAAI,6BACJC,eAAgB,YAFR,EAIV4Z,SAAU,CACR7Z,GAAI,6BACJC,eAAgB,kEAFR,EAIV6Z,QAAS,CACP9Z,GAAI,4BACJC,eACE,uFAHK,EAKT8Z,QAAS,CACP/Z,GAAI,4BACJC,eACE,2FAHK,EAKT+Z,aAAc,CACZha,GAAI,iCACJC,eAAgB,gBAFJ,EAIdga,cAAe,CACbja,GAAI,kCACJC,eAAgB,QAFH,EAIfia,eAAgB,CACdla,GAAI,mCACJC,eAAgB,SAFF,EAIhBka,UAAW,CACTna,GAAI,8BACJC,eAAgB,sBAFP,EAIXma,kBAAmB,CACjBpa,GAAI,sCACJC,eACE,4DAHe,CAvDW,CAAD,EA8DlBoa,GAAqB,IAAM,CACtC,MAAM9hB,EAAQC,IACR,CAAC8hB,EAAeC,CAAhB,EAAoC5Z,EAAW,eAAD,EAC9C,CAAC6Z,EAAmBC,CAApB,EACJ9Z,EAAW,kBAAD,EACN,CAACyP,EAAsBC,CAAvB,EACJ1P,EAAW,cAAD,EAEN+Z,EAASnB,GAAU,GAEnBjJ,EAAuB7B,GAAgB,CAC3C,MAAM8B,EAAa,CAAE/C,QAAS,CAAE,SAAQiB,IAAV,CAAA,EAC1B2B,EAAqB3B,GAClBN,EAAQf,YAAYoD,OAAOD,CAA3B,EAAuCE,KAAK,IAC/CJ,EAAwB,CACtB,GAAGD,EACH,CAAC3B,GAAM,CAAC2B,EAAqB3B,EAFR,CAAA,CADpB,EAOAN,EAAQf,YAAYC,QAAQkD,CAA5B,EAAwCE,KAAiBC,GAAA,CACxD,CAACA,GAEmBL,EAAA,CACtB,GAAGD,EACH,CAAC3B,GAAM,CAAC2B,EAAqB3B,EAAAA,CAFR,CAAA,CAHpB,CAQN,EAGGkM,EAAqB,CAACC,EAAqBC,IAAsB,CACjED,IAAgB,mBAClBzN,OAAOC,YAAYC,QACjB,CACED,YAAa,CAAC,MAAD,GAEJE,GAAA,CACLA,GACGwD,EAAGjI,IAAI+R,EAA8C,EAArD,CAAA,CANX,EASSA,IAAgB,mBACrBJ,EACFC,EAAqB,EAAD,EAEpBtN,OAAOC,YAAYC,QACjB,CACEG,QAAS,CAAC,YAAD,GAEAF,GAAA,CACLA,GACFmN,EAAqB,EAAD,CACrB,CAPL,EAWOG,IAAgB,eAAiBC,GAC1CvK,EAAoBuK,CAAD,CACpB,EAGH,SACGrhB,GAAD,CAAA,SAAA,CACEf,EAACgB,EAAD,CAAA,WACG0I,EAAqBtC,CAAAA,GAAAA,EAAStG,MAAAA,CAA/B,CAAA,CADF,EAGCd,EAAA6gB,GAJH,CAAA,CAAA,IAKG5f,GAAD,CAAA,SAAA,CACEwI,EAAChI,GAAD,CAAA,SACE,CAAAzB,EAAA,OAAA,CACE,IAAKM;AAAAA;AAAAA;AAAAA,cADP,WAMGoJ,EACKtC,CAAAA,GAAAA,EAAS2Z,QACb,OAAQ,CACNA,QAASkB,EAAOlB,QAChBlV,YAAaoW,EAAOpW,WAFd,CAAA,CAFV,CAAA,CAPJ,EAeE7L,EAACqV,GAAD,CACE,MAAOvV,EAAMI,OAAOoV,OAAOlV,QAC3B,UAAWN,EAAMI,OAAOqV,KAAKnV,QAF/B,WAIGsJ,EAAqBtC,CAAAA,GAAAA,EAAS4Z,YAAAA,CAA/B,CAAA,CAnBJ,CAAA,CAAA,CADF,EAuBEhhB,EAACyB,GAAD,CAAA,WACG6W,GAAD,CAAA,SACG2J,CAAAA,EAAOI,YACN,MAAA,CAAA,SACE,CAAAriB,EAAA,SAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAAS6Z,WAAAA,CAA/B,CAAA,CAFJ,EAIEjhB,EAACuY,GAAD,CAAA,SACG0J,EAAOI,SAAS5J,IACf,CAAC,CAAEnR,MAAAA,EAAOuE,YAAAA,EAAayW,aAAAA,EAAcC,SAAAA,CAAAA,EAAYC,IAC/C/Y,EAAA,KAAA,CAAA,SACE,CAAAA,EAAA,SAAA,CAAA,SACGnC,CAAAA,EACA,IAFH,CAAA,CAAA,EAIAtH,EAAA,OAAA,CAAA,SAAO6L,CAAAA,CALT,EAMGyW,GACC7Y,EAAA,OAAA,CACE,QAAS,IACPyY,EAAmBI,EAAcC,CAAf,EAFtB,SAAA,CAKG,KACAD,IAAiB,qBACfP,IACErY,EACKtC,CAAAA,GAAAA,EAASqa,eACb,QAASgB,EAAAA,CAFX,EAKAziB,EAAC0J,EACKtC,CAAAA,GAAAA,EAASoa,cACb,QAASiB,EAAAA,CAFX,GAKHH,IAAiB,gBACf3K,EAAqB4K,GAAAA,KAAAA,EAAY,MAC/B7Y,EACKtC,CAAAA,GAAAA,EAASqa,eACb,QAASgB,EAAAA,CAFX,EAKAziB,EAAC0J,EACKtC,CAAAA,GAAAA,EAASoa,cACb,QAASiB,EAAAA,CATd,GAYA,GA9BH,CAAA,CAPJ,CAAA,CAAA,EAASD,CAAT,CAFH,CAAA,CALL,CAAA,CAAA,CAAA,EAqDDP,EAAOf,gBACN,MAAA,CAAA,SACE,CAAAlhB,EAAA,SAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAAS8Z,YAAAA,CAA/B,CAAA,CAFJ,EAIElhB,EAACuY,GAAD,CAAA,SACG0J,EAAOf,aAAazI,IAAI,CAAC,CAAEnR,MAAAA,EAAOuE,YAAAA,CAAAA,EAAe2W,IAChD/Y,EAAA,KAAA,CAAA,SACE,CAAAA,EAAA,SAAA,CAAA,SACGnC,CAAAA,EACA,IAFH,CAAA,CAAA,EAIAtH,EAAA,OAAA,CAAA,SAAO6L,CAAAA,CALT,CAAA,CAAA,EAAS2W,CAAT,CADD,CAAA,CALL,CAAA,CAAA,CAAA,EAiBDP,EAAOS,SACN,MAAA,CAAA,SACE,CAAA1iB,EAAA,SAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAAS+Z,QAAAA,CAA/B,CAAA,CAFJ,EAIEnhB,EAACuY,GAAD,CAAA,SACG0J,EAAOS,MAAMjK,IAAI,CAAC,CAAEnR,MAAAA,EAAOuE,YAAAA,CAAAA,EAAe2W,IACzC/Y,EAAA,KAAA,CAAA,SACE,CAAAA,EAAA,SAAA,CAAA,SACGnC,CAAAA,EACA,IAFH,CAAA,CAAA,EAIAtH,EAAA,OAAA,CAAA,SAAO6L,CAAAA,CALT,CAAA,CAAA,EAAS2W,CAAT,CADD,CAAA,CALL,CAAA,CAAA,CA1EJ,CAAA,CAAA,CAAA,CAAA,CAxBJ,EAqHExiB,EAACyB,GAAD,CAAA,WACGmK,EAAD,CACE,IAAKxE,EAASsa,UACd,YAAata,EAASua,kBACtB,MAAOE,EACP,SAAmBC,GAAAA,EAAiBhW,CAAD,EACnC,WAAW,mBAAA,CALb,CAAA,CAtHJ,EA8HErC,EAACkZ,GAAD,CAAA,SACE,CAAAlZ,EAAA,MAAA,CAAA,SACE,CAAAzJ,EAAA,MAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAASia,QAAS,OAAQ,CAAElG,GAAInb,EAAA,KAAA,EAAA,CAAN,CAAA,CAAhD,CAAA,CAFJ,EAIEA,EAACyL,GAAD,CACE,KAAK,8EACL,OAAO,SACP,IAAI,sBAHN,WAKG/B,EAAqBtC,CAAAA,GAAAA,EAASma,YAAAA,CAA/B,CAAA,CATJ,CAAA,CAAA,CAAA,EAYA9X,EAAA,MAAA,CAAA,SACE,CAAAzJ,EAAA,MAAA,CAAA,WACG0J,EAAqBtC,CAAAA,GAAAA,EAASka,QAAS,OAAQ,CAAEnG,GAAInb,EAAA,KAAA,EAAA,CAAN,CAAA,CAAhD,CAAA,CAFJ,EAIEA,EAACyL,GAAD,CAAM,KAAK,2BAAX,SAAuC,mBAAA,CAJzC,CAAA,CAAA,CAbF,CAAA,CAAA,CA9HF,CAAA,CAAA,CALF,CAAA,CAAA,CADF,CA2JD,EAEK1K,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMdF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAQjBM,GAAUP,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,gBAIP,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOkB,gBAAgBhB;AAAAA;AAAAA,WAEjD,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA;AAAAA;AAAAA,EAKpCkY,GAAgBpX,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOvBoX,GAAOrX,EAAO0hB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EASdD,GAASzhB,EAAOC;AAAAA;AAAAA;AAAAA,WAGX,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOoB,GAAGlB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAgBpCqL,GAAOvK,EAAOgI;AAAAA;AAAAA;AAAAA,WAGT,CAAC,CAAEpJ,MAAAA,CAAF,IAAcA,EAAMI,OAAOwL,UAAUtL;AAAAA;AAAAA;AAAAA,aAGpC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAOwL,UAAUC;AAAAA;AAAAA,EAI7C8W,GAAoBvhB,EAAO+L;AAAAA,WACtB,CAAC,CAAEnN,MAAAA,CAAF,IAAcA,EAAMI,OAAO2iB,WAAWziB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,aASrC,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMI,OAAO2iB,WAAWlX;AAAAA;AAAAA,EC3V9CvE,EAAWC,EAAe,CAC9Byb,gBAAiB,CACfvb,GAAI,+BACJC,eAAgB,UAFD,EAIjBub,QAAS,CACPxb,GAAI,uBACJC,eAAgB,SAFT,EAIT2R,aAAc,CACZ5R,GAAI,4BACJC,eAAgB,cAFJ,EAIdwb,SAAU,CACRzb,GAAI,wBACJC,eAAgB,UAFR,EAIVyb,UAAW,CACT1b,GAAI,yBACJC,eAAgB,WAFP,EAIX0b,UAAW,CACT3b,GAAI,yBACJC,eAAgB,YAFP,EAIX2b,YAAa,CACX5b,GAAI,2BACJC,eAAgB,MAFL,EAIb4b,SAAU,CACR7b,GAAI,wBACJC,eAAgB,iBAFR,EAIV6b,UAAW,CACT9b,GAAI,yBACJC,eAAgB,YAFP,CAjCmB,CAAD,EAuCzB8b,GAAW,IAAM,CACrB,KAAM,CAAC1Y,EAAKU,CAAN,EAAgB/C,mBAAoB,cAApB,EAChB,CAAExG,KAAMmD,GAASqe,GAAvB,EACM,CAACC,EAAmB3J,CAApB,EAAyB3R,EAAW,kBAAD,EACnC,CAACoM,EAAsBC,CAAvB,EAAkDrM,EACtD,uBACA,EAFgE,EAI5D,CAAGub,CAAAA,CAAH,EAAkBlb,qBAAiBmb,GAAKA,EAAI,EAAG,CAA7B,EAElBC,EAA4BC,KACvBC,GAAX,EAEAtb,EAAAA,QAAAA,UAAgB,IAAM,CAChBrD,IACF4e,GAASC,cAAc,CAAExc,GAAIrC,EAAKqC,EAAAA,CAAlC,EACAuc,GAASE,UAAU,IAAM,CACZP,GAAA,CADb,EAGIxN,OAAOgO,MAAMhO,OAAOgO,KAAKC,SAAU,GAAEhf,EAAKqC,IAA7B,EAClB,EACA,CAACrC,CAAD,CARH,EAUAqD,EAAAA,QAAAA,UAAgB,IAAM,CACF,IAAI4b,gBAAgBlO,OAAO7T,SAASgiB,MAApC,EACSC,IAAI,QAAd,IAEA,QAAQ/Y,EAAO,UAAD,CAChC,EAAE,CALH,CAAA,EAOMgZ,MAAAA,EAAc/b,EAAAA,QAAAA,QAAc,IAAM,CAC9BqC,OAAAA,OACD,UACH,SAAQiM,GAAD,CAAa,OAAAvL,CAAA,CAApB,MACG,eACI,OAAAtL,EAACmX,GAAR,CAAA,CAAA,MACG,WACI,OAAAnX,EAACukB,GAAR,CAAA,CAAA,MACG,YACI,OAAAvkB,EAACwkB,GAAR,CAAA,CAAA,MACG,YACI,OAAAxkB,EAACykB,GAAR,CAAA,CAAA,MACG,WACI,OAAAzkB,EAAC4hB,GAAR,CAAA,CAAA,UAEO,OAAA5hB,EAACmX,GAAR,CAAA,CAAA,EAAA,EAEH,CAACvM,CAAD,CAjBiB,EAmBpB,SACG7J,GAAD,CAAA,SAAA,CACE0I,EAACib,GAAD,CAAA,SAAA,CACE1kB,EAACgB,GAAD,CAAA,WACG2jB,GAAD,CAAM,MAAM,QAAQ,OAAO,MAAA,CAA3B,CAAA,CAFJ,EAIElb,EAACmb,GAAD,CAAA,SAAA,CACEnb,EAACob,GAAD,CAAA,SAAA,CACE7kB,EAAC8kB,GAAD,CAAA,WACGpb,EAAqBtC,CAAAA,GAAAA,EAAS0b,eAAAA,CAA/B,CAAA,CAFJ,EAIErZ,EAACsb,EAAD,CACE,QAAS,IAAMzZ,EAAO,cAAD,EACrB,OAAQV,IAAQ,eAFlB,SAAA,CAIE5K,EAACK,GAAD,CAAW,KAAI,EAAA,CAAf,EACAL,EAAC0J,EAAD,CAAA,GAAsBtC,EAAS+R,YAAAA,CALjC,CAAA,CAAA,CAJF,EAWE1P,EAACsb,EAAD,CACE,QAAS,IAAMzZ,EAAO,SAAD,EACrB,OAAQV,IAAQ,UAFlB,SAIE,CAAC5K,EAAAglB,GAJH,CAAA,CAAA,IAKGtb,EAAD,CAAA,GAAsBtC,EAAS2b,OAA/B,CAAA,EACCY,EAA0B7X,QAAU,YACnC,CAAC0X,GACD,CAAClP,GAAwBtU,EAACilB,GAR9B,CAAA,CAAA,CAAA,CAAA,CAXF,EAsBExb,EAACsb,EAAD,CACE,QAAS,IAAMzZ,EAAO,UAAD,EACrB,OAAQV,IAAQ,WAFlB,SAIE,CAAC5K,EAAAS,GAJH,CAAA,CAAA,IAKGiJ,EAAD,CAAA,GAAsBtC,EAAS4b,QAAAA,CALjC,CAAA,CAAA,CAtBF,EA6BEvZ,EAACsb,EAAD,CACE,QAAS,IAAMzZ,EAAO,WAAD,EACrB,OAAQV,IAAQ,YAFlB,SAIE,CAAC5K,EAAAU,GAJH,CAAA,CAAA,IAKGgJ,EAAD,CAAA,GAAsBtC,EAAS6b,SAAAA,CALjC,CAAA,CAAA,CA7BF,EAoCExZ,EAACsb,EAAD,CACE,QAAS,IAAMzZ,EAAO,WAAD,EACrB,OAAQV,IAAQ,YAFlB,SAIE,CAAC5K,EAAAJ,GAJH,CAAA,CAAA,IAKG8J,EAAD,CAAA,GAAsBtC,EAAS8b,SAAAA,CALjC,CAAA,CAAA,CApCF,CAAA,CAAA,CADF,EA6CEzZ,EAACob,GAAD,CAAA,SAAA,CACE7kB,EAAC8kB,GAAD,CAAA,WACGpb,EAAqBtC,CAAAA,GAAAA,EAAS+b,WAAAA,CAA/B,CAAA,CAFJ,EAIE1Z,EAACsb,EAAD,CACE,QAAS,IAAMzZ,EAAO,UAAD,EACrB,OAAQV,IAAQ,WAFlB,SAIE,CAAC5K,EAAA4gB,GAJH,CAAA,CAAA,IAKGlX,EAAD,CAAA,GAAsBtC,EAASgc,QAAAA,CALjC,CAAA,CAAA,CAJF,EAWE3Z,EAACyb,GAAD,CACE,KAAK,8EACL,OAAO,SACP,IAAI,sBAHN,SAKE,CAACllB,EAAAW,GALH,CAAA,CAAA,IAMG+I,EAAD,CAAA,GAAsBtC,EAASic,SAAAA,CANjC,CAAA,CAAA,CAXF,CAAA,CAAA,CA7CF,CAAA,CAAA,CAJF,CAAA,CAAA,CADF,EAwEErjB,EAACiB,GAAD,CAAA,SAAUqjB,CAAAA,CAxEZ,CAAA,CAAA,CADF,CA4ED,EAEKvjB,GAAOG,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOdH,GAASE,EAAOC;AAAAA;AAAAA;AAAAA,EAKhBF,GAAUC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,sBAID,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAO4Y,kBAAkB1Y;AAAAA,EAG9DskB,GAAUxjB,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EASjByjB,GAAa1jB,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMpB0jB,GAAQ3jB,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA,EAMf2jB,GAAU5jB,EAAOC;AAAAA,iBACN,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMqlB,KAAKC;AAAAA,WAChC,CAAC,CAAEtlB,MAAAA,CAAF,IAAcA,EAAMI,OAAOoP,MAAMlP;AAAAA;AAAAA;AAAAA,iBAG5B,CAAC,CAAEN,MAAAA,CAAF,IAAcA,EAAMyB,KAAKC;AAAAA;AAAAA;AAAAA,EAKrC0jB,GAAYhkB,EAAOgI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAYd,CAAC,CAAEJ,OAAAA,EAAQhJ,MAAAA,CAAV,IACRgJ,EAASuc,EAAIC,MAAM/P,KAAKnV,QAAUN,EAAMI,OAAOC,WAAWC;AAAAA,sBACxC,CAAC,CAAE0I,OAAAA,CAAF,IACnBA,EAASuc,EAAIC,MAAMC,MAAMnlB,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,aAK1BilB,EAAIC,MAAM/P,KAAKnV;AAAAA,wBACJilB,EAAIC,MAAMC,MAAMnlB;AAAAA;AAAAA,EAIlC6kB,GAAM/jB,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sBAOG,CAAC,CAAErB,MAAAA,CAAF,IAAcA,EAAMI,OAAOslB,MAAMplB;AAAAA,EAGlD2kB,EAAU,CAAC,CACflkB,SAAAA,EACA4kB,QAAAA,EACA3c,OAAAA,CAHe,MAUZoc,GAAD,CAAW,OAAApc,EAAgB,QAAA2c,EAA3B,SAAA5kB,CAAA,CADF,EC9QF,SAAS6kB,IAAO,CACdrN,EAAGsN,QAAH,EAEMC,MAAAA,EAAgBC,SAASC,cAAc,SAAvB,EACtB,GAAI,CAACF,EAAqB,MAAA,IAAIG,MAAM,uCAAV,EACbC,GAAWJ,CAAD,EAElBK,SACFC,GAAD,CAAA,WACGC,GAAD,CACE,OAAQC,GACR,eAAgB,CAAEC,UAAAA,EAAF,EAFlB,SAAA,CAIErmB,EAACsmB,GAAD,CAAiB,MAAO1e,GAAxB,WACG2e,GAAD,CAAA,SACEvmB,EAACsjB,GAAD,EAAA,CAAA,CADF,CAAA,CALJ,EASEtjB,EAACwmB,GAAD,CAAoB,cAAe,EAAA,CATrC,CAAA,CAAA,CAAA,CAFJ,CAAA,CAAA,CAeD,CAEDd,GAAI"}