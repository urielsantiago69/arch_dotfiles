{"version":3,"file":"background.js","sources":["../../src/background/_internal/project.ts","../../src/background/_internal/tag.ts","../../src/background/_internal/calendar.ts","../../src/background/contextMenu.ts","../../src/background/contentScript.ts","../../src/background/tinyButton.ts","../../src/background/iconHandler.ts","../../src/background/windowEvents.ts","../../src/lib/idle.ts","../../src/background/index.ts"],"sourcesContent":["import * as Browser from 'webextension-polyfill';\n\nimport {\n  Client,\n  Project,\n  ProjectCreateProperties,\n  TaskV9,\n} from '@toggl/track-types';\n\nimport * as errorReport from '@src/lib/errorReport';\nimport apiClient from './_api';\n\nexport const fetch = async () => {\n  try {\n    const response = await apiClient.me.projects.list(null);\n    const byId = response.data.reduce((acc, project) => {\n      return {\n        ...acc,\n        [project.id]: project,\n      };\n    }, {} as Record<string, Project>);\n\n    Browser.storage.local.set({ projects: byId });\n    return byId;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n\nexport const create = async (\n  project: ProjectCreateProperties,\n  workspaceId: number\n) => {\n  try {\n    const value = await Browser.storage.local.get('projects');\n    const { data } = await apiClient.project.create(workspaceId, project);\n\n    await Browser.storage.local.set({\n      projects: {\n        ...value.projects,\n        [data.id]: data,\n      },\n    });\n\n    return data;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n\nexport const fetchClients = async () => {\n  try {\n    const response = await apiClient.me.clients.list(null);\n    const byId = response.data.reduce((acc, client) => {\n      return {\n        ...acc,\n        [client.id]: client,\n      };\n    }, {} as Record<string, Client>);\n\n    Browser.storage.local.set({ clients: byId });\n    return byId;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n\nexport const fetchTasks = async () => {\n  try {\n    const response = await apiClient.me.tasks.list(null);\n    const byId = response.data.reduce((acc, task) => {\n      return {\n        ...acc,\n        [task.id]: task,\n      };\n    }, {} as Record<string, TaskV9>);\n\n    Browser.storage.local.set({ tasks: byId });\n    return byId;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n","import * as Browser from 'webextension-polyfill';\n\nimport { Tag } from '@toggl/track-types';\n\nimport * as errorReport from '@src/lib/errorReport';\n\nimport apiClient from './_api';\n\nexport const fetch = async () => {\n  try {\n    const response = await apiClient.me.tags.list(null);\n    const byId = response.data.reduce((acc, tag) => {\n      return {\n        ...acc,\n        [tag.id]: tag,\n      };\n    }, {} as Record<string, Tag>);\n\n    Browser.storage.local.set({ tags: byId });\n    return byId;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n\nexport const create = async (name: string, workspaceId: number) => {\n  try {\n    const value = await Browser.storage.local.get('tags');\n    const { data } = await apiClient.tag.create(name, workspaceId);\n    await Browser.storage.local.set({\n      tags: {\n        ...value.tags,\n        [data.id]: data,\n      },\n    });\n\n    return data;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n","import * as Browser from 'webextension-polyfill';\n\nimport { DateTime } from 'luxon';\n\nimport * as errorReport from '@src/lib/errorReport';\nimport apiClient from './_api';\n\nexport const fetchNextEvents = async () => {\n  try {\n    // this updates the events, webapp seems to do that before querying for next events\n    await apiClient.calendar.refreshEvents();\n\n    const today = DateTime.now().toISODate();\n\n    const response = await apiClient.calendar.fetchCalendarIntegrationEvents(\n      today,\n      today\n    );\n\n    const events = response.data.events.sort(\n      (a, b) =>\n        DateTime.fromISO(a.start_time).toMillis() -\n        DateTime.fromISO(b.start_time).toMillis()\n    );\n\n    Browser.storage.local.set({ todayCalendarEvents: events });\n    return events;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n\nexport const fetchCalendarIntegrations = async () => {\n  try {\n    const response = await apiClient.calendar.fetchCalendarIntegrations();\n\n    const integrations = response.data;\n\n    Browser.storage.local.set({ calendarIntegrations: integrations });\n    return integrations;\n  } catch (e) {\n    errorReport.error(e);\n    throw e;\n  }\n};\n","import * as Browser from 'webextension-polyfill';\nimport { DateTime } from 'luxon';\nimport { defineMessages } from 'react-intl';\n\nimport { TimeEntryRequest } from '@toggl/track-types';\n\nimport * as userBackgroundService from './_internal/user';\nimport * as timeEntryBackgroundService from './_internal/timeEntry';\nimport { Db } from '@src/lib/db';\n\nimport intl from '@src/lib/intl';\nimport { extractHostname } from '@src/lib/utils';\n\nconst messages = defineMessages({\n  startTimerWithDescription: {\n    id: 'contextMenu.startTimerWithDescription',\n    defaultMessage: 'Start timer with description',\n  },\n  startTimer: {\n    id: 'contextMenu.startTimer',\n    defaultMessage: 'Start timer',\n  },\n  disableTinyButton: {\n    id: 'contextMenu.disableTinyButton',\n    defaultMessage: 'Disable tiny button on this page',\n  },\n  enableTinyButton: {\n    id: 'contextMenu.enableTinyButton',\n    defaultMessage: 'Re-enable tiny button on this page',\n  },\n});\n\nconst handleButtonClicked = (\n  info: Browser.Menus.OnClickData,\n  tab: Browser.Tabs.Tab\n) => {\n  if (\n    info.menuItemId === 'TrackExtension' ||\n    info.menuItemId === 'TrackExtensionSelection'\n  ) {\n    startTimer(info, tab);\n  } else {\n    toggleTinyButton(info, tab);\n  }\n};\n\nconst toggleTinyButton = async (\n  info: Browser.Menus.OnClickData,\n  tab: Browser.Tabs.Tab\n) => {\n  const tinyButtonBlocklist = await Db.get('tinyButtonBlocklist');\n\n  const hostname = extractHostname(tab.url!);\n\n  const isNewStateDisabled = !tinyButtonBlocklist.includes(hostname);\n  !isNewStateDisabled\n    ? await Db.set(\n        'tinyButtonBlocklist',\n        tinyButtonBlocklist.filter(item => item !== hostname)\n      )\n    : await Db.set('tinyButtonBlocklist', [...tinyButtonBlocklist, hostname]);\n  await Browser.tabs.sendMessage(tab.id!, {\n    type: isNewStateDisabled ? 'hide-tiny-button' : 'show-tiny-button',\n  });\n\n  await Browser.contextMenus.update('TrackExtensionDisableTinyButton', {\n    title: isNewStateDisabled\n      ? intl.formatMessage(messages.enableTinyButton)\n      : intl.formatMessage(messages.disableTinyButton),\n  });\n};\n\nconst startTimer = (info: Browser.Menus.OnClickData, tab) => {\n  const start = DateTime.now();\n  const description = info?.selectionText || tab.title;\n\n  userBackgroundService.fetch().then(user => {\n    const entry = {\n      at: start.toISO(),\n      billable: false,\n      description,\n      duration: -parseInt((start.toMillis() / 1000).toFixed(0), 10),\n      start: start.toISO(),\n      tags: [],\n      tag_ids: [],\n      workspace_id: user?.default_workspace_id as number,\n    } as unknown as TimeEntryRequest;\n\n    timeEntryBackgroundService.start(entry, { type: 'contentScript' });\n  });\n};\n\nexport const configure = async (tab: Browser.Tabs.Tab) => {\n  const showButton = await Db.get('showRightClickButton');\n  const tinyButtonBlocklist = await Db.get('tinyButtonBlocklist');\n  const isTinyButtonDisabled = tinyButtonBlocklist.includes(\n    extractHostname(tab.url || '')\n  );\n\n  try {\n    await Browser.contextMenus.remove('TrackExtension');\n  } catch {\n    // ignore\n  }\n\n  try {\n    await Browser.contextMenus.remove('TrackExtensionSelection');\n  } catch {\n    // ignore\n  }\n\n  try {\n    await Browser.contextMenus.remove('TrackExtensionDisableTinyButton');\n  } catch {\n    // ignore\n  }\n\n  if (showButton) {\n    Browser.contextMenus.create({\n      id: 'TrackExtension',\n      title: intl.formatMessage(messages.startTimer),\n      contexts: ['page'],\n    });\n\n    Browser.contextMenus.create({\n      id: 'TrackExtensionSelection',\n      title: intl.formatMessage(messages.startTimerWithDescription) + \" '%s'\",\n      contexts: ['selection'],\n    });\n  }\n\n  Browser.contextMenus.create({\n    id: 'TrackExtensionDisableTinyButton',\n    title: isTinyButtonDisabled\n      ? intl.formatMessage(messages.enableTinyButton)\n      : intl.formatMessage(messages.disableTinyButton),\n    contexts: ['page'],\n  });\n\n  Browser.contextMenus.onClicked.removeListener(handleButtonClicked);\n  Browser.contextMenus.onClicked.addListener(handleButtonClicked);\n};\n","import * as Browser from 'webextension-polyfill';\n\nimport storedOrigins from '@toggl/track-extension';\n\nimport { extractHostname, extractRootDomain } from '@src/lib/utils';\nimport * as errorReport from '@src/lib/errorReport';\nimport * as userBackgroundService from './_internal/user';\nimport { Db } from '@src/lib/db';\n\nconst configureLogin = (tabId: number) => {\n  Browser.scripting.executeScript({\n    target: { tabId },\n    files: ['./login.js'],\n  });\n};\n\nconst startIntegration = async (tabId: number, filename: string) => {\n  // TODO: redux refactor => really needed?\n  // await loadResources();\n  errorReport.info('adding content scripts');\n\n  await Browser.scripting\n    .insertCSS({\n      target: { tabId },\n      files: ['src/content/style.css'],\n    })\n    .catch(e => errorReport.error(e));\n\n  await Browser.scripting\n    .executeScript({\n      target: { tabId },\n      files: ['src/content/index.js'],\n    })\n    .catch(e => errorReport.error(e));\n\n  Browser.scripting\n    .executeScript({\n      target: { tabId },\n      files: [`src/content/${filename}`],\n    })\n    .catch(e => errorReport.error(e));\n};\n\nexport const configure = async (tabId, tab) => {\n  if (tab.url === undefined) return;\n  try {\n    const response = await Browser.tabs.sendMessage(tabId, { type: 'ping' });\n    if (response.type === 'pong') return;\n  } catch (e) {\n    errorReport.debug(e);\n  }\n\n  const rootDomain = extractRootDomain(tab.url!);\n\n  if (rootDomain === 'toggl.com' || rootDomain === 'toggl.space')\n    return configureLogin(tabId);\n\n  const integrations = await Db.get('integrations');\n  const customIntegrations = await Db.get('customIntegrations');\n  const customScripts = await Db.get('customScripts');\n  const extractedHostname = extractHostname(tab.url!);\n  if (\n    (!integrations || !integrations[rootDomain]) &&\n    !customIntegrations?.[extractedHostname] &&\n    !customScripts?.[extractedHostname]\n  )\n    return;\n\n  await userBackgroundService.fetch().catch(e => errorReport.error(e));\n\n  const integrationObj = storedOrigins[rootDomain];\n\n  if (integrationObj) {\n    const filename =\n      integrationObj?.file ??\n      `${integrationObj.name.toLocaleLowerCase().replace(' ', '-')}.js`;\n\n    if (integrations && integrations[rootDomain]) {\n      startIntegration(tabId, filename);\n    }\n  } else if (\n    customIntegrations?.[extractedHostname]?.name ||\n    customIntegrations?.[extractedHostname]?.file\n  ) {\n    const filename =\n      customIntegrations?.[extractedHostname]?.file ??\n      `${customIntegrations[extractedHostname].name\n        .toLocaleLowerCase()\n        .replace(' ', '-')}.js`;\n\n    if (filename) startIntegration(tabId, filename);\n  }\n  if (customScripts?.[extractedHostname]) {\n    const hostname = extractedHostname;\n    const filename =\n      customScripts?.[hostname]?.file ??\n      `${customScripts[hostname].name\n        .toLocaleLowerCase()\n        .replace(' ', '-')}.js`;\n    if (filename) startIntegration(tabId, filename);\n  }\n};\n","import Browser from 'webextension-polyfill';\nimport * as errorReport from '@src/lib/errorReport';\n\nexport const configure = async (tabId, tab) => {\n  if (tab.url === undefined) return;\n\n  try {\n    const response = await Browser.tabs.sendMessage(tabId, {\n      type: 'ping-tiny-button',\n    });\n    if (response.type === 'pong-tiny-button') return;\n  } catch (e) {\n    errorReport.debug(e);\n  }\n\n  Browser.scripting\n    .executeScript({\n      target: { tabId },\n      files: ['src/tinyButton.js'],\n    })\n    .catch(e => errorReport.error(e));\n};\n","import * as Browser from 'webextension-polyfill';\nimport cache from 'webext-storage-cache';\nimport * as timeEntryBackgroundService from './_internal/timeEntry';\n\nconst ALARM_ID = 'toggl-track-icon-change';\n\nexport const configure = () => {\n  Browser.alarms.create(ALARM_ID, {\n    delayInMinutes: 0,\n    periodInMinutes: 0.5, // 30 seconds\n  });\n};\n\nexport const changeIcon = (active: boolean) =>\n  Browser.action.setIcon({\n    path: active\n      ? { '19': 'images/icon-19.png', '38': 'images/icon-38.png' }\n      : { '19': 'images/inactive-19.png', '38': 'images/inactive-38.png' },\n  });\n\nBrowser.alarms.onAlarm.addListener(async alarm => {\n  if (alarm.name === ALARM_ID) {\n    const hasUser = await cache.has('user');\n    if (!hasUser) return;\n\n    timeEntryBackgroundService\n      .current()\n      .then(entry => changeIcon(!!entry))\n      .catch(() => changeIcon(false));\n  }\n});\n","import * as Browser from 'webextension-polyfill';\nimport { DateTime } from 'luxon';\n\nimport { TimeEntryRequest, TimeEntryV9 } from '@toggl/track-types';\n\nimport { Db } from '@src/lib/db';\n\nimport * as timeEntryBackgroundService from './_internal/timeEntry';\nimport { MessageFrom } from '..';\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries';\nimport { changeIcon } from './iconHandler';\n\nconst from: MessageFrom = { type: 'popup' };\n\nexport const configure = () => {\n  Browser.windows.onRemoved.addListener(async function () {\n    const stopAutomatically = await Db.get('stopAutomatically');\n    if (!stopAutomatically) return;\n\n    Browser.windows.getAll().then(async windows => {\n      if (windows.length <= 0) {\n        const runningTE = await Browser.storage.local\n          .get('timeEntries')\n          .then(res => {\n            const TEs: { [key: number]: TimeEntryV9 } = res.timeEntries;\n\n            if (!TEs) return undefined;\n\n            return Object.values(TEs).find(te => te.duration < 0);\n          });\n\n        if (!runningTE) return;\n        stopRunningTimeEntry(runningTE, null);\n      }\n    });\n  });\n\n  Browser.windows.onCreated.addListener(async () => {\n    const windows = await Browser.windows.getAll();\n\n    if (windows.length > 1) return;\n\n    const TEs = await timeEntryBackgroundService.fetch();\n    const TEsList = Object.values(TEs);\n    const lastTE = TEsList.pop();\n\n    void changeIcon(!!lastTE && lastTE.duration < 0);\n\n    const startAutomatically = await Db.get('startAutomatically');\n    if (!startAutomatically) return;\n\n    if (!lastTE || lastTE.duration < 0) return;\n\n    const start = DateTime.now();\n\n    timeEntryBackgroundService.start(\n      {\n        ...lastTE,\n        start,\n        duration: -parseInt((start.toMillis() / 1000).toFixed(0), 10),\n        stop: undefined,\n        tag_ids: lastTE.tag_ids ?? [],\n      } as unknown as TimeEntryRequest,\n      from\n    );\n  });\n};\n","import { DateTime } from 'luxon';\nimport Browser from 'webextension-polyfill';\nimport { Db } from './db';\nimport { DateTimeDuration } from '@internationalized/date';\nimport * as timeEntriesApi from '@src/background/_internal/timeEntry';\nimport { stopRunningTimeEntry } from './timeEntries';\n\nimport intl from '@src/lib/intl';\nimport { defineMessages } from 'react-intl';\nimport { TimeEntryRequest, TimeEntryV9 } from '@toggl/track-types';\n\nconst messages = defineMessages({\n  idleFor: {\n    id: 'idle.notifications.idleFor',\n    defaultMessage: `You have been idle for {time} minutes while tracking \"{description}\"`,\n  },\n  discardIdleButton: {\n    id: 'idle.notifications.discardIdleButton',\n    defaultMessage: 'Stop timer and discard idle time',\n  },\n  continue: {\n    id: 'idle.notifications.keepIdleButton',\n    defaultMessage: 'Discard idle time and continue',\n  },\n  timeEntryConstraints: {\n    id: 'idle.notifications.timeEntryConstraints',\n    defaultMessage: `To stop the timer, add required {fields} field(s).`,\n  },\n  requiredField: {\n    id: 'idle.notifications.requiredFields',\n    defaultMessage:\n      '{field, select, description {description} tag {tag} project {project} task {task} other {Unknown}}',\n  },\n});\n\ntype LastIdleTimeEntry = {\n  since: string;\n  timeEntryId: TimeEntryV9['id'];\n};\n\nconst IDLE_DETECTION_INTERVAL = 60 * 5;\nconst IDLE_NOTIFICATION_ID = 'idle-notification';\n\nasync function idleListener(state: Browser.Idle.IdleState) {\n  const isIdleEnabled = await Db.get('idleDetectionEnabled');\n\n  if (!isIdleEnabled) return;\n\n  const timeEntriesData = await timeEntriesApi.fetch();\n\n  const runningTimeEntry = Object.values(timeEntriesData).find(\n    te => te?.duration < 0\n  );\n\n  if (!runningTimeEntry) {\n    await Browser.storage.local.set({ lastIdleTimeEntry: null });\n    return;\n  }\n\n  const { lastIdleTimeEntry } = await Browser.storage.local.get(\n    'lastIdleTimeEntry'\n  );\n\n  if (\n    !lastIdleTimeEntry ||\n    lastIdleTimeEntry.timeEntryId !== runningTimeEntry.id\n  ) {\n    Browser.storage.local.set({\n      lastIdleTimeEntry: {\n        since: DateTime.now().toISO(),\n        timeEntryId: runningTimeEntry.id,\n      },\n    });\n  }\n\n  if (state === 'active') {\n    const { lastIdleTimeEntry } = await Browser.storage.local.get(\n      'lastIdleTimeEntry'\n    );\n    triggerIdleNotification(runningTimeEntry, lastIdleTimeEntry);\n\n    Browser.storage.local.set({ lastIdleTimeEntry: null });\n  }\n}\n\nfunction triggerIdleNotification(\n  runningTimeEntry: TimeEntryV9,\n  lastIdleTimeEntry: LastIdleTimeEntry\n) {\n  const idleFor: DateTimeDuration = DateTime.now()\n    .diff(DateTime.fromISO(lastIdleTimeEntry.since), 'minutes')\n    .toObject();\n\n  Browser.notifications.create(IDLE_NOTIFICATION_ID, {\n    type: 'basic',\n    iconUrl: 'images/icon-128.png',\n    title: 'Toggl Track',\n    message: intl.formatMessage(messages.idleFor, {\n      time: Math.ceil(idleFor.minutes || 0),\n      description: runningTimeEntry.description,\n    }),\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: webextension-polyfill is outdated\n    buttons: runningTimeEntry\n      ? [\n          {\n            title: intl.formatMessage(messages.discardIdleButton),\n          },\n          {\n            title: intl.formatMessage(messages.continue),\n          },\n        ]\n      : [],\n  });\n\n  Browser.notifications.onButtonClicked.addListener(\n    (notificationId, buttonIndex) => {\n      if (notificationId === IDLE_NOTIFICATION_ID) {\n        const shouldContinue = buttonIndex === 1;\n\n        if (runningTimeEntry)\n          void stopRunningTimeEntry(\n            runningTimeEntry,\n            lastIdleTimeEntry.since\n          ).then(() => {\n            if (shouldContinue) {\n              const start = new Date();\n              const entry = {\n                at: start.toISOString(),\n                billable: runningTimeEntry.billable,\n                description: runningTimeEntry.description,\n                duration: -parseInt((start.getTime() / 1000).toFixed(0), 10),\n                start: start.toISOString(),\n                tags: runningTimeEntry.tags ?? [],\n                tag_ids: runningTimeEntry.tag_ids ?? [],\n                task_id: runningTimeEntry.task_id,\n                project_id: runningTimeEntry.project_id,\n                workspace_id: runningTimeEntry.workspace_id,\n              } as unknown as TimeEntryRequest;\n\n              void timeEntriesApi.start(entry, { type: 'contentScript' });\n            }\n          });\n      }\n    }\n  );\n}\n\nexport function configureIdleDetector() {\n  Browser.idle.setDetectionInterval(IDLE_DETECTION_INTERVAL);\n\n  Browser.idle.onStateChanged.addListener(idleListener);\n}\n\nexport function removeIdleDetector() {\n  Browser.storage.local.set({ lastIdleTimeEntry: null });\n  Browser.idle.onStateChanged.removeListener(idleListener);\n}\n","import * as Browser from 'webextension-polyfill';\nimport * as Sentry from '@sentry/browser';\nimport * as errorReport from '@src/lib/errorReport';\n\nimport { SWMessage } from '../types';\nimport * as userBackgroundService from './_internal/user';\nimport * as timeEntryBackgroundService from './_internal/timeEntry';\nimport * as projectBackgroundService from './_internal/project';\nimport * as tagBackgroundService from './_internal/tag';\nimport * as calendarBackgroundService from './_internal/calendar';\n\nimport * as contextMenu from './contextMenu';\nimport * as contentScript from './contentScript';\nimport * as tinyButton from './tinyButton';\nimport * as windowEvents from './windowEvents';\nimport * as iconHandler from './iconHandler';\n\nimport { configureIdleDetector } from '@src/lib/idle';\nimport { createStopDayEndAlarmLister } from '@src/lib/stopTimeAtDayEnd';\nimport { stopRunningTimeEntry } from '@src/lib/timeEntries';\nimport { TimeEntryRequest } from '@toggl/track-types';\nimport TogglOrigins from '@toggl/track-extension';\nimport { Db } from '@src/lib/db';\nimport { isFirefox } from '@src/lib/utils';\n\nwindowEvents.configure();\n\n// TODO: Think of a better way to keep the icon up-to-date\n// iconHandler.configure();\n\nconfigureIdleDetector();\ncreateStopDayEndAlarmLister();\n\nBrowser.permissions.onAdded.addListener(permissions => {\n  if (permissions.origins?.includes('<all_urls>')) {\n    void Db.set(\n      'integrations',\n      Object.keys(TogglOrigins).reduce((acc, key) => {\n        acc[key] = true;\n        return acc;\n      }, {})\n    ).then(() => {\n      void Db.set('tesListOnboardingStep', 'all_enabled');\n    });\n  }\n});\n\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n  const newTabEnabled = await Db.get('enableNewTabPage');\n\n  if (\n    (tab.url?.includes('chrome://') || tab.url?.includes('edge://')) &&\n    tab.url?.includes('newtab') &&\n    newTabEnabled\n  )\n    void Browser.tabs.update(tabId, {\n      url: Browser.runtime.getURL('src/pages/newTab/index.html'),\n    });\n});\n\nBrowser.tabs.onUpdated.addListener(\n  async (\n    tabId: number,\n    changeInfo: Browser.Tabs.OnUpdatedChangeInfoType,\n    tab: Browser.Tabs.Tab\n  ) => {\n    const tinyButtonEnabled = await Db.get('enableTinyButton');\n\n    if (changeInfo.status === 'complete') {\n      contextMenu.configure(tab);\n      contentScript.configure(tabId, tab);\n\n      if (tinyButtonEnabled) {\n        tinyButton.configure(tabId, tab);\n      }\n    }\n  }\n);\n\nBrowser.runtime.onInstalled.addListener(details => {\n  errorReport.info('Service worker installed');\n\n  if (details.reason === 'install') {\n    if (isFirefox()) {\n      const url = Browser.runtime.getURL('src/pages/dataConsent/index.html');\n      Browser.tabs.create({ url });\n    } else {\n      const url = Browser.runtime.getURL('src/pages/postInstallLP/index.html');\n      Browser.tabs.create({ url });\n    }\n  }\n  if (details.reason === 'update') {\n    void Db.get('showChangelog').then(showChangelog => {\n      // on the first update showChangelog will be undefined\n      if (showChangelog || showChangelog === undefined) {\n        const url = Browser.runtime.getURL('settings.html');\n        void Browser.tabs.create({ url: url + '?update=true' });\n      }\n    });\n  }\n});\n\nBrowser.commands.onCommand.addListener(command => {\n  errorReport.init();\n  Sentry.wrap(function () {\n    if (command === 'quick-start-stop-entry')\n      timeEntryBackgroundService\n        .fetch()\n        .then(entries => {\n          const entriesList = Object.values(entries).sort((a, b) => {\n            // Most recent entries first.\n            if (a.start > b.start) return -1;\n            if (b.start > a.start) return 1;\n            return 0;\n          });\n\n          if (entriesList[0]?.duration < 0)\n            void stopRunningTimeEntry(entriesList[0], null).then(() => {\n              // TODO: Think of a better way to keep the icon up-to-date\n              // void iconHandler.changeIcon(false);\n              void chrome.runtime\n                .sendMessage({\n                  type: 'updateTEs',\n                })\n                .catch(err => errorReport.debug(err));\n            });\n          else {\n            const start = new Date();\n            const latestEntry = entriesList[0];\n\n            const entry = {\n              at: start.toISOString(),\n              billable: false,\n              description: latestEntry.description,\n              duration: -parseInt((start.getTime() / 1000).toFixed(0), 10),\n              start: start.toISOString(),\n              tags: latestEntry.tags ?? [],\n              tag_ids: latestEntry.tag_ids ?? [],\n              project_id: latestEntry.project_id,\n              workspace_id: latestEntry.workspace_id,\n            } as unknown as TimeEntryRequest;\n\n            void timeEntryBackgroundService\n              .start(entry, {\n                type: 'contentScript',\n              })\n              .then(() => {\n                // TODO: Think of a better way to keep the icon up-to-date\n                // void iconHandler.changeIcon(true);\n                void chrome.runtime\n                  .sendMessage({\n                    type: 'updateTEs',\n                  })\n                  .catch(err => errorReport.debug(err));\n              });\n          }\n        })\n        .catch(error => errorReport.debug(error));\n  });\n});\n\nexport const loadResources = () => {\n  return Promise.all([\n    userBackgroundService.fetch(),\n    userBackgroundService.fetchWorkspaces(),\n    timeEntryBackgroundService.fetch(),\n    projectBackgroundService.fetch(),\n    projectBackgroundService.fetchClients(),\n    projectBackgroundService.fetchTasks(),\n    tagBackgroundService.fetch(),\n  ]);\n};\n\nBrowser.runtime.onMessage.addListener((message: SWMessage) => {\n  errorReport.init();\n  switch (message.type) {\n    case 'fetch-user':\n      return userBackgroundService.fetch();\n    case 'fetch-timeEntries':\n      return timeEntryBackgroundService.fetch();\n    case 'fetch-workspaces':\n      return userBackgroundService.fetchWorkspaces();\n    case 'fetch-workspacePreferences':\n      return userBackgroundService.fetchWorkspacePreferences(\n        message.payload.workspaceId\n      );\n    case 'fetch-workspaceFeatures':\n      return userBackgroundService.fetchWorkspaceFeatures();\n    case 'fetch-organizationFeatures':\n      return userBackgroundService.fetchOrganizationFeatures();\n    case 'fetch-timeEntriesConstraints':\n      return timeEntryBackgroundService.fetchConstraints(\n        message.payload.workspaceId\n      );\n    case 'fetch-projects':\n      return projectBackgroundService.fetch();\n    case 'fetch-clients':\n      return projectBackgroundService.fetchClients();\n    case 'fetch-tasks':\n      return projectBackgroundService.fetchTasks();\n    case 'fetch-tags':\n      return tagBackgroundService.fetch();\n    case 'create-tag':\n      return tagBackgroundService.create(\n        message.payload.name,\n        message.payload.workspaceId\n      );\n    case 'create-project':\n      return projectBackgroundService.create(\n        message.payload.project,\n        message.payload.workspaceId\n      );\n    case 'start-entry':\n      return timeEntryBackgroundService.start(\n        message.payload.entry,\n        message.payload.from\n      );\n\n    case 'update-entry':\n      return timeEntryBackgroundService.update(\n        message.payload.entry,\n        message.payload.from\n      );\n    case 'delete-entry':\n      return timeEntryBackgroundService.remove(message.payload);\n    case 'today-calendar-events':\n      return calendarBackgroundService.fetchNextEvents();\n    case 'fetch-calendars':\n      return calendarBackgroundService.fetchCalendarIntegrations();\n    case 'logout':\n      userBackgroundService.logOut();\n      break;\n    case 'change-action-icon':\n      iconHandler.changeIcon(message.payload);\n      break;\n    case 'activate':\n      loadResources();\n      break;\n    case 'testing':\n      errorReport.info('payload: ', message.payload);\n      break;\n    default:\n      errorReport.info('nothing');\n  }\n});\n"],"names":["fetch","byId","apiClient","acc","project","Browser.storage","e","errorReport.error","create","workspaceId","value","data","fetchClients","client","fetchTasks","task","tag","name","fetchNextEvents","today","DateTime","events","b","fetchCalendarIntegrations","integrations","messages","defineMessages","handleButtonClicked","info","tab","startTimer","toggleTinyButton","tinyButtonBlocklist","Db","hostname","extractHostname","isNewStateDisabled","item","Browser.tabs","Browser.contextMenus","intl","start","description","userBackgroundService.fetch","user","entry","timeEntryBackgroundService.start","configure","showButton","isTinyButtonDisabled","configureLogin","tabId","Browser.scripting","startIntegration","filename","errorReport.info","errorReport.debug","rootDomain","extractRootDomain","customIntegrations","customScripts","extractedHostname","integrationObj","storedOrigins","_a","_b","_c","_e","_d","_g","_f","Browser","ALARM_ID","changeIcon","active","Browser.action","Browser.alarms","alarm","cache","timeEntryBackgroundService.current","from","Browser.windows","windows","runningTE","res","TEs","te","stopRunningTimeEntry","timeEntryBackgroundService.fetch","lastTE","IDLE_DETECTION_INTERVAL","IDLE_NOTIFICATION_ID","idleListener","state","timeEntriesData","timeEntriesApi.fetch","runningTimeEntry","lastIdleTimeEntry","triggerIdleNotification","idleFor","notificationId","buttonIndex","shouldContinue","timeEntriesApi.start","configureIdleDetector","windowEvents.configure","createStopDayEndAlarmLister","Browser.permissions","permissions","TogglOrigins","key","changeInfo","newTabEnabled","Browser.runtime","tinyButtonEnabled","contextMenu.configure","contentScript.configure","tinyButton.configure","details","isFirefox","url","showChangelog","Browser.commands","command","errorReport.init","Sentry.wrap","entries","entriesList","a","err","latestEntry","error","loadResources","userBackgroundService.fetchWorkspaces","projectBackgroundService.fetch","projectBackgroundService.fetchClients","projectBackgroundService.fetchTasks","tagBackgroundService.fetch","message","userBackgroundService.fetchWorkspacePreferences","userBackgroundService.fetchWorkspaceFeatures","userBackgroundService.fetchOrganizationFeatures","timeEntryBackgroundService.fetchConstraints","tagBackgroundService.create","projectBackgroundService.create","timeEntryBackgroundService.update","timeEntryBackgroundService.remove","calendarBackgroundService.fetchNextEvents","calendarBackgroundService.fetchCalendarIntegrations","userBackgroundService.logOut","iconHandler.changeIcon"],"mappings":"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"}